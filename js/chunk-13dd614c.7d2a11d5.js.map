{"version":3,"sources":["webpack:///./node_modules/@lezer/lr/dist/index.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./src/components/Codemirror.vue?ce54","webpack:///./node_modules/@codemirror/history/dist/index.js","webpack:///./node_modules/@codemirror/language/dist/index.js","webpack:///./node_modules/@codemirror/gutter/dist/index.js","webpack:///./node_modules/@codemirror/fold/dist/index.js","webpack:///./node_modules/@codemirror/matchbrackets/dist/index.js","webpack:///./node_modules/@codemirror/commands/dist/index.js","webpack:///./node_modules/@codemirror/closebrackets/dist/index.js","webpack:///./node_modules/@codemirror/panel/dist/index.js","webpack:///./node_modules/crelt/index.es.js","webpack:///./node_modules/@codemirror/search/dist/index.js","webpack:///./node_modules/@codemirror/autocomplete/dist/index.js","webpack:///./node_modules/@codemirror/comment/dist/index.js","webpack:///./node_modules/@codemirror/rectangular-selection/dist/index.js","webpack:///./node_modules/@codemirror/highlight/dist/index.js","webpack:///./node_modules/@codemirror/lint/dist/index.js","webpack:///./node_modules/@codemirror/basic-setup/dist/index.js","webpack:///./node_modules/codemirror-foobar2k/dist/index.js","webpack:///./node_modules/@codemirror/theme-one-dark/dist/index.js","webpack:///./src/components/Codemirror.vue","webpack:///./src/components/Codemirror.vue?3d52","webpack:///./src/components/Codemirror.vue?3f8e","webpack:///./node_modules/@lezer/common/dist/index.js","webpack:///./node_modules/path-browserify/index.js"],"names":["Recover","Stack","p","stack","state","reducePos","pos","score","buffer","bufferBase","curContext","lookAhead","parent","this","filter","_","i","concat","cx","parser","context","StackContext","start","push","length","action","depth","type","dPrec","dynamicPrecedence","minRepeatTerm","storeNode","pushState","getGoto","reduceContext","base","count","stateFlag","baseStateID","pop","term","end","size","isReduce","cur","top","index","next","nextEnd","nextState","maxNode","shiftContext","reduce","shift","value","reused","updateContext","tracker","reuse","stream","reset","off","slice","isNode","sim","SimulatedStack","stateSlot","hasAction","nextStates","best","s","some","v","result","split","validAction","target","forceReduce","data","other","dialectID","dialect","flags","last","hash","newCx","emitContext","emitLookAhead","strict","goto","StackBufferCursor","maybeNext","CachedToken","extended","mask","nullToken","InputStream","input","ranges","chunk","chunkOff","chunk2","chunk2Pos","token","rangeIndex","chunkPos","from","range","to","readNext","offset","assoc","idx","charCodeAt","resolved","resolveOffset","endOffset","RangeError","nextChunk","getChunk","n","setDone","read","r","Math","max","min","TokenGroup","id","readToken","prototype","contextual","fallback","extend","ExternalTokenizer","options","group","groupMask","scan","accEnd","allows","overrides","acceptToken","low","high","mid","advance","decodeArray","Type","Uint16Array","array","out","stop","digit","verbose","process","test","LOG","stackIDs","Safety","Rec","cutAt","tree","side","cursor","fullCursor","moveTo","childBefore","childAfter","isError","prevSibling","nextSibling","FragmentCursor","fragments","nodeSet","fragment","safeFrom","safeTo","trees","nextFragment","fr","openStart","openEnd","nextStart","children","positions","prop","TokenCache","tokens","mainToken","actions","tokenizers","map","actionIndex","main","tokenizer","updateCachedToken","startIndex","addActions","setLookAhead","eofTerm","specialized","specializers","set","putAction","pair","Parse","recovering","nextStackID","minStackPos","stoppedAt","topTerm","stacks","bufferLength","stopped","stoppedTokens","newStacks","advanceStack","tok","getMainToken","finished","findFinished","stackToTree","console","log","getName","SyntaxError","runRecovery","forceAll","maxRemaining","sort","a","b","outer","j","sameState","splice","stackID","strictCx","cxHash","cached","nodeAt","match","types","contextHash","useNode","inner","defaultReduce","getActions","localStack","apply","pushStackDedup","restarted","tokenEnd","deadEnd","restart","done","advanceFully","force","forceBase","insert","recoverByInsert","recoverByDelete","close","build","create","topID","maxBufferLength","minRepeatType","WeakMap","get","String","fromCodePoint","Dialect","source","disabled","LRParser","spec","super","wrappers","version","nodeNames","repeatNodeCount","topTerms","Object","keys","topRules","nodeProps","setProp","nodeID","deserialize","propSpec","name","define","undefined","props","indexOf","error","skipped","skippedNodes","tokenArray","tokenData","states","Uint32Array","stateData","maxTerm","dialects","dynamicPrecedences","tokenPrecTable","tokenPrec","termNames","parseDialect","parse","w","loose","table","groupTag","terminal","slot","flag","prev","iPrev","findOffset","config","copy","assign","info","t","found","find","contextTracker","wrap","prec","values","part","Uint8Array","exports","nextTick","fn","args","Array","call","arguments","setTimeout","platform","arch","execPath","title","pid","browser","env","argv","binding","Error","path","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","render","_vm","_h","$createElement","_c","_self","ref","staticStyle","staticRenderFns","fromHistory","isolateHistory","invertedEffects","historyConfig","configs","minDepth","newGroupDelay","changeEnd","changes","iterChangedRanges","historyField_","HistoryState","empty","tr","facet","fromHist","annotation","selection","docChanged","single","item","fromTransaction","undone","updateBranch","addSelection","startState","rest","isolate","addToHistory","addMapping","desc","event","time","userEvent","addChanges","e","toJSON","json","fromJSON","of","domEventHandlers","view","command","inputType","undo","redo","preventDefault","cmd","dispatch","readOnly","historyState","field","undoSelection","redoSelection","effects","mapped","startSelection","selectionsAfter","after","_a","_b","none","invert","doc","selections","branch","maxLen","newEvent","newBranch","isAdjacent","f","_f","_t","eqSelectionShape","conc","MaxSelectionsPerEvent","lastEvent","sels","eq","setSelAfter","popSelection","addMappingToBranch","mapping","mapEvent","extraSelections","mappedChanges","before","mapDesc","fullMapping","composeDesc","mapEffects","joinableUserEvent","prevTime","prevUserEvent","compose","update","annotations","scrollIntoView","historyKeymap","key","run","mac","languageDataProp","defineLanguageFacet","baseData","combine","topNode","extraExtensions","hasOwnProperty","defineProperty","syntaxTree","extension","language","languageData","languageDataFacetAt","lang","allowsNesting","explore","mount","mounted","overlay","ch","topLang","node","enter","setState","LRLanguage","configure","add","isTop","DocInput","cursorPos","string","iter","syncTo","stringStart","sliceString","currentContext","treeLen","viewport","scheduleOn","tempSkipped","startParse","upto","isDone","takeTree","withContext","endTime","Date","now","stopAt","withoutTempSkipped","addTree","parsedPos","cutFragments","newState","fromA","toA","fromB","toB","applyChanges","mapPos","startLen","until","Promise","all","frags","work","vpTo","parseState","init","is","requestIdle","callback","timeout","clearTimeout","requestIdleCallback","idle","cancelIdleCallback","parseWorker","fromClass","working","workScheduled","chunkEnd","chunkBudget","bind","scheduleWork","updateViewport","hasFocus","checkAsyncSchedule","deadline","timeRemaining","viewportFirst","then","catch","err","eventHandlers","languages","enables","LanguageSupport","support","indentService","indentUnit","JSON","stringify","getIndentUnit","unit","tabSize","indentString","cols","ts","getIndentation","service","syntaxIndentation","bias","line","lineAt","simulateBreak","text","simulateDoubleBreak","countColumn","override","overrideIndentation","search","overriden","indentNodeProp","ast","indentFrom","resolveInner","enterUnfinishedNodesBefore","ignoreClosed","indentStrategy","strategy","first","firstChild","closedBy","lastChild","closed","delimitedStrategy","topIndent","TreeIndentContext","textAfterPos","atBreak","isParent","lineIndent","bracketedAligned","openToken","openLine","lineEnd","isSkipped","delimitedIndent","closing","align","units","closedAt","textAfter","space","aligned","column","baseIndent","DontIndentBeyond","indentOnInput","transactionFilter","isUserEvent","rules","languageDataAt","head","newDoc","newSelection","lineStart","indent","exec","norm","sequential","foldService","foldNodeProp","foldInside","syntaxFolding","foldable","constructor","dom","elementClass","toDOM","mapMode","TrackBefore","startSide","endSide","point","gutterLineClass","defaults","class","renderEmptyElements","elementStyle","markers","lineMarker","lineMarkerChange","initialSpacer","updateSpacer","activeGutters","gutters","baseTheme","display","height","boxSizing","left","zIndex","backgroundColor","color","borderRight","flexDirection","flexShrink","minHeight","overflow","padding","minWidth","textAlign","whiteSpace","unfixGutters","x","gutterView","fixed","prevViewport","document","createElement","className","setAttribute","style","contentHeight","conf","gutter","appendChild","position","syncGutters","scrollDOM","insertBefore","contentDOM","updateGutters","vpA","vpB","vpOverlap","geometryChanged","detach","remove","lineClasses","classSet","contexts","documentPadding","viewportLineBlocks","isArray","Text","advanceCursor","finish","change","heightChanged","viewportChanged","known","g","destroy","provide","scrollMargins","textDirection","LTR","offsetWidth","right","asArray","val","collect","localMarkers","extraMarkers","forLine","unshift","above","elements","newElt","GutterElement","bottom","removeChild","spacer","addEventListener","lineBlockAtHeight","clientY","documentTop","cssText","prevMarkers","updated","vp","elt","marginTop","sameMarkers","setMarkers","cls","domPos","iNew","iOld","skipTo","marker","matched","c","compare","lineNumberMarkers","lineNumberConfig","formatNumber","exists","NumberMarker","number","createTextNode","lineNumberGutter","compute","others","m","maxLineNumber","lines","lineNumbers","activeLineGutterMarker","activeLineGutterHighlighter","marks","linePos","highlightActiveLineGutter","mapRange","foldEffect","unfoldEffect","selectedLines","l","lineBlockAt","foldState","folded","foldExists","foldWidget","filterFrom","filterTo","onSelection","between","decorations","maybeEnable","appendConfig","codeFolding","foldCode","announceFold","unfoldCode","fold","lineFrom","lineTo","announce","phrase","foldAll","unfoldAll","foldKeymap","defaultConfig","placeholderDOM","placeholderText","foldConfig","replace","widget","onclick","posAtDOM","element","textContent","foldGutterDefaults","openText","closedText","markerDOM","open","span","foldGutter","fullConfig","canFold","canUnfold","buildMarkers","builder","mark","plugin","click","border","borderRadius","margin","DefaultScanDist","DefaultBrackets","bracketMatchingConfig","afterCursor","brackets","maxScanDistance","matchingMark","nonmatchingMark","bracketMatchingState","deco","matchBrackets","bracketMatchingUnique","bracketMatching","matchingNodes","byProp","openedBy","matches","matchMarkedBrackets","matchPlainBrackets","_state","_pos","matching","firstToken","tokenType","startCh","sliceDoc","bracket","startToken","iterRange","distance","basePos","updateSel","sel","by","mainIndex","setSel","moveSel","how","rangeEnd","forward","cursorByChar","moveByChar","cursorCharLeft","cursorCharRight","cursorByGroup","moveByGroup","cursorGroupLeft","cursorGroupRight","interestingNode","bracketProp","len","moveBySyntax","at","newPos","cursorSyntaxLeft","cursorSyntaxRight","cursorByLine","moved","moveVertically","moveToLineBoundary","cursorLineUp","cursorLineDown","cursorByPage","clientHeight","startPos","coordsAtPos","scrollRect","getBoundingClientRect","y","yMargin","cursorPageUp","cursorPageDown","moveByLineBoundary","cursorLineBoundaryForward","cursorLineBoundaryBackward","cursorLineStart","cursorLineEnd","toMatchingBracket","anchor","cursorMatchingBracket","extendSel","goalColumn","selectByChar","selectCharLeft","selectCharRight","selectByGroup","selectGroupLeft","selectGroupRight","selectSyntaxLeft","selectSyntaxRight","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","selectLineBoundaryForward","selectLineBoundaryBackward","selectLineStart","selectLineEnd","cursorDocStart","cursorDocEnd","selectDocStart","selectDocEnd","selectAll","selectLine","selectedLineBlocks","selectParentSyntax","simplifySelection","deleteBy","changeByRange","towards","skipAtomic","pluginField","atomicRanges","deleteByChar","targetPos","col","drop","deleteCharBackward","deleteCharForward","deleteByGroup","categorize","charCategorizer","cat","nextChar","nextCat","deleteGroupBackward","deleteGroupForward","deleteToLineEnd","deleteToLineStart","splitLine","transposeChars","append","blocks","startLine","endLine","moveLine","block","nextLine","lineBreak","moveLineUp","moveLineDown","copyLine","copyLineUp","copyLineDown","deleteLine","isBetweenBrackets","insertNewlineAndIndent","newlineAndIndent","insertBlankLine","atEof","explode","changeBySelectedLine","atLine","changeSet","indentSelection","indentMore","indentLess","keep","emacsStyleKeymap","standardKeymap","defaultKeymap","indentWithTab","closeBracketEffect","TrackAfter","skipBracketEffect","closedBracket","bracketState","prevLineStart","effect","closeBrackets","inputHandler","handleInput","definedClosing","charAt","composing","insertBracket","deleteBracketPair","dont","prevChar","closeBracketsKeymap","handleSame","handleOpen","closedBracketAt","handleClose","closeBefore","_open","allowTriple","nodeStart","isTriple","Word","panelConfig","topContainer","bottomContainer","getPanel","panel","panelPlugin","specs","panels","showPanel","PanelGroup","sync","classList","container","syncClasses","scrollMargin","classes","syncDOM","curDOM","parentNode","rm","innerHeight","themeClasses","borderBottom","borderTop","crelt","nodeType","child","basicNormalize","normalize","query","bufferPos","bufferStart","nextOverlapping","peek","str","code","Symbol","iterator","baseFlags","unicode","RegExpCursor","curLine","MultilineRegExpCursor","re","RegExp","ignoreCase","curLineStart","matchPos","getLine","skip","lastIndex","flattened","FlattenedDoc","flat","cachedFrom","validRegExp","createLineDialog","onkeydown","keyCode","dialogEffect","focus","go","onsubmit","sign","ln","cl","percent","pc","round","docLine","dialogField","gotoLine","baseTheme$1","querySelector","fontSize","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","highlightConfig","highlightSelectionMatches","ext","defaultTheme","matchHighlighter","matchDeco","mainMatchDeco","getDeco","selectionSet","check","word","wordAt","trim","visibleRanges","selectWord","newSel","findNextOccurrence","fullWord","cycled","selectNextOccurrence","searchedText","addRange","searchConfigFacet","caseSensitive","matchCase","createPanel","SearchQuery","regexp","valid","RegExpQuery","StringQuery","QueryType","unquoted","toLowerCase","curFrom","curTo","prevMatchInRange","_result","limit","setSearchQuery","togglePanel","searchState","SearchState","defaultQuery","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","highlight","selected","searchCommand","openSearchPanel","findNext","nextMatch","announceMatch","findPrevious","prevMatch","selectMatches","matchAll","selectSelectionMatches","replaceNext","replacement","toText","getReplacement","replaceAll","selText","searchInput","root","activeElement","select","searchExtensions","closeSearchPanel","contains","searchKeymap","scope","button","content","commit","searchField","placeholder","onchange","onkeyup","replaceField","caseField","checked","reField","keydown","shiftKey","transactions","setQuery","AnnounceMargin","Break","font","marginRight","lowest","explicit","abortListeners","expr","ensureAnchor","listener","toSet","chars","join","words","prefixMatch","label","completeFromList","list","o","every","matchBefore","Option","completion","addStart","addEnd","pickedCompletion","applyCompletion","option","SourceCache","asSource","pattern","any","precise","byWord","char","upper","toUpperCase","astral","direct","anyTo","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","hasLower","wordAdjacent","prevType","completionConfig","activateOnTyping","maxRenderedOptions","optionClass","aboveCursor","icons","addToOptions","joinClass","optionContent","icon","_s","labelElt","detail","detailElt","createInfoDialog","rangeAroundSelected","total","floor","stateField","placeInfo","measureInfo","write","positionInfo","cState","nodeName","createListBox","requestMeasure","updateSelectedOption","opt","hasAttribute","removeAttribute","listRect","infoRect","selRect","RTL","spaceLeft","spaceRight","innerWidth","width","toggle","ul","li","completionTooltip","self","scrollTop","MaxOptions","boost","sortOptions","active","hasResult","matcher","cmpOption","CompletionDialog","attrs","tooltip","timestamp","makeAttrs","selectedValue","completionState","CompletionState","random","toString","sources","ActiveSource","touchesRange","sameResults","setSelectedEffect","setSelected","baseAttrs","iA","iB","endA","endB","dScore","localeCompare","getUserEvent","explicitPos","handleUserEvent","handleChange","startCompletionEffect","closeCompletionEffect","setActiveEffect","ActiveResult","contentAttributes","CompletionInteractMargin","moveCompletionSelection","step","offsetHeight","acceptCompletion","startCompletion","closeCompletion","RunningQuery","updates","DebounceTime","MaxUpdateCount","MinAbortTime","completionPlugin","debounceUpdate","running","debounceAccept","startQuery","doesReset","handler","q","startUpdate","pending","aborted","scheduleAccept","accept","current","fontFamily","maxWidth_fallback","maxWidth","maxHeight","listStyle","overflowX","textOverflow","lineHeight","background","opacity","verticalAlign","borderLeft","textDecoration","marginLeft","fontStyle","paddingRight","autocompletion","completionKeymapExt","completionKeymap","highest","computeN","toggleComment","getConfig","toggleLineComment","toggleBlockComment","changeLineComment","changeBlockComment","commentKeymap","SearchMargin","findBlockComment","startText","endText","textBefore","spaceBefore","spaceAfter","beforeOff","startSpace","endSpace","endOff","comments","comment","prevLine","startI","minIndent","MaxOff","rectangleFor","startOff","startCol","endCol","absoluteColumn","abs","defaultCharacterWidth","getPos","posAtCoords","clientX","rectangleSelectionStyle","startSel","newStart","newLine","_extend","multiple","rectangularSelection","eventFilter","altKey","mouseSelectionStyle","nextTagID","Tag","modified","tag","mod","Modifier","nextModifierID","instances","mods","sameArray","permute","styleTags","byName","tags","pieces","mode","rule","Rule","ruleNodeProp","highlightStyle","stylings","combinedMatch","fallbackHighlightStyle","getHighlightStyle","modSpec","def","newName","module","treeHighlighter","styleModule","styles","cache","markCache","buildDeco","styleChange","highlightTreeRange","nodeStack","flush","inheritedClass","opaque","matchContext","st","startSpan","hasChild","nextPos","rangeFrom","rangeTo","highlightRange","d","typeName","propertyName","literal","heading","keyword","operator","punctuation","meta","lineComment","blockComment","docComment","variableName","tagName","attributeName","labelName","namespace","macroName","docString","character","attributeValue","integer","float","bool","escape","url","null","atom","modifier","operatorKeyword","controlKeyword","definitionKeyword","moduleKeyword","derefOperator","arithmeticOperator","logicOperator","bitwiseOperator","compareOperator","updateOperator","definitionOperator","typeOperator","controlOperator","separator","angleBracket","squareBracket","paren","brace","heading1","heading2","heading3","heading4","heading5","heading6","contentSeparator","quote","emphasis","strong","link","monospace","strikethrough","inserted","deleted","changed","invalid","documentMeta","processingInstruction","definition","defineModifier","constant","function","standard","local","special","defaultHighlightStyle","fontWeight","SelectedDiagnostic","diagnostic","diagnostics","attributes","severity","findDiagnostic","maybeEnableLint","lintState","activeMark","lintTooltip","setDiagnosticsEffect","movePanelSelection","selPos","stackStart","stackEnd","diagnosticsTooltip","renderDiagnostic","openLintPanel","closeLintPanel","nextDiagnostic","lintKeymap","assignKeys","assigned","inPanel","message","keyIndex","nameElt","onmousedown","PanelItem","items","moveSelection","selectedIndex","tabIndex","role","needsSync","newSelectedItem","_start","_end","svg","encodeURIComponent","underline","backgroundPosition","backgroundRepeat","paddingBottom","backgroundImage","borderBottomColor","overflowY","background_fallback","color_fallback","basicSetup","allowMultipleSelections","newline$1","newlineEmpty","eof","newline","carriageReturn","tab","newlines","spaces","Foobar2000QueryLanguage","ParenthesizedExpression","MetadataField","Comparator","BinaryToken","Number","Function","Comment","PlainText","commentTokens","Foobar2000Query","chalky","coral","cyan","ivory","stone","malibu","sage","whiskey","violet","darkBackground","highlightBackground","tooltipBackground","oneDarkTheme","theme","caretColor","borderLeftColor","outline","borderTopColor","dark","oneDarkHighlightStyle","oneDark","languageConf","$emit","editor","$props","extensions","$store","queryMode","customFields","customFunctions","updateListener","updateQuery","$refs","codemirror","default","component","DefaultBufferLength","nextPropID","Range","NodeProp","perNode","NodeType","noProps","src","groups","NodeSet","newTypes","newProps","CachedNode","CachedInnerNode","Tree","TreeCursor","_tree","TreeNode","resolveNode","leave","mustLeave","isAnonymous","balanceRange","propValues","makeTree","buildTree","FlatBufferCursor","TreeBuffer","childString","endIndex","pick","checkSide","endI","overlays","_from","_parent","findChild","BufferNode","BufferContext","nextChild","buffers","rPos","nextSignificantParent","getChildren","externalSibling","parentStart","bufferNode","yieldNode","yieldBuf","yield","enterChild","sibling","atLastNode","move","takeNode","minPos","inRepeat","lookAheadAtStart","findBufferSize","endPos","copyToBuffer","localChildren","localPositions","localInRepeat","lastGroup","lastEnd","makeRepeatLeaf","reverse","make","makeBalanced","lookAheadProp","lastI","maxSize","fork","minStart","nodeSize","localSkipped","nodeSizeCache","balanceType","mkTop","mkTree","maxChild","ceil","divide","groupFrom","groupStart","groupSize","nextSize","only","TreeFragment","partial","minGap","fI","nextF","cI","nextC","cut","fFrom","fTo","Parser","StringInput","createParse","normalizeArray","parts","allowAboveRoot","up","basename","matchedSlash","xs","res","resolvedPath","resolvedAbsolute","TypeError","isAbsolute","trailingSlash","substr","paths","relative","arr","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","hasRoot","extname","startDot","startPart","preDotState"],"mappings":"mHAAA,oFAkZIA,EAlZJ,YAMA,MAAMC,EAEF,YAEAC,EAGAC,EAEAC,EAMAC,EAEAC,EAIAC,EAKAC,EAOAC,EAEAC,EAEAC,EAAY,EAMZC,GACIC,KAAKX,EAAIA,EACTW,KAAKV,MAAQA,EACbU,KAAKT,MAAQA,EACbS,KAAKR,UAAYA,EACjBQ,KAAKP,IAAMA,EACXO,KAAKN,MAAQA,EACbM,KAAKL,OAASA,EACdK,KAAKJ,WAAaA,EAClBI,KAAKH,WAAaA,EAClBG,KAAKF,UAAYA,EACjBE,KAAKD,OAASA,EAGlB,WACI,MAAO,IAAIC,KAAKV,MAAMW,OAAO,CAACC,EAAGC,IAAMA,EAAI,GAAK,GAAGC,OAAOJ,KAAKT,WAAWS,KAAKP,MAAMO,KAAKN,MAAQ,IAAMM,KAAKN,MAAQ,KAIzH,aAAaL,EAAGE,EAAOE,EAAM,GACzB,IAAIY,EAAKhB,EAAEiB,OAAOC,QAClB,OAAO,IAAInB,EAAMC,EAAG,GAAIE,EAAOE,EAAKA,EAAK,EAAG,GAAI,EAAGY,EAAK,IAAIG,EAAaH,EAAIA,EAAGI,OAAS,KAAM,EAAG,MAMtG,cAAgB,OAAOT,KAAKH,WAAaG,KAAKH,WAAWU,QAAU,KAInE,UAAUhB,EAAOkB,GACbT,KAAKV,MAAMoB,KAAKV,KAAKT,MAAOkB,EAAOT,KAAKJ,WAAaI,KAAKL,OAAOgB,QACjEX,KAAKT,MAAQA,EAIjB,OAAOqB,GACH,IAAIC,EAAQD,GAAU,GAA2BE,EAAgB,MAATF,GACpD,OAAEN,GAAWN,KAAKX,EAClB0B,EAAQT,EAAOU,kBAAkBF,GAGrC,GAFIC,IACAf,KAAKN,OAASqB,GACL,GAATF,EAOA,OAJIC,EAAOR,EAAOW,eACdjB,KAAKkB,UAAUJ,EAAMd,KAAKR,UAAWQ,KAAKR,UAAW,GAAG,GAC5DQ,KAAKmB,UAAUb,EAAOc,QAAQpB,KAAKT,MAAOuB,GAAM,GAAOd,KAAKR,gBAC5DQ,KAAKqB,cAAcP,EAAMd,KAAKR,WAQlC,IAAI8B,EAAOtB,KAAKV,MAAMqB,OAAwB,GAAbE,EAAQ,IAAoB,OAATD,EAAiC,EAAI,GACrFH,EAAQT,KAAKV,MAAMgC,EAAO,GAC1B1B,EAAaI,KAAKV,MAAMgC,EAAO,GAAIC,EAAQvB,KAAKJ,WAAaI,KAAKL,OAAOgB,OAASf,EAEtF,GAAIkB,EAAOR,EAAOW,eAA2B,OAATL,EAAmC,CACnE,IAAInB,EAAMa,EAAOkB,UAAUxB,KAAKT,MAAO,GAAmBS,KAAKP,IAAMO,KAAKR,UAC1EQ,KAAKkB,UAAUJ,EAAML,EAAOhB,EAAK8B,EAAQ,GAAG,GAEhD,GAAa,OAATX,EACAZ,KAAKT,MAAQS,KAAKV,MAAMgC,OAEvB,CACD,IAAIG,EAAczB,KAAKV,MAAMgC,EAAO,GACpCtB,KAAKT,MAAQe,EAAOc,QAAQK,EAAaX,GAAM,GAEnD,MAAOd,KAAKV,MAAMqB,OAASW,EACvBtB,KAAKV,MAAMoC,MACf1B,KAAKqB,cAAcP,EAAML,GAI7B,UAAUkB,EAAMlB,EAAOmB,EAAKC,EAAO,EAAGC,GAAW,GAC7C,GAAY,GAARH,EAAqB,CACrB,IAAII,EAAM/B,KAAMgC,EAAMhC,KAAKL,OAAOgB,OAKlC,GAJW,GAAPqB,GAAYD,EAAIhC,SAChBiC,EAAMD,EAAInC,WAAamC,EAAIhC,OAAOH,WAClCmC,EAAMA,EAAIhC,QAEViC,EAAM,GAA4B,GAAvBD,EAAIpC,OAAOqC,EAAM,IAAqBD,EAAIpC,OAAOqC,EAAM,IAAM,EAAG,CAC3E,GAAIvB,GAASmB,EACT,OACJ,GAAIG,EAAIpC,OAAOqC,EAAM,IAAMvB,EAEvB,YADAsB,EAAIpC,OAAOqC,EAAM,GAAKJ,IAKlC,GAAKE,GAAY9B,KAAKP,KAAOmC,EAGxB,CACD,IAAIK,EAAQjC,KAAKL,OAAOgB,OACxB,GAAIsB,EAAQ,GAA+B,GAA1BjC,KAAKL,OAAOsC,EAAQ,GACjC,MAAOA,EAAQ,GAAKjC,KAAKL,OAAOsC,EAAQ,GAAKL,EAEzC5B,KAAKL,OAAOsC,GAASjC,KAAKL,OAAOsC,EAAQ,GACzCjC,KAAKL,OAAOsC,EAAQ,GAAKjC,KAAKL,OAAOsC,EAAQ,GAC7CjC,KAAKL,OAAOsC,EAAQ,GAAKjC,KAAKL,OAAOsC,EAAQ,GAC7CjC,KAAKL,OAAOsC,EAAQ,GAAKjC,KAAKL,OAAOsC,EAAQ,GAC7CA,GAAS,EACLJ,EAAO,IACPA,GAAQ,GAEpB7B,KAAKL,OAAOsC,GAASN,EACrB3B,KAAKL,OAAOsC,EAAQ,GAAKxB,EACzBT,KAAKL,OAAOsC,EAAQ,GAAKL,EACzB5B,KAAKL,OAAOsC,EAAQ,GAAKJ,OAlBzB7B,KAAKL,OAAOe,KAAKiB,EAAMlB,EAAOmB,EAAKC,GAuB3C,MAAMjB,EAAQsB,EAAMC,GAChB,IAAI1B,EAAQT,KAAKP,IACjB,GAAa,OAATmB,EACAZ,KAAKmB,UAAmB,MAATP,EAAgCZ,KAAKP,UAEnD,GAAwC,IAA1B,OAATmB,GAAsC,CAC5C,IAAIwB,EAAYxB,GAAQ,OAAEN,GAAWN,KAAKX,GACtC8C,EAAUnC,KAAKP,KAAOyC,GAAQ5B,EAAO+B,WACrCrC,KAAKP,IAAM0C,EACN7B,EAAOkB,UAAUY,EAAW,KAC7BpC,KAAKR,UAAY2C,IAEzBnC,KAAKmB,UAAUiB,EAAW3B,GAC1BT,KAAKsC,aAAaJ,EAAMzB,GACpByB,GAAQ5B,EAAO+B,SACfrC,KAAKL,OAAOe,KAAKwB,EAAMzB,EAAO0B,EAAS,QAG3CnC,KAAKP,IAAM0C,EACXnC,KAAKsC,aAAaJ,EAAMzB,GACpByB,GAAQlC,KAAKX,EAAEiB,OAAO+B,SACtBrC,KAAKL,OAAOe,KAAKwB,EAAMzB,EAAO0B,EAAS,GAKnD,MAAMvB,EAAQsB,EAAMC,GACH,MAATvB,EACAZ,KAAKuC,OAAO3B,GAEZZ,KAAKwC,MAAM5B,EAAQsB,EAAMC,GAIjC,QAAQM,EAAOP,GACX,IAAID,EAAQjC,KAAKX,EAAEqD,OAAO/B,OAAS,GAC/BsB,EAAQ,GAAKjC,KAAKX,EAAEqD,OAAOT,IAAUQ,KACrCzC,KAAKX,EAAEqD,OAAOhC,KAAK+B,GACnBR,KAEJ,IAAIxB,EAAQT,KAAKP,IACjBO,KAAKR,UAAYQ,KAAKP,IAAMgB,EAAQgC,EAAM9B,OAC1CX,KAAKmB,UAAUe,EAAMzB,GACrBT,KAAKL,OAAOe,KAAKuB,EAAOxB,EAAOT,KAAKR,WAAY,GAC5CQ,KAAKH,YACLG,KAAK2C,cAAc3C,KAAKH,WAAW+C,QAAQC,MAAM7C,KAAKH,WAAWU,QAASkC,EAAOzC,KAAMA,KAAKX,EAAEyD,OAAOC,MAAM/C,KAAKP,IAAMgD,EAAM9B,UAMpI,QACI,IAAIZ,EAASC,KACTgD,EAAMjD,EAAOJ,OAAOgB,OAKxB,MAAOqC,EAAM,GAAKjD,EAAOJ,OAAOqD,EAAM,GAAKjD,EAAOP,UAC9CwD,GAAO,EACX,IAAIrD,EAASI,EAAOJ,OAAOsD,MAAMD,GAAM1B,EAAOvB,EAAOH,WAAaoD,EAElE,MAAOjD,GAAUuB,GAAQvB,EAAOH,WAC5BG,EAASA,EAAOA,OACpB,OAAO,IAAIX,EAAMY,KAAKX,EAAGW,KAAKV,MAAM2D,QAASjD,KAAKT,MAAOS,KAAKR,UAAWQ,KAAKP,IAAKO,KAAKN,MAAOC,EAAQ2B,EAAMtB,KAAKH,WAAYG,KAAKF,UAAWC,GAIlJ,gBAAgBmC,EAAMC,GAClB,IAAIe,EAAShB,GAAQlC,KAAKX,EAAEiB,OAAO+B,QAC/Ba,GACAlD,KAAKkB,UAAUgB,EAAMlC,KAAKP,IAAK0C,EAAS,GAC5CnC,KAAKkB,UAAU,EAAalB,KAAKP,IAAK0C,EAASe,EAAS,EAAI,GAC5DlD,KAAKP,IAAMO,KAAKR,UAAY2C,EAC5BnC,KAAKN,OAAS,IAMlB,SAASiC,GACL,IAAK,IAAIwB,EAAM,IAAIC,EAAepD,QAAS,CACvC,IAAIY,EAASZ,KAAKX,EAAEiB,OAAO+C,UAAUF,EAAI5D,MAAO,IAA0BS,KAAKX,EAAEiB,OAAOgD,UAAUH,EAAI5D,MAAOoC,GAC7G,GAAyC,IAA3B,MAATf,GACD,OAAO,EACX,GAAc,GAAVA,EACA,OAAO,EACXuC,EAAIZ,OAAO3B,IAMnB,gBAAgBsB,GACZ,GAAIlC,KAAKV,MAAMqB,QAAU,IACrB,MAAO,GACX,IAAI4C,EAAavD,KAAKX,EAAEiB,OAAOiD,WAAWvD,KAAKT,OAC/C,GAAIgE,EAAW5C,OAAS,GAAwBX,KAAKV,MAAMqB,QAAU,IAAkC,CACnG,IAAI6C,EAAO,GACX,IAAK,IAAWC,EAAPtD,EAAI,EAAMA,EAAIoD,EAAW5C,OAAQR,GAAK,GACtCsD,EAAIF,EAAWpD,EAAI,KAAOH,KAAKT,OAASS,KAAKX,EAAEiB,OAAOgD,UAAUG,EAAGvB,IACpEsB,EAAK9C,KAAK6C,EAAWpD,GAAIsD,GAEjC,GAAIzD,KAAKV,MAAMqB,OAAS,IACpB,IAAK,IAAIR,EAAI,EAAGqD,EAAK7C,OAAS,GAAwBR,EAAIoD,EAAW5C,OAAQR,GAAK,EAAG,CACjF,IAAIsD,EAAIF,EAAWpD,EAAI,GAClBqD,EAAKE,KAAK,CAACC,EAAGxD,IAAW,EAAJA,GAAUwD,GAAKF,IACrCD,EAAK9C,KAAK6C,EAAWpD,GAAIsD,GAErCF,EAAaC,EAEjB,IAAII,EAAS,GACb,IAAK,IAAIzD,EAAI,EAAGA,EAAIoD,EAAW5C,QAAUiD,EAAOjD,OAAS,EAAiBR,GAAK,EAAG,CAC9E,IAAIsD,EAAIF,EAAWpD,EAAI,GACvB,GAAIsD,GAAKzD,KAAKT,MACV,SACJ,IAAID,EAAQU,KAAK6D,QACjBvE,EAAM4B,UAAU,EAAa5B,EAAMG,IAAKH,EAAMG,IAAK,GAAG,GACtDH,EAAM6B,UAAUsC,EAAGzD,KAAKP,KACxBH,EAAMgD,aAAaiB,EAAWpD,GAAIH,KAAKP,KACvCH,EAAMI,OAAS,IACfkE,EAAOlD,KAAKpB,GAEhB,OAAOsE,EAKX,cACI,IAAIrB,EAASvC,KAAKX,EAAEiB,OAAO+C,UAAUrD,KAAKT,MAAO,GACjD,GAAyC,IAA3B,MAATgD,GACD,OAAO,EACX,IAAI,OAAEjC,GAAWN,KAAKX,EACtB,IAAKiB,EAAOwD,YAAY9D,KAAKT,MAAOgD,GAAS,CACzC,IAAI1B,EAAQ0B,GAAU,GAA2BZ,EAAgB,MAATY,EACpDwB,EAAS/D,KAAKV,MAAMqB,OAAiB,EAARE,EACjC,GAAIkD,EAAS,GAAKzD,EAAOc,QAAQpB,KAAKV,MAAMyE,GAASpC,GAAM,GAAS,EAChE,OAAO,EACX3B,KAAKkB,UAAU,EAAalB,KAAKR,UAAWQ,KAAKR,UAAW,GAAG,GAC/DQ,KAAKN,OAAS,IAGlB,OADAM,KAAKuC,OAAOA,IACL,EAGX,WACI,OAAQvC,KAAKX,EAAEiB,OAAOkB,UAAUxB,KAAKT,MAAO,GACxC,IAAKS,KAAKgE,cAAe,CACrBhE,KAAKkB,UAAU,EAAalB,KAAKP,IAAKO,KAAKP,IAAK,GAAG,GACnD,MAGR,OAAOO,KAKX,cACI,GAAyB,GAArBA,KAAKV,MAAMqB,OACX,OAAO,EACX,IAAI,OAAEL,GAAWN,KAAKX,EACtB,OAAqE,OAA9DiB,EAAO2D,KAAK3D,EAAO+C,UAAUrD,KAAKT,MAAO,MAC3Ce,EAAO+C,UAAUrD,KAAKT,MAAO,GAKtC,UACIS,KAAKT,MAAQS,KAAKV,MAAM,GACxBU,KAAKV,MAAMqB,OAAS,EAGxB,UAAUuD,GACN,GAAIlE,KAAKT,OAAS2E,EAAM3E,OAASS,KAAKV,MAAMqB,QAAUuD,EAAM5E,MAAMqB,OAC9D,OAAO,EACX,IAAK,IAAIR,EAAI,EAAGA,EAAIH,KAAKV,MAAMqB,OAAQR,GAAK,EACxC,GAAIH,KAAKV,MAAMa,IAAM+D,EAAM5E,MAAMa,GAC7B,OAAO,EACf,OAAO,EAGX,aAAe,OAAOH,KAAKX,EAAEiB,OAG7B,eAAe6D,GAAa,OAAOnE,KAAKX,EAAEiB,OAAO8D,QAAQC,MAAMF,GAC/D,aAAaxC,EAAMlB,GACXT,KAAKH,YACLG,KAAK2C,cAAc3C,KAAKH,WAAW+C,QAAQJ,MAAMxC,KAAKH,WAAWU,QAASoB,EAAM3B,KAAMA,KAAKX,EAAEyD,OAAOC,MAAMtC,KAElH,cAAckB,EAAMlB,GACZT,KAAKH,YACLG,KAAK2C,cAAc3C,KAAKH,WAAW+C,QAAQL,OAAOvC,KAAKH,WAAWU,QAASoB,EAAM3B,KAAMA,KAAKX,EAAEyD,OAAOC,MAAMtC,KAGnH,cACI,IAAI6D,EAAOtE,KAAKL,OAAOgB,OAAS,GAC5B2D,EAAO,IAA2B,GAAtBtE,KAAKL,OAAO2E,KACxBtE,KAAKL,OAAOe,KAAKV,KAAKH,WAAW0E,KAAMvE,KAAKR,UAAWQ,KAAKR,WAAY,GAGhF,gBACI,IAAI8E,EAAOtE,KAAKL,OAAOgB,OAAS,GAC5B2D,EAAO,IAA2B,GAAtBtE,KAAKL,OAAO2E,KACxBtE,KAAKL,OAAOe,KAAKV,KAAKF,UAAWE,KAAKR,UAAWQ,KAAKR,WAAY,GAE1E,cAAce,GACV,GAAIA,GAAWP,KAAKH,WAAWU,QAAS,CACpC,IAAIiE,EAAQ,IAAIhE,EAAaR,KAAKH,WAAW+C,QAASrC,GAClDiE,EAAMD,MAAQvE,KAAKH,WAAW0E,MAC9BvE,KAAKyE,cACTzE,KAAKH,WAAa2E,GAI1B,aAAa1E,GACLA,EAAYE,KAAKF,YACjBE,KAAK0E,gBACL1E,KAAKF,UAAYA,GAIzB,QACQE,KAAKH,YAAcG,KAAKH,WAAW+C,QAAQ+B,QAC3C3E,KAAKyE,cACLzE,KAAKF,UAAY,GACjBE,KAAK0E,iBAGjB,MAAMlE,EACF,YAAYoC,EAASrC,GACjBP,KAAK4C,QAAUA,EACf5C,KAAKO,QAAUA,EACfP,KAAKuE,KAAO3B,EAAQ+B,OAAS/B,EAAQ2B,KAAKhE,GAAW,IAI7D,SAAWpB,GACPA,EAAQA,EAAQ,UAAY,KAAO,SACnCA,EAAQA,EAAQ,UAAY,KAAO,SACnCA,EAAQA,EAAQ,UAAY,KAAO,SACnCA,EAAQA,EAAQ,WAAa,GAAK,UAClCA,EAAQA,EAAQ,uBAAyB,KAAO,sBAChDA,EAAQA,EAAQ,0BAA4B,KAAO,0BANvD,CAOGA,IAAYA,EAAU,KAGzB,MAAMiE,EACF,YAAY3C,GACRT,KAAKS,MAAQA,EACbT,KAAKT,MAAQkB,EAAMlB,MACnBS,KAAKV,MAAQmB,EAAMnB,MACnBU,KAAKsB,KAAOtB,KAAKV,MAAMqB,OAE3B,OAAOC,GACH,IAAIe,EAAgB,MAATf,EAAgCC,EAAQD,GAAU,GAChD,GAATC,GACIb,KAAKV,OAASU,KAAKS,MAAMnB,QACzBU,KAAKV,MAAQU,KAAKV,MAAM2D,SAC5BjD,KAAKV,MAAMoB,KAAKV,KAAKT,MAAO,EAAG,GAC/BS,KAAKsB,MAAQ,GAGbtB,KAAKsB,MAAsB,GAAbT,EAAQ,GAE1B,IAAI+D,EAAO5E,KAAKS,MAAMpB,EAAEiB,OAAOc,QAAQpB,KAAKV,MAAMU,KAAKsB,KAAO,GAAIK,GAAM,GACxE3B,KAAKT,MAAQqF,GAKrB,MAAMC,EACF,YAAYvF,EAAOG,EAAKwC,GACpBjC,KAAKV,MAAQA,EACbU,KAAKP,IAAMA,EACXO,KAAKiC,MAAQA,EACbjC,KAAKL,OAASL,EAAMK,OACF,GAAdK,KAAKiC,OACLjC,KAAK8E,YAEb,cAAcxF,EAAOG,EAAMH,EAAMM,WAAaN,EAAMK,OAAOgB,QACvD,OAAO,IAAIkE,EAAkBvF,EAAOG,EAAKA,EAAMH,EAAMM,YAEzD,YACI,IAAIsC,EAAOlC,KAAKV,MAAMS,OACV,MAARmC,IACAlC,KAAKiC,MAAQjC,KAAKV,MAAMM,WAAasC,EAAKtC,WAC1CI,KAAKV,MAAQ4C,EACblC,KAAKL,OAASuC,EAAKvC,QAG3B,SAAW,OAAOK,KAAKL,OAAOK,KAAKiC,MAAQ,GAC3C,YAAc,OAAOjC,KAAKL,OAAOK,KAAKiC,MAAQ,GAC9C,UAAY,OAAOjC,KAAKL,OAAOK,KAAKiC,MAAQ,GAC5C,WAAa,OAAOjC,KAAKL,OAAOK,KAAKiC,MAAQ,GAC7C,OACIjC,KAAKiC,OAAS,EACdjC,KAAKP,KAAO,EACM,GAAdO,KAAKiC,OACLjC,KAAK8E,YAEb,OACI,OAAO,IAAID,EAAkB7E,KAAKV,MAAOU,KAAKP,IAAKO,KAAKiC,QAIhE,MAAM8C,EACF,cACI/E,KAAKS,OAAS,EACdT,KAAKyC,OAAS,EACdzC,KAAK4B,KAAO,EACZ5B,KAAKgF,UAAY,EACjBhF,KAAKF,UAAY,EACjBE,KAAKiF,KAAO,EACZjF,KAAKO,QAAU,GAGvB,MAAM2E,EAAY,IAAIH,EAKtB,MAAMI,EAEF,YAEAC,EAEAC,GACIrF,KAAKoF,MAAQA,EACbpF,KAAKqF,OAASA,EAEdrF,KAAKsF,MAAQ,GAEbtF,KAAKuF,SAAW,EAEhBvF,KAAKwF,OAAS,GACdxF,KAAKyF,UAAY,EAGjBzF,KAAKkC,MAAQ,EAEblC,KAAK0F,MAAQR,EACblF,KAAK2F,WAAa,EAClB3F,KAAKP,IAAMO,KAAK4F,SAAWP,EAAO,GAAGQ,KACrC7F,KAAK8F,MAAQT,EAAO,GACpBrF,KAAK4B,IAAMyD,EAAOA,EAAO1E,OAAS,GAAGoF,GACrC/F,KAAKgG,WAET,cAAcC,EAAQC,GAClB,IAAIJ,EAAQ9F,KAAK8F,MAAO7D,EAAQjC,KAAK2F,WACjClG,EAAMO,KAAKP,IAAMwG,EACrB,MAAOxG,EAAMqG,EAAMD,KAAM,CACrB,IAAK5D,EACD,OAAO,KACX,IAAIC,EAAOlC,KAAKqF,SAASpD,GACzBxC,GAAOqG,EAAMD,KAAO3D,EAAK6D,GACzBD,EAAQ5D,EAEZ,MAAOgE,EAAQ,EAAIzG,EAAMqG,EAAMC,GAAKtG,GAAOqG,EAAMC,GAAI,CACjD,GAAI9D,GAASjC,KAAKqF,OAAO1E,OAAS,EAC9B,OAAO,KACX,IAAIuB,EAAOlC,KAAKqF,SAASpD,GACzBxC,GAAOyC,EAAK2D,KAAOC,EAAMC,GACzBD,EAAQ5D,EAEZ,OAAOzC,EAWX,KAAKwG,GACD,IAAkCxG,EAAKmE,EAAnCuC,EAAMnG,KAAKuF,SAAWU,EAC1B,GAAIE,GAAO,GAAKA,EAAMnG,KAAKsF,MAAM3E,OAC7BlB,EAAMO,KAAKP,IAAMwG,EACjBrC,EAAS5D,KAAKsF,MAAMc,WAAWD,OAE9B,CACD,IAAIE,EAAWrG,KAAKsG,cAAcL,EAAQ,GAC1C,GAAgB,MAAZI,EACA,OAAQ,EAEZ,GADA5G,EAAM4G,EACF5G,GAAOO,KAAKyF,WAAahG,EAAMO,KAAKyF,UAAYzF,KAAKwF,OAAO7E,OAC5DiD,EAAS5D,KAAKwF,OAAOY,WAAW3G,EAAMO,KAAKyF,eAE1C,CACD,IAAItF,EAAIH,KAAK2F,WAAYG,EAAQ9F,KAAK8F,MACtC,MAAOA,EAAMC,IAAMtG,EACfqG,EAAQ9F,KAAKqF,SAASlF,GAC1BH,KAAKwF,OAASxF,KAAKoF,MAAME,MAAMtF,KAAKyF,UAAYhG,GAC5CA,EAAMO,KAAKwF,OAAO7E,OAASmF,EAAMC,KACjC/F,KAAKwF,OAASxF,KAAKwF,OAAOvC,MAAM,EAAG6C,EAAMC,GAAKtG,IAClDmE,EAAS5D,KAAKwF,OAAOY,WAAW,IAKxC,OAFI3G,GAAOO,KAAK0F,MAAM5F,YAClBE,KAAK0F,MAAM5F,UAAYL,EAAM,GAC1BmE,EAKX,YAAY8B,EAAOa,EAAY,GAC3B,IAAI3E,EAAM2E,EAAYvG,KAAKsG,cAAcC,GAAY,GAAKvG,KAAKP,IAC/D,GAAW,MAAPmC,GAAeA,EAAM5B,KAAK0F,MAAMjF,MAChC,MAAM,IAAI+F,WAAW,2BACzBxG,KAAK0F,MAAMjD,MAAQiD,EACnB1F,KAAK0F,MAAM9D,IAAMA,EAErB,WACI,GAAI5B,KAAKP,KAAOO,KAAKyF,WAAazF,KAAKP,IAAMO,KAAKyF,UAAYzF,KAAKwF,OAAO7E,OAAQ,CAC9E,IAAI,MAAE2E,EAAK,SAAEM,GAAa5F,KAC1BA,KAAKsF,MAAQtF,KAAKwF,OAClBxF,KAAK4F,SAAW5F,KAAKyF,UACrBzF,KAAKwF,OAASF,EACdtF,KAAKyF,UAAYG,EACjB5F,KAAKuF,SAAWvF,KAAKP,IAAMO,KAAK4F,aAE/B,CACD5F,KAAKwF,OAASxF,KAAKsF,MACnBtF,KAAKyF,UAAYzF,KAAK4F,SACtB,IAAIa,EAAYzG,KAAKoF,MAAME,MAAMtF,KAAKP,KAClCmC,EAAM5B,KAAKP,IAAMgH,EAAU9F,OAC/BX,KAAKsF,MAAQ1D,EAAM5B,KAAK8F,MAAMC,GAAKU,EAAUxD,MAAM,EAAGjD,KAAK8F,MAAMC,GAAK/F,KAAKP,KAAOgH,EAClFzG,KAAK4F,SAAW5F,KAAKP,IACrBO,KAAKuF,SAAW,GAGxB,WACI,OAAIvF,KAAKuF,UAAYvF,KAAKsF,MAAM3E,SAC5BX,KAAK0G,WACD1G,KAAKuF,UAAYvF,KAAKsF,MAAM3E,QACrBX,KAAKkC,MAAQ,EAErBlC,KAAKkC,KAAOlC,KAAKsF,MAAMc,WAAWpG,KAAKuF,UAIlD,QAAQoB,EAAI,GACR3G,KAAKuF,UAAYoB,EACjB,MAAO3G,KAAKP,IAAMkH,GAAK3G,KAAK8F,MAAMC,GAAI,CAClC,GAAI/F,KAAK2F,YAAc3F,KAAKqF,OAAO1E,OAAS,EACxC,OAAOX,KAAK4G,UAChBD,GAAK3G,KAAK8F,MAAMC,GAAK/F,KAAKP,IAC1BO,KAAK8F,MAAQ9F,KAAKqF,SAASrF,KAAK2F,YAChC3F,KAAKP,IAAMO,KAAK8F,MAAMD,KAK1B,OAHA7F,KAAKP,KAAOkH,EACR3G,KAAKP,KAAOO,KAAK0F,MAAM5F,YACvBE,KAAK0F,MAAM5F,UAAYE,KAAKP,IAAM,GAC/BO,KAAKgG,WAEhB,UAII,OAHAhG,KAAKP,IAAMO,KAAK4F,SAAW5F,KAAK4B,IAChC5B,KAAK8F,MAAQ9F,KAAKqF,OAAOrF,KAAK2F,WAAa3F,KAAKqF,OAAO1E,OAAS,GAChEX,KAAKsF,MAAQ,GACNtF,KAAKkC,MAAQ,EAGxB,MAAMzC,EAAKiG,GAUP,GATIA,GACA1F,KAAK0F,MAAQA,EACbA,EAAMjF,MAAQhB,EACdiG,EAAM5F,UAAYL,EAAM,EACxBiG,EAAMjD,MAAQiD,EAAMV,UAAY,GAGhChF,KAAK0F,MAAQR,EAEblF,KAAKP,KAAOA,EAAK,CAEjB,GADAO,KAAKP,IAAMA,EACPA,GAAOO,KAAK4B,IAEZ,OADA5B,KAAK4G,UACE5G,KAEX,MAAOP,EAAMO,KAAK8F,MAAMD,KACpB7F,KAAK8F,MAAQ9F,KAAKqF,SAASrF,KAAK2F,YACpC,MAAOlG,GAAOO,KAAK8F,MAAMC,GACrB/F,KAAK8F,MAAQ9F,KAAKqF,SAASrF,KAAK2F,YAChClG,GAAOO,KAAK4F,UAAYnG,EAAMO,KAAK4F,SAAW5F,KAAKsF,MAAM3E,OACzDX,KAAKuF,SAAW9F,EAAMO,KAAK4F,UAG3B5F,KAAKsF,MAAQ,GACbtF,KAAKuF,SAAW,GAEpBvF,KAAKgG,WAET,OAAOhG,KAGX,KAAK6F,EAAME,GACP,GAAIF,GAAQ7F,KAAK4F,UAAYG,GAAM/F,KAAK4F,SAAW5F,KAAKsF,MAAM3E,OAC1D,OAAOX,KAAKsF,MAAMrC,MAAM4C,EAAO7F,KAAK4F,SAAUG,EAAK/F,KAAK4F,UAC5D,GAAIC,GAAQ7F,KAAK8F,MAAMD,MAAQE,GAAM/F,KAAK8F,MAAMC,GAC5C,OAAO/F,KAAKoF,MAAMyB,KAAKhB,EAAME,GACjC,IAAInC,EAAS,GACb,IAAK,IAAIkD,KAAK9G,KAAKqF,OAAQ,CACvB,GAAIyB,EAAEjB,MAAQE,EACV,MACAe,EAAEf,GAAKF,IACPjC,GAAU5D,KAAKoF,MAAMyB,KAAKE,KAAKC,IAAIF,EAAEjB,KAAMA,GAAOkB,KAAKE,IAAIH,EAAEf,GAAIA,KAEzE,OAAOnC,GAIf,MAAMsD,EACF,YAAYjD,EAAMkD,GACdnH,KAAKiE,KAAOA,EACZjE,KAAKmH,GAAKA,EAEd,MAAM/B,EAAO9F,GAAS8H,EAAUpH,KAAKiE,KAAMmB,EAAO9F,EAAOU,KAAKmH,KAElED,EAAWG,UAAUC,WAAaJ,EAAWG,UAAUE,SAAWL,EAAWG,UAAUG,QAAS,EAGhG,MAAMC,EAMF,YAEA/B,EAAOgC,EAAU,IACb1H,KAAK0F,MAAQA,EACb1F,KAAKsH,aAAeI,EAAQJ,WAC5BtH,KAAKuH,WAAaG,EAAQH,SAC1BvH,KAAKwH,SAAWE,EAAQF,QAuBhC,SAASJ,EAAUnD,EAAMmB,EAAO9F,EAAOqI,GACnC,IAAIpI,EAAQ,EAAGqI,EAAY,GAAKD,GAAO,OAAErH,GAAWhB,EAAMD,GAAG,QAAE+E,GAAY9D,EAC3EuH,EAAM,OAAS,CACX,GAAiC,IAA5BD,EAAY3D,EAAK1E,IAClB,MACJ,IAAIuI,EAAS7D,EAAK1E,EAAQ,GAI1B,IAAK,IAAIY,EAAIZ,EAAQ,EAAGY,EAAI2H,EAAQ3H,GAAK,EACrC,IAAK8D,EAAK9D,EAAI,GAAKyH,GAAa,EAAG,CAC/B,IAAIjG,EAAOsC,EAAK9D,GAChB,GAAIiE,EAAQ2D,OAAOpG,MACQ,GAAtByD,EAAMM,MAAMjD,OAAe2C,EAAMM,MAAMjD,OAASd,GAAQrB,EAAO0H,UAAUrG,EAAMyD,EAAMM,MAAMjD,QAAS,CACrG2C,EAAM6C,YAAYtG,GAClB,OAIZ,IAAK,IAAIO,EAAOkD,EAAMlD,KAAMgG,EAAM,EAAGC,EAAOlE,EAAK1E,EAAQ,GAAI2I,EAAMC,GAAO,CACtE,IAAIC,EAAOF,EAAMC,GAAS,EACtBlG,EAAQ6F,EAASM,GAAOA,GAAO,GAC/BvC,EAAO5B,EAAKhC,GAAQ8D,EAAK9B,EAAKhC,EAAQ,GAC1C,GAAIC,EAAO2D,EACPsC,EAAOC,MACN,MAAIlG,GAAQ6D,GAEZ,CACDxG,EAAQ0E,EAAKhC,EAAQ,GACrBmD,EAAMiD,UACN,SAASR,EAJTK,EAAME,EAAM,GAOpB,OAMR,SAASE,EAAYlD,EAAOmD,EAAOC,aAC/B,GAAoB,iBAATpD,EACP,OAAOA,EACX,IAAIqD,EAAQ,KACZ,IAAK,IAAIhJ,EAAM,EAAGiJ,EAAM,EAAGjJ,EAAM2F,EAAMzE,QAAS,CAC5C,IAAI8B,EAAQ,EACZ,OAAS,CACL,IAAIP,EAAOkD,EAAMgB,WAAW3G,KAAQkJ,GAAO,EAC3C,GAAY,KAARzG,EAA8B,CAC9BO,EAAQ,MACR,MAEAP,GAAQ,IACRA,IACAA,GAAQ,IACRA,IACJ,IAAI0G,EAAQ1G,EAAO,GAMnB,GALI0G,GAAS,KACTA,GAAS,GACTD,GAAO,GAEXlG,GAASmG,EACLD,EACA,MACJlG,GAAS,GAETgG,EACAA,EAAMC,KAASjG,EAEfgG,EAAQ,IAAIF,EAAK9F,GAEzB,OAAOgG,EAMX,MAAMI,EAA4B,oBAAXC,GAA0B,YAAYC,KAAK,iEAAYC,KAC9E,IAAIC,EAAW,KACf,IAAIC,EA0NAC,EAtNJ,SAASC,EAAMC,EAAM5J,EAAK6J,GACtB,IAAIC,EAASF,EAAKG,aAElB,IADAD,EAAOE,OAAOhK,KAEV,KAAM6J,EAAO,EAAIC,EAAOG,YAAYjK,GAAO8J,EAAOI,WAAWlK,IACzD,OAAS,CACL,IAAK6J,EAAO,EAAIC,EAAOxD,GAAKtG,EAAM8J,EAAO1D,KAAOpG,KAAS8J,EAAOzI,KAAK8I,QACjE,OAAON,EAAO,EAAIvC,KAAKC,IAAI,EAAGD,KAAKE,IAAIsC,EAAOxD,GAAK,EAAGtG,EAAM,KACtDsH,KAAKE,IAAIoC,EAAK1I,OAAQoG,KAAKC,IAAIuC,EAAO1D,KAAO,EAAGpG,EAAM,KAChE,GAAI6J,EAAO,EAAIC,EAAOM,cAAgBN,EAAOO,cACzC,MACJ,IAAKP,EAAOxJ,SACR,OAAOuJ,EAAO,EAAI,EAAID,EAAK1I,SAf/C,SAAWuI,GACPA,EAAOA,EAAO,UAAY,IAAM,UADpC,CAEGA,IAAWA,EAAS,KAiBvB,MAAMa,EACF,YAAYC,EAAWC,GACnBjK,KAAKgK,UAAYA,EACjBhK,KAAKiK,QAAUA,EACfjK,KAAKG,EAAI,EACTH,KAAKkK,SAAW,KAChBlK,KAAKmK,UAAY,EACjBnK,KAAKoK,QAAU,EACfpK,KAAKqK,MAAQ,GACbrK,KAAKS,MAAQ,GACbT,KAAKiC,MAAQ,GACbjC,KAAKsK,eAET,eACI,IAAIC,EAAKvK,KAAKkK,SAAWlK,KAAKG,GAAKH,KAAKgK,UAAUrJ,OAAS,KAAOX,KAAKgK,UAAUhK,KAAKG,KACtF,GAAIoK,EAAI,CACJvK,KAAKmK,SAAWI,EAAGC,UAAYpB,EAAMmB,EAAGlB,KAAMkB,EAAG1E,KAAO0E,EAAGtE,OAAQ,GAAKsE,EAAGtE,OAASsE,EAAG1E,KACvF7F,KAAKoK,OAASG,EAAGE,QAAUrB,EAAMmB,EAAGlB,KAAMkB,EAAGxE,GAAKwE,EAAGtE,QAAS,GAAKsE,EAAGtE,OAASsE,EAAGxE,GAClF,MAAO/F,KAAKqK,MAAM1J,OACdX,KAAKqK,MAAM3I,MACX1B,KAAKS,MAAMiB,MACX1B,KAAKiC,MAAMP,MAEf1B,KAAKqK,MAAM3J,KAAK6J,EAAGlB,MACnBrJ,KAAKS,MAAMC,MAAM6J,EAAGtE,QACpBjG,KAAKiC,MAAMvB,KAAK,GAChBV,KAAK0K,UAAY1K,KAAKmK,cAGtBnK,KAAK0K,UAAY,IAIzB,OAAOjL,GACH,GAAIA,EAAMO,KAAK0K,UACX,OAAO,KACX,MAAO1K,KAAKkK,UAAYlK,KAAKoK,QAAU3K,EACnCO,KAAKsK,eACT,IAAKtK,KAAKkK,SACN,OAAO,KACX,OAAS,CACL,IAAI5F,EAAOtE,KAAKqK,MAAM1J,OAAS,EAC/B,GAAI2D,EAAO,EAEP,OADAtE,KAAKsK,eACE,KAEX,IAAItI,EAAMhC,KAAKqK,MAAM/F,GAAOrC,EAAQjC,KAAKiC,MAAMqC,GAC/C,GAAIrC,GAASD,EAAI2I,SAAShK,OAAQ,CAC9BX,KAAKqK,MAAM3I,MACX1B,KAAKS,MAAMiB,MACX1B,KAAKiC,MAAMP,MACX,SAEJ,IAAIQ,EAAOF,EAAI2I,SAAS1I,GACpBxB,EAAQT,KAAKS,MAAM6D,GAAQtC,EAAI4I,UAAU3I,GAC7C,GAAIxB,EAAQhB,EAER,OADAO,KAAK0K,UAAYjK,EACV,KAEX,GAAIyB,aAAgB,OAAM,CACtB,GAAIzB,GAAShB,EAAK,CACd,GAAIgB,EAAQT,KAAKmK,SACb,OAAO,KACX,IAAIvI,EAAMnB,EAAQyB,EAAKvB,OACvB,GAAIiB,GAAO5B,KAAKoK,OAAQ,CACpB,IAAItK,EAAYoC,EAAK2I,KAAK,OAAS/K,WACnC,IAAKA,GAAa8B,EAAM9B,EAAYE,KAAKkK,SAASnE,GAC9C,OAAO7D,GAGnBlC,KAAKiC,MAAMqC,KACP7D,EAAQyB,EAAKvB,QAAUoG,KAAKC,IAAIhH,KAAKmK,SAAU1K,KAC/CO,KAAKqK,MAAM3J,KAAKwB,GAChBlC,KAAKS,MAAMC,KAAKD,GAChBT,KAAKiC,MAAMvB,KAAK,SAIpBV,KAAKiC,MAAMqC,KACXtE,KAAK0K,UAAYjK,EAAQyB,EAAKvB,SAK9C,MAAMmK,EACF,YAAYxK,EAAQwC,GAChB9C,KAAK8C,OAASA,EACd9C,KAAK+K,OAAS,GACd/K,KAAKgL,UAAY,KACjBhL,KAAKiL,QAAU,GACfjL,KAAK+K,OAASzK,EAAO4K,WAAWC,IAAIjL,GAAK,IAAI6E,GAEjD,WAAWzF,GACP,IAAI8L,EAAc,EACdC,EAAO,MACP,OAAE/K,GAAWhB,EAAMD,GAAG,WAAE6L,GAAe5K,EACvC2E,EAAO3E,EAAO+C,UAAU/D,EAAMC,MAAO,GACrCgB,EAAUjB,EAAMO,WAAaP,EAAMO,WAAW0E,KAAO,EACrDzE,EAAY,EAChB,IAAK,IAAIK,EAAI,EAAGA,EAAI+K,EAAWvK,OAAQR,IAAK,CACxC,GAAyB,IAAnB,GAAKA,EAAK8E,GACZ,SACJ,IAAIqG,EAAYJ,EAAW/K,GAAIuF,EAAQ1F,KAAK+K,OAAO5K,GACnD,KAAIkL,GAASC,EAAU/D,aAEnB+D,EAAUhE,YAAc5B,EAAMjF,OAASnB,EAAMG,KAAOiG,EAAMT,MAAQA,GAAQS,EAAMnF,SAAWA,KAC3FP,KAAKuL,kBAAkB7F,EAAO4F,EAAWhM,GACzCoG,EAAMT,KAAOA,EACbS,EAAMnF,QAAUA,GAEhBmF,EAAM5F,UAAY4F,EAAM9D,IAAM,KAC9B9B,EAAYiH,KAAKC,IAAItB,EAAM5F,UAAWA,IACvB,GAAf4F,EAAMjD,OAAsB,CAC5B,IAAI+I,EAAaJ,EAIjB,GAHI1F,EAAMV,UAAY,IAClBoG,EAAcpL,KAAKyL,WAAWnM,EAAOoG,EAAMV,SAAUU,EAAM9D,IAAKwJ,IACpEA,EAAcpL,KAAKyL,WAAWnM,EAAOoG,EAAMjD,MAAOiD,EAAM9D,IAAKwJ,IACxDE,EAAU9D,SACX6D,EAAO3F,EACH0F,EAAcI,GACd,OAIhB,MAAOxL,KAAKiL,QAAQtK,OAASyK,EACzBpL,KAAKiL,QAAQvJ,MAUjB,OATI5B,GACAR,EAAMoM,aAAa5L,GAClBuL,GAAQ/L,EAAMG,KAAOO,KAAK8C,OAAOlB,MAClCyJ,EAAO,IAAItG,EACXsG,EAAK5I,MAAQnD,EAAMD,EAAEiB,OAAOqL,QAC5BN,EAAK5K,MAAQ4K,EAAKzJ,IAAMtC,EAAMG,IAC9B2L,EAAcpL,KAAKyL,WAAWnM,EAAO+L,EAAK5I,MAAO4I,EAAKzJ,IAAKwJ,IAE/DpL,KAAKgL,UAAYK,EACVrL,KAAKiL,QAEhB,aAAa3L,GACT,GAAIU,KAAKgL,UACL,OAAOhL,KAAKgL,UAChB,IAAIK,EAAO,IAAItG,GAAa,IAAEtF,EAAG,EAAEJ,GAAMC,EAIzC,OAHA+L,EAAK5K,MAAQhB,EACb4L,EAAKzJ,IAAMmF,KAAKE,IAAIxH,EAAM,EAAGJ,EAAEyD,OAAOlB,KACtCyJ,EAAK5I,MAAQhD,GAAOJ,EAAEyD,OAAOlB,IAAMvC,EAAEiB,OAAOqL,QAAU,EAC/CN,EAEX,kBAAkB3F,EAAO4F,EAAWhM,GAEhC,GADAgM,EAAU5F,MAAM1F,KAAK8C,OAAOC,MAAMzD,EAAMG,IAAKiG,GAAQpG,GACjDoG,EAAMjD,OAAS,EAAG,CAClB,IAAI,OAAEnC,GAAWhB,EAAMD,EACvB,IAAK,IAAIc,EAAI,EAAGA,EAAIG,EAAOsL,YAAYjL,OAAQR,IAC3C,GAAIG,EAAOsL,YAAYzL,IAAMuF,EAAMjD,MAAO,CACtC,IAAImB,EAAStD,EAAOuL,aAAa1L,GAAGH,KAAK8C,OAAO+D,KAAKnB,EAAMjF,MAAOiF,EAAM9D,KAAMtC,GAC9E,GAAIsE,GAAU,GAAKtE,EAAMD,EAAEiB,OAAO8D,QAAQ2D,OAAOnE,GAAU,GAAI,CACvC,IAAN,EAATA,GACD8B,EAAMjD,MAAQmB,GAAU,EAExB8B,EAAMV,SAAWpB,GAAU,EAC/B,aAKZ8B,EAAMjD,MAAQ,EACdiD,EAAM9D,IAAMmF,KAAKE,IAAI3H,EAAMD,EAAEyD,OAAOlB,IAAKtC,EAAMG,IAAM,GAG7D,UAAUmB,EAAQ8E,EAAO9D,EAAKK,GAE1B,IAAK,IAAI9B,EAAI,EAAGA,EAAI8B,EAAO9B,GAAK,EAC5B,GAAIH,KAAKiL,QAAQ9K,IAAMS,EACnB,OAAOqB,EAIf,OAHAjC,KAAKiL,QAAQhJ,KAAWrB,EACxBZ,KAAKiL,QAAQhJ,KAAWyD,EACxB1F,KAAKiL,QAAQhJ,KAAWL,EACjBK,EAEX,WAAW3C,EAAOoG,EAAO9D,EAAKK,GAC1B,IAAI,MAAE1C,GAAUD,GAAO,OAAEgB,GAAWhB,EAAMD,GAAG,KAAE4E,GAAS3D,EACxD,IAAK,IAAIwL,EAAM,EAAGA,EAAM,EAAGA,IACvB,IAAK,IAAI3L,EAAIG,EAAO+C,UAAU9D,EAAOuM,EAAM,EAAe,IAAmB3L,GAAK,EAAG,CACjF,GAAe,OAAX8D,EAAK9D,GAAuB,CAC5B,GAAmB,GAAf8D,EAAK9D,EAAI,GAGR,CACY,GAAT8B,GAA6B,GAAfgC,EAAK9D,EAAI,KACvB8B,EAAQjC,KAAK+L,UAAUC,EAAK/H,EAAM9D,EAAI,GAAIuF,EAAO9D,EAAKK,IAC1D,MALA9B,EAAI6L,EAAK/H,EAAM9D,EAAI,GAQvB8D,EAAK9D,IAAMuF,IACXzD,EAAQjC,KAAK+L,UAAUC,EAAK/H,EAAM9D,EAAI,GAAIuF,EAAO9D,EAAKK,IAGlE,OAAOA,IAIf,SAAWkH,GACPA,EAAIA,EAAI,YAAc,GAAK,WAC3BA,EAAIA,EAAI,uBAAyB,GAAK,sBAGtCA,EAAIA,EAAI,wBAA0B,KAAO,uBACzCA,EAAIA,EAAI,oBAAsB,IAAM,mBAIpCA,EAAIA,EAAI,YAAc,MAAS,WAC/BA,EAAIA,EAAI,SAAW,KAAQ,SAX/B,CAYGA,IAAQA,EAAM,KACjB,MAAM8C,EACF,YAAY3L,EAAQ8E,EAAO4E,EAAW3E,GAClCrF,KAAKM,OAASA,EACdN,KAAKoF,MAAQA,EACbpF,KAAKqF,OAASA,EACdrF,KAAKkM,WAAa,EAClBlM,KAAKmM,YAAc,KACnBnM,KAAKoM,YAAc,EACnBpM,KAAK0C,OAAS,GACd1C,KAAKqM,UAAY,KACjBrM,KAAK8C,OAAS,IAAIqC,EAAYC,EAAOC,GACrCrF,KAAK+K,OAAS,IAAID,EAAWxK,EAAQN,KAAK8C,QAC1C9C,KAAKsM,QAAUhM,EAAO0B,IAAI,GAC1B,IAAI,KAAE6D,GAASR,EAAO,GACtBrF,KAAKuM,OAAS,CAACnN,EAAMqB,MAAMT,KAAMM,EAAO0B,IAAI,GAAI6D,IAChD7F,KAAKgK,UAAYA,EAAUrJ,QAAUX,KAAK8C,OAAOlB,IAAMiE,EAA6B,EAAtBvF,EAAOkM,aAC/D,IAAIzC,EAAeC,EAAW1J,EAAO2J,SAAW,KAE1D,gBACI,OAAOjK,KAAKoM,YAQhB,UACI,IAGIK,EAASC,EAHTH,EAASvM,KAAKuM,OAAQ9M,EAAMO,KAAKoM,YAEjCO,EAAY3M,KAAKuM,OAAS,GAK9B,IAAK,IAAIpM,EAAI,EAAGA,EAAIoM,EAAO5L,OAAQR,IAAK,CACpC,IAAIb,EAAQiN,EAAOpM,GACnB,OAAS,CAEL,GADAH,KAAK+K,OAAOC,UAAY,KACpB1L,EAAMG,IAAMA,EACZkN,EAAUjM,KAAKpB,OAEd,IAAIU,KAAK4M,aAAatN,EAAOqN,EAAWJ,GACzC,SAEC,CACIE,IACDA,EAAU,GACVC,EAAgB,IAEpBD,EAAQ/L,KAAKpB,GACb,IAAIuN,EAAM7M,KAAK+K,OAAO+B,aAAaxN,GACnCoN,EAAchM,KAAKmM,EAAIpK,MAAOoK,EAAIjL,MAEtC,OAGR,IAAK+K,EAAUhM,OAAQ,CACnB,IAAIoM,EAAWN,GAAWO,EAAaP,GACvC,GAAIM,EACA,OAAO/M,KAAKiN,YAAYF,GAC5B,GAAI/M,KAAKM,OAAOqE,OAGZ,MAFIkE,GAAW4D,GACXS,QAAQC,IAAI,qBAAuBnN,KAAK+K,OAAOC,UAAYhL,KAAKM,OAAO8M,QAAQpN,KAAK+K,OAAOC,UAAUvI,OAAS,SAC5G,IAAI4K,YAAY,eAAiB5N,GAEtCO,KAAKkM,aACNlM,KAAKkM,WAAa,GAE1B,GAAIlM,KAAKkM,YAAcO,EAAS,CAC5B,IAAIM,EAA6B,MAAlB/M,KAAKqM,WAAqBI,EAAQ,GAAGhN,IAAMO,KAAKqM,UAAYI,EAAQ,GAC7EzM,KAAKsN,YAAYb,EAASC,EAAeC,GAC/C,GAAII,EACA,OAAO/M,KAAKiN,YAAYF,EAASQ,YAEzC,GAAIvN,KAAKkM,WAAY,CACjB,IAAIsB,EAAkC,GAAnBxN,KAAKkM,WAAkB,EAAsB,EAAlBlM,KAAKkM,WACnD,GAAIS,EAAUhM,OAAS6M,EAAc,CACjCb,EAAUc,KAAK,CAACC,EAAGC,IAAMA,EAAEjO,MAAQgO,EAAEhO,OACrC,MAAOiN,EAAUhM,OAAS6M,EACtBb,EAAUjL,MAEdiL,EAAUjJ,KAAKD,GAAKA,EAAEjE,UAAYC,IAClCO,KAAKkM,kBAER,GAAIS,EAAUhM,OAAS,EAIxBiN,EAAO,IAAK,IAAIzN,EAAI,EAAGA,EAAIwM,EAAUhM,OAAS,EAAGR,IAAK,CAClD,IAAIb,EAAQqN,EAAUxM,GACtB,IAAK,IAAI0N,EAAI1N,EAAI,EAAG0N,EAAIlB,EAAUhM,OAAQkN,IAAK,CAC3C,IAAI3J,EAAQyI,EAAUkB,GACtB,GAAIvO,EAAMwO,UAAU5J,IAChB5E,EAAMK,OAAOgB,OAAS,KAAkCuD,EAAMvE,OAAOgB,OAAS,IAAgC,CAC9G,MAAMrB,EAAMI,MAAQwE,EAAMxE,OAAWJ,EAAMK,OAAOgB,OAASuD,EAAMvE,OAAOgB,QAAW,GAG9E,CACDgM,EAAUoB,OAAO5N,IAAK,GACtB,SAASyN,EAJTjB,EAAUoB,OAAOF,IAAK,KAU1C7N,KAAKoM,YAAcO,EAAU,GAAGlN,IAChC,IAAK,IAAIU,EAAI,EAAGA,EAAIwM,EAAUhM,OAAQR,IAC9BwM,EAAUxM,GAAGV,IAAMO,KAAKoM,cACxBpM,KAAKoM,YAAcO,EAAUxM,GAAGV,KACxC,OAAO,KAEX,OAAOA,GACH,GAAsB,MAAlBO,KAAKqM,WAAqBrM,KAAKqM,UAAY5M,EAC3C,MAAM,IAAI+G,WAAW,gCACzBxG,KAAKqM,UAAY5M,EAMrB,aAAaH,EAAOiN,EAAQ1I,GACxB,IAAIpD,EAAQnB,EAAMG,KAAK,OAAEa,GAAWN,KAChCsB,EAAOuH,EAAU7I,KAAKgO,QAAQ1O,GAAS,OAAS,GACpD,GAAsB,MAAlBU,KAAKqM,WAAqB5L,EAAQT,KAAKqM,UACvC,OAAO/M,EAAM0E,cAAgB1E,EAAQ,KACzC,GAAIU,KAAKgK,UAAW,CAChB,IAAIiE,EAAW3O,EAAMO,YAAcP,EAAMO,WAAW+C,QAAQ+B,OAAQuJ,EAASD,EAAW3O,EAAMO,WAAW0E,KAAO,EAChH,IAAK,IAAI4J,EAASnO,KAAKgK,UAAUoE,OAAO3N,GAAQ0N,GAAS,CACrD,IAAIE,EAAQrO,KAAKM,OAAO2J,QAAQqE,MAAMH,EAAOrN,KAAKqG,KAAOgH,EAAOrN,KAAOR,EAAOc,QAAQ9B,EAAMC,MAAO4O,EAAOrN,KAAKqG,KAAO,EACtH,GAAIkH,GAAS,GAAKF,EAAOxN,UAAYsN,IAAaE,EAAOtD,KAAK,OAAS0D,cAAgB,IAAML,GAIzF,OAHA5O,EAAMkP,QAAQL,EAAQE,GAClBxF,GACAqE,QAAQC,IAAI7L,EAAOtB,KAAKgO,QAAQ1O,GAAS,kBAAkBgB,EAAO8M,QAAQe,EAAOrN,KAAKqG,SACnF,EAEX,KAAMgH,aAAkB,SAAmC,GAA1BA,EAAOxD,SAAShK,QAAewN,EAAOvD,UAAU,GAAK,EAClF,MACJ,IAAI6D,EAAQN,EAAOxD,SAAS,GAC5B,KAAI8D,aAAiB,QAA+B,GAAvBN,EAAOvD,UAAU,IAG1C,MAFAuD,EAASM,GAKrB,IAAIC,EAAgBpO,EAAO+C,UAAU/D,EAAMC,MAAO,GAClD,GAAImP,EAAgB,EAIhB,OAHApP,EAAMiD,OAAOmM,GACT7F,GACAqE,QAAQC,IAAI7L,EAAOtB,KAAKgO,QAAQ1O,GAAS,uBAAuBgB,EAAO8M,QAAwB,MAAhBsB,QAC5E,EAEX,GAAIpP,EAAMA,MAAMqB,QAAU,KACtB,MAAOrB,EAAMA,MAAMqB,OAAS,KAAoBrB,EAAM0E,eAE1D,IAAIiH,EAAUjL,KAAK+K,OAAO4D,WAAWrP,GACrC,IAAK,IAAIa,EAAI,EAAGA,EAAI8K,EAAQtK,QAAS,CACjC,IAAIC,EAASqK,EAAQ9K,KAAMwB,EAAOsJ,EAAQ9K,KAAMyB,EAAMqJ,EAAQ9K,KAC1DmE,EAAOnE,GAAK8K,EAAQtK,SAAWkD,EAC/B+K,EAAatK,EAAOhF,EAAQA,EAAMuE,QAKtC,GAJA+K,EAAWC,MAAMjO,EAAQe,EAAMC,GAC3BiH,GACAqE,QAAQC,IAAI7L,EAAOtB,KAAKgO,QAAQY,GAAc,SAA8C,IAA3B,MAAThO,GAAwC,QAC1F,aAAaN,EAAO8M,QAAiB,MAATxM,UAAyCN,EAAO8M,QAAQzL,QAAWlB,IAAQmO,GAActP,EAAQ,GAAK,cACxIgF,EACA,OAAO,EACFsK,EAAWnP,IAAMgB,EACtB8L,EAAO7L,KAAKkO,GAEZ/K,EAAMnD,KAAKkO,GAEnB,OAAO,EAKX,aAAatP,EAAOqN,GAChB,IAAIlN,EAAMH,EAAMG,IAChB,OAAS,CACL,IAAKO,KAAK4M,aAAatN,EAAO,KAAM,MAChC,OAAO,EACX,GAAIA,EAAMG,IAAMA,EAEZ,OADAqP,EAAexP,EAAOqN,IACf,GAInB,YAAYJ,EAAQxB,EAAQ4B,GACxB,IAAII,EAAW,KAAMgC,GAAY,EACjC,IAAK,IAAI5O,EAAI,EAAGA,EAAIoM,EAAO5L,OAAQR,IAAK,CACpC,IAAIb,EAAQiN,EAAOpM,GAAIuF,EAAQqF,EAAO5K,GAAK,GAAI6O,EAAWjE,EAAkB,GAAV5K,GAAK,IACnEmB,EAAOuH,EAAU7I,KAAKgO,QAAQ1O,GAAS,OAAS,GACpD,GAAIA,EAAM2P,QAAS,CACf,GAAIF,EACA,SACJA,GAAY,EACZzP,EAAM4P,UACFrG,GACAqE,QAAQC,IAAI7L,EAAOtB,KAAKgO,QAAQ1O,GAAS,gBAC7C,IAAI6P,EAAOnP,KAAKoP,aAAa9P,EAAOqN,GACpC,GAAIwC,EACA,SAER,IAAIE,EAAQ/P,EAAMuE,QAASyL,EAAYhO,EACvC,IAAK,IAAIuM,EAAI,EAAGwB,EAAMrL,eAAiB6J,EAAI,GAA2BA,IAAK,CACnEhF,GACAqE,QAAQC,IAAImC,EAAYtP,KAAKgO,QAAQqB,GAAS,uBAClD,IAAIF,EAAOnP,KAAKoP,aAAaC,EAAO1C,GACpC,GAAIwC,EACA,MACAtG,IACAyG,EAAYtP,KAAKgO,QAAQqB,GAAS,QAE1C,IAAK,IAAIE,KAAUjQ,EAAMkQ,gBAAgB9J,GACjCmD,GACAqE,QAAQC,IAAI7L,EAAOtB,KAAKgO,QAAQuB,GAAU,yBAC9CvP,KAAKoP,aAAaG,EAAQ5C,GAE1B3M,KAAK8C,OAAOlB,IAAMtC,EAAMG,KACpBuP,GAAY1P,EAAMG,MAClBuP,IACAtJ,EAAQ,GAEZpG,EAAMmQ,gBAAgB/J,EAAOsJ,GACzBnG,GACAqE,QAAQC,IAAI7L,EAAOtB,KAAKgO,QAAQ1O,GAAS,wBAAwBU,KAAKM,OAAO8M,QAAQ1H,OACzFoJ,EAAexP,EAAOqN,MAEhBI,GAAYA,EAASrN,MAAQJ,EAAMI,SACzCqN,EAAWzN,GAGnB,OAAOyN,EAGX,YAAYzN,GAER,OADAA,EAAMoQ,QACC,OAAKC,MAAM,CAAEhQ,OAAQkF,EAAkB+K,OAAOtQ,GACjD2K,QAASjK,KAAKM,OAAO2J,QACrB4F,MAAO7P,KAAKsM,QACZwD,gBAAiB9P,KAAKM,OAAOkM,aAC7B9J,OAAQ1C,KAAK0C,OACbjC,MAAOT,KAAKqF,OAAO,GAAGQ,KACtBlF,OAAQrB,EAAMG,IAAMO,KAAKqF,OAAO,GAAGQ,KACnCkK,cAAe/P,KAAKM,OAAOW,gBAEnC,QAAQ3B,GACJ,IAAI6H,GAAM8B,IAAaA,EAAW,IAAI+G,UAAUC,IAAI3Q,GAGpD,OAFK6H,GACD8B,EAAS6C,IAAIxM,EAAO6H,EAAK+I,OAAOC,cAAcnQ,KAAKmM,gBAChDhF,EAAK7H,GAGpB,SAASwP,EAAexP,EAAOqN,GAC3B,IAAK,IAAIxM,EAAI,EAAGA,EAAIwM,EAAUhM,OAAQR,IAAK,CACvC,IAAI+D,EAAQyI,EAAUxM,GACtB,GAAI+D,EAAMzE,KAAOH,EAAMG,KAAOyE,EAAM4J,UAAUxO,GAG1C,YAFIqN,EAAUxM,GAAGT,MAAQJ,EAAMI,QAC3BiN,EAAUxM,GAAKb,IAI3BqN,EAAUjM,KAAKpB,GAEnB,MAAM8Q,EACF,YAAYC,EAAQhM,EAAOiM,GACvBtQ,KAAKqQ,OAASA,EACdrQ,KAAKqE,MAAQA,EACbrE,KAAKsQ,SAAWA,EAEpB,OAAO3O,GAAQ,OAAQ3B,KAAKsQ,UAAmC,GAAvBtQ,KAAKsQ,SAAS3O,IA0B1D,MAAM4O,UAAiB,OAEnB,YAAYC,GAIR,GAHAC,QAEAzQ,KAAK0Q,SAAW,GACI,IAAhBF,EAAKG,QACL,MAAM,IAAInK,WAAW,mBAAmBgK,EAAKG,+CACjD,IAAIC,EAAYJ,EAAKI,UAAU/M,MAAM,KACrC7D,KAAKiB,cAAgB2P,EAAUjQ,OAC/B,IAAK,IAAIR,EAAI,EAAGA,EAAIqQ,EAAKK,gBAAiB1Q,IACtCyQ,EAAUlQ,KAAK,IACnB,IAAIoQ,EAAWC,OAAOC,KAAKR,EAAKS,UAAU9F,IAAIrE,GAAK0J,EAAKS,SAASnK,GAAG,IAChEoK,EAAY,GAChB,IAAK,IAAI/Q,EAAI,EAAGA,EAAIyQ,EAAUjQ,OAAQR,IAClC+Q,EAAUxQ,KAAK,IACnB,SAASyQ,EAAQC,EAAQvG,EAAMpI,GAC3ByO,EAAUE,GAAQ1Q,KAAK,CAACmK,EAAMA,EAAKwG,YAAYnB,OAAOzN,MAE1D,GAAI+N,EAAKU,UACL,IAAK,IAAII,KAAYd,EAAKU,UAAW,CACjC,IAAIrG,EAAOyG,EAAS,GACpB,IAAK,IAAInR,EAAI,EAAGA,EAAImR,EAAS3Q,QAAS,CAClC,IAAIuB,EAAOoP,EAASnR,KACpB,GAAI+B,GAAQ,EACRiP,EAAQjP,EAAM2I,EAAMyG,EAASnR,UAE5B,CACD,IAAIsC,EAAQ6O,EAASnR,GAAK+B,GAC1B,IAAK,IAAI2L,GAAK3L,EAAM2L,EAAI,EAAGA,IACvBsD,EAAQG,EAASnR,KAAM0K,EAAMpI,GACjCtC,MAIhBH,KAAKiK,QAAU,IAAI,OAAQ2G,EAAUzF,IAAI,CAACoG,EAAMpR,IAAM,OAASqR,OAAO,CAClED,KAAMpR,GAAKH,KAAKiB,mBAAgBwQ,EAAYF,EAC5CpK,GAAIhH,EACJuR,MAAOR,EAAU/Q,GACjB6B,IAAK8O,EAASa,QAAQxR,IAAM,EAC5ByR,MAAY,GAALzR,EACP0R,QAASrB,EAAKsB,cAAgBtB,EAAKsB,aAAaH,QAAQxR,IAAM,MAElEH,KAAK2E,QAAS,EACd3E,KAAKwM,aAAe,OACpB,IAAIuF,EAAazJ,EAAYkI,EAAKwB,WAIlC,GAHAhS,KAAKO,QAAUiQ,EAAKjQ,QACpBP,KAAK4L,YAAc,IAAIpD,YAAYgI,EAAK5E,YAAc4E,EAAK5E,YAAYjL,OAAS,GAChFX,KAAK6L,aAAe,GAChB2E,EAAK5E,YACL,IAAK,IAAIzL,EAAI,EAAGA,EAAIqQ,EAAK5E,YAAYjL,OAAQR,IACzCH,KAAK4L,YAAYzL,GAAKqQ,EAAK5E,YAAYzL,GAAGwB,KAC1C3B,KAAK6L,aAAa1L,GAAKqQ,EAAK5E,YAAYzL,GAAG8P,IAEnDjQ,KAAKiS,OAAS3J,EAAYkI,EAAKyB,OAAQC,aACvClS,KAAKiE,KAAOqE,EAAYkI,EAAK2B,WAC7BnS,KAAK4E,KAAO0D,EAAYkI,EAAK5L,MAC7B5E,KAAKoS,QAAU5B,EAAK4B,QACpBpS,KAAKkL,WAAasF,EAAKtF,WAAWC,IAAI1I,GAAyB,iBAATA,EAAoB,IAAIyE,EAAW6K,EAAYtP,GAASA,GAC9GzC,KAAKiR,SAAWT,EAAKS,SACrBjR,KAAKqS,SAAW7B,EAAK6B,UAAY,GACjCrS,KAAKsS,mBAAqB9B,EAAK8B,oBAAsB,KACrDtS,KAAKuS,eAAiB/B,EAAKgC,UAC3BxS,KAAKyS,UAAYjC,EAAKiC,WAAa,KACnCzS,KAAKqC,QAAUrC,KAAKiK,QAAQqE,MAAM3N,OAAS,EAC3CX,KAAKoE,QAAUpE,KAAK0S,eACpB1S,KAAKgC,IAAMhC,KAAKiR,SAASF,OAAOC,KAAKhR,KAAKiR,UAAU,IAExD,YAAY7L,EAAO4E,EAAW3E,GAC1B,IAAIsN,EAAQ,IAAI1G,EAAMjM,KAAMoF,EAAO4E,EAAW3E,GAC9C,IAAK,IAAIuN,KAAK5S,KAAK0Q,SACfiC,EAAQC,EAAED,EAAOvN,EAAO4E,EAAW3E,GACvC,OAAOsN,EAGX,QAAQpT,EAAOoC,EAAMkR,GAAQ,GACzB,IAAIC,EAAQ9S,KAAK4E,KACjB,GAAIjD,GAAQmR,EAAM,GACd,OAAQ,EACZ,IAAK,IAAIrT,EAAMqT,EAAMnR,EAAO,KAAM,CAC9B,IAAIoR,EAAWD,EAAMrT,KAAQ6E,EAAkB,EAAXyO,EAChChP,EAAS+O,EAAMrT,KACnB,GAAI6E,GAAQuO,EACR,OAAO9O,EACX,IAAK,IAAInC,EAAMnC,GAAOsT,GAAY,GAAItT,EAAMmC,EAAKnC,IAC7C,GAAIqT,EAAMrT,IAAQF,EACd,OAAOwE,EACf,GAAIO,EACA,OAAQ,GAIpB,UAAU/E,EAAOyT,GACb,IAAI/O,EAAOjE,KAAKiE,KAChB,IAAK,IAAI6H,EAAM,EAAGA,EAAM,EAAGA,IACvB,IAAK,IAAqE5J,EAAjE/B,EAAIH,KAAKqD,UAAU9D,EAAOuM,EAAM,EAAe,IAAyB3L,GAAK,EAAG,CACrF,GAAwB,QAAnB+B,EAAO+B,EAAK9D,IAAwB,CACrC,GAAmB,GAAf8D,EAAK9D,EAAI,GAER,IAAmB,GAAf8D,EAAK9D,EAAI,GACd,OAAO6L,EAAK/H,EAAM9D,EAAI,GAEtB,MAJA+B,EAAO+B,EAAK9D,EAAI6L,EAAK/H,EAAM9D,EAAI,IAMvC,GAAI+B,GAAQ8Q,GAAoB,GAAR9Q,EACpB,OAAO8J,EAAK/H,EAAM9D,EAAI,GAGlC,OAAO,EAGX,UAAUZ,EAAO0T,GACb,OAAOjT,KAAKiS,OAAgB,EAAR1S,EAAwB0T,GAGhD,UAAU1T,EAAO2T,GACb,OAAQlT,KAAKqD,UAAU9D,EAAO,GAAiB2T,GAAQ,EAG3D,YAAY3T,EAAOqB,GACf,GAAIA,GAAUZ,KAAKqD,UAAU9D,EAAO,GAChC,OAAO,EACX,IAAK,IAAIY,EAAIH,KAAKqD,UAAU9D,EAAO,IAAmBY,GAAK,EAAG,CAC1D,GAAoB,OAAhBH,KAAKiE,KAAK9D,GAAuB,CACjC,GAAwB,GAApBH,KAAKiE,KAAK9D,EAAI,GAGd,OAAO,EAFPA,EAAI6L,EAAKhM,KAAKiE,KAAM9D,EAAI,GAIhC,GAAIS,GAAUoL,EAAKhM,KAAKiE,KAAM9D,EAAI,GAC9B,OAAO,GAKnB,WAAWZ,GACP,IAAIqE,EAAS,GACb,IAAK,IAAIzD,EAAIH,KAAKqD,UAAU9D,EAAO,IAAmBY,GAAK,EAAG,CAC1D,GAAoB,OAAhBH,KAAKiE,KAAK9D,GAAuB,CACjC,GAAwB,GAApBH,KAAKiE,KAAK9D,EAAI,GAGd,MAFAA,EAAI6L,EAAKhM,KAAKiE,KAAM9D,EAAI,GAIhC,GAA2D,IAAnC,EAAnBH,KAAKiE,KAAK9D,EAAI,IAA2C,CAC1D,IAAIsC,EAAQzC,KAAKiE,KAAK9D,EAAI,GACrByD,EAAOF,KAAK,CAACC,EAAGxD,IAAW,EAAJA,GAAUwD,GAAKlB,IACvCmB,EAAOlD,KAAKV,KAAKiE,KAAK9D,GAAIsC,IAGtC,OAAOmB,EAGX,UAAU8B,EAAOyN,GACb,IAAIC,EAAQC,EAAWrT,KAAKiE,KAAMjE,KAAKuS,eAAgBY,GACvD,OAAOC,EAAQ,GAAKC,EAAWrT,KAAKiE,KAAMjE,KAAKuS,eAAgB7M,GAAS0N,EAK5E,UAAUE,GAGN,IAAIC,EAAOxC,OAAOyC,OAAOzC,OAAOnB,OAAOW,EAASlJ,WAAYrH,MAG5D,GAFIsT,EAAO5B,QACP6B,EAAKtJ,QAAUjK,KAAKiK,QAAQzC,UAAU8L,EAAO5B,QAC7C4B,EAAOtR,IAAK,CACZ,IAAIyR,EAAOzT,KAAKiR,SAASqC,EAAOtR,KAChC,IAAKyR,EACD,MAAM,IAAIjN,WAAW,yBAAyB8M,EAAOtR,KACzDuR,EAAKvR,IAAMyR,EAiBf,OAfIH,EAAOpI,aACPqI,EAAKrI,WAAalL,KAAKkL,WAAWC,IAAIuI,IAClC,IAAIC,EAAQL,EAAOpI,WAAW0I,KAAK9M,GAAKA,EAAEjB,MAAQ6N,GAClD,OAAOC,EAAQA,EAAM5N,GAAK2N,KAE9BJ,EAAOO,iBACPN,EAAKhT,QAAU+S,EAAOO,gBACtBP,EAAOlP,UACPmP,EAAKnP,QAAUpE,KAAK0S,aAAaY,EAAOlP,UACvB,MAAjBkP,EAAO3O,SACP4O,EAAK5O,OAAS2O,EAAO3O,QACrB2O,EAAOQ,OACPP,EAAK7C,SAAW6C,EAAK7C,SAAStQ,OAAOkT,EAAOQ,OACrB,MAAvBR,EAAO9G,eACP+G,EAAK/G,aAAe8G,EAAO9G,cACxB+G,EAMX,QAAQ5R,GACJ,OAAO3B,KAAKyS,UAAYzS,KAAKyS,UAAU9Q,GAAQuO,OAAOvO,GAAQ3B,KAAKqC,SAAWrC,KAAKiK,QAAQqE,MAAM3M,GAAM4P,MAAQ5P,GAInH,cAAgB,OAAO3B,KAAKqC,QAAU,EAEtC,cAAgB,OAAOrC,KAAKiK,QAAQqE,MAAMtO,KAAKgC,IAAI,IAEnD,kBAAkBL,GACd,IAAIoS,EAAO/T,KAAKsS,mBAChB,OAAe,MAARyB,EAAe,EAAIA,EAAKpS,IAAS,EAG5C,aAAayC,GACT,IAAI4P,EAASjD,OAAOC,KAAKhR,KAAKqS,UAAWhO,EAAQ2P,EAAO7I,IAAI,KAAM,GAClE,GAAI/G,EACA,IAAK,IAAI6P,KAAQ7P,EAAQP,MAAM,KAAM,CACjC,IAAIsD,EAAK6M,EAAOrC,QAAQsC,GACpB9M,GAAM,IACN9C,EAAM8C,IAAM,GAExB,IAAImJ,EAAW,KACf,IAAK,IAAInQ,EAAI,EAAGA,EAAI6T,EAAOrT,OAAQR,IAC/B,IAAKkE,EAAMlE,GACP,IAAK,IAAkCgH,EAA9B0G,EAAI7N,KAAKqS,SAAS2B,EAAO7T,IAAkC,QAAxBgH,EAAKnH,KAAKiE,KAAK4J,QACtDyC,IAAaA,EAAW,IAAI4D,WAAWlU,KAAKoS,QAAU,KAAKjL,GAAM,EAE9E,OAAO,IAAIiJ,EAAQhM,EAASC,EAAOiM,GAGvC,mBAAmBE,GACf,OAAO,IAAID,EAASC,IAG5B,SAASxE,EAAK/H,EAAMjB,GAAO,OAAOiB,EAAKjB,GAAQiB,EAAKjB,EAAM,IAAM,GAChE,SAASqQ,EAAWpP,EAAMxD,EAAOkB,GAC7B,IAAK,IAAeO,EAAX/B,EAAIM,EAAiC,QAAnByB,EAAO+B,EAAK9D,IAAwBA,IAC3D,GAAI+B,GAAQP,EACR,OAAOxB,EAAIM,EACnB,OAAQ,EAEZ,SAASuM,EAAaT,GAClB,IAAI/I,EAAO,KACX,IAAK,IAAIlE,KAASiN,EAAQ,CACtB,IAAIE,EAAUnN,EAAMD,EAAEgN,WACjB/M,EAAMG,KAAOH,EAAMD,EAAEyD,OAAOlB,KAAkB,MAAX6K,GAAmBnN,EAAMG,IAAMgN,IACnEnN,EAAMD,EAAEiB,OAAOkB,UAAUlC,EAAMC,MAAO,MACpCiE,GAAQA,EAAK9D,MAAQJ,EAAMI,SAC7B8D,EAAOlE,GAEf,OAAOkE,K,2CCtiDX2Q,EAAQC,SAAW,SAAkBC,GACjC,IAAIC,EAAOC,MAAMlN,UAAUpE,MAAMuR,KAAKC,WACtCH,EAAK9R,QACLkS,YAAW,WACPL,EAAGxF,MAAM,KAAMyF,KAChB,IAGPH,EAAQQ,SAAWR,EAAQS,KAC3BT,EAAQU,SAAWV,EAAQW,MAAQ,UACnCX,EAAQY,IAAM,EACdZ,EAAQa,SAAU,EAClBb,EAAQc,IAAM,GACdd,EAAQe,KAAO,GAEff,EAAQgB,QAAU,SAAU5D,GAC3B,MAAM,IAAI6D,MAAM,8CAGjB,WACI,IACIC,EADAC,EAAM,IAEVnB,EAAQmB,IAAM,WAAc,OAAOA,GACnCnB,EAAQoB,MAAQ,SAAUC,GACjBH,IAAMA,EAAO,EAAQ,SAC1BC,EAAMD,EAAKI,QAAQD,EAAKF,IANhC,GAUAnB,EAAQuB,KAAOvB,EAAQwB,KACvBxB,EAAQyB,MAAQzB,EAAQ0B,OACxB1B,EAAQ2B,OAAS3B,EAAQ4B,YACzB5B,EAAQ6B,WAAa,aACrB7B,EAAQ8B,SAAW,I,2CCjCnB,IAAIC,EAAS,WAAa,IAAIC,EAAInW,KAASoW,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,IAAI,aAAaC,YAAY,CAAC,MAAQ,WAC5IC,EAAkB,G,wHCEtB,MAAMC,EAA2B,OAAWnF,SAQtCoF,EAA8B,OAAWpF,SAQzCqF,EAA+B,OAAMrF,SACrCsF,EAA6B,OAAMtF,OAAO,CAC5C,QAAQuF,GACJ,OAAO,eAAcA,EAAS,CAC1BC,SAAU,IACVC,cAAe,KAChB,CAAED,SAAUjQ,KAAKC,IAAKiQ,cAAelQ,KAAKE,SAGrD,SAASiQ,EAAUC,GACf,IAAIvV,EAAM,EAEV,OADAuV,EAAQC,kBAAkB,CAAClX,EAAG6F,IAAOnE,EAAMmE,GACpCnE,EAEX,MAAMyV,EAA6B,OAAW7F,OAAO,CACjD,SACI,OAAO8F,EAAaC,OAExB,OAAOhY,EAAOiY,GACV,IAAIlE,EAASkE,EAAGjY,MAAMkY,MAAMX,GACxBY,EAAWF,EAAGG,WAAWhB,GAC7B,GAAIe,EAAU,CACV,IAAIE,EAAYJ,EAAGK,WAAa,OAAgBC,OAAOZ,EAAUM,EAAGL,eAAY1F,EAC5EsG,EAAO,EAAUC,gBAAgBR,EAAII,GAAY/R,EAAO6R,EAASpO,KACjEpF,EAAgB,GAAR2B,EAAuBtG,EAAM0Y,OAAS1Y,EAAM4P,KAKxD,OAHIjL,EADA6T,EACQG,EAAahU,EAAOA,EAAMvD,OAAQ2S,EAAO0D,SAAUe,GAEnDI,EAAajU,EAAOsT,EAAGY,WAAWR,WACvC,IAAIN,EAAqB,GAARzR,EAAuB6R,EAASW,KAAOnU,EAAe,GAAR2B,EAAuB3B,EAAQwT,EAASW,MAElH,IAAIC,EAAUd,EAAGG,WAAWf,GAG5B,GAFe,QAAX0B,GAAgC,UAAXA,IACrB/Y,EAAQA,EAAM+Y,YAC8B,IAA5Cd,EAAGG,WAAW,OAAYY,cAC1B,OAAQf,EAAGL,QAAQI,MAA4ChY,EAApCA,EAAMiZ,WAAWhB,EAAGL,QAAQsB,MAC3D,IAAIC,EAAQ,EAAUV,gBAAgBR,GAClCmB,EAAOnB,EAAGG,WAAW,OAAYgB,MAAOC,EAAYpB,EAAGG,WAAW,OAAYiB,WAOlF,OANIF,EACAnZ,EAAQA,EAAMsZ,WAAWH,EAAOC,EAAMC,EAAWtF,EAAO2D,cAAe3D,EAAO0D,UACzEQ,EAAGI,YACRrY,EAAQA,EAAM4Y,aAAaX,EAAGY,WAAWR,UAAWe,EAAMC,EAAWtF,EAAO2D,gBACjE,QAAXqB,GAAgC,SAAXA,IACrB/Y,EAAQA,EAAM+Y,WACX/Y,GAEX,OAAOkD,GACH,MAAO,CAAE0M,KAAM1M,EAAM0M,KAAKhE,IAAI2N,GAAKA,EAAEC,UAAWd,OAAQxV,EAAMwV,OAAO9M,IAAI2N,GAAKA,EAAEC,YAEpF,SAASC,GACL,OAAO,IAAI1B,EAAa0B,EAAK7J,KAAKhE,IAAI,EAAU8N,UAAWD,EAAKf,OAAO9M,IAAI,EAAU8N,cAM7F,SAAS,EAAQ3F,EAAS,IACtB,MAAO,CACH+D,EACAP,EAAcoC,GAAG5F,GACjB,OAAW6F,iBAAiB,CACxB,YAAYL,EAAGM,GACX,IAAIC,EAAyB,eAAfP,EAAEQ,UAA6BC,EAAsB,eAAfT,EAAEQ,UAA6BE,EAAO,KAC1F,QAAKH,IAELP,EAAEW,iBACKJ,EAAQD,QAa/B,SAASM,EAAIpQ,EAAMsO,GACf,OAAO,UAAU,MAAErY,EAAK,SAAEoa,IACtB,IAAK/B,GAAarY,EAAMqa,SACpB,OAAO,EACX,IAAIC,EAAeta,EAAMua,MAAMzC,GAAe,GAC9C,IAAKwC,EACD,OAAO,EACX,IAAIrC,EAAKqC,EAAanY,IAAI4H,EAAM/J,EAAOqY,GACvC,QAAKJ,IAELmC,EAASnC,IACF,IAOf,MAAM+B,EAAoBG,EAAI,GAAc,GAKtCF,EAAoBE,EAAI,GAAgB,GAIxCK,EAA6BL,EAAI,GAAc,GAI/CM,EAA6BN,EAAI,GAAgB,GAoBvD,MAAM,EACF,YAMAvC,EAEA8C,EAASC,EAETC,EAGAC,GACIpa,KAAKmX,QAAUA,EACfnX,KAAKia,QAAUA,EACfja,KAAKka,OAASA,EACdla,KAAKma,eAAiBA,EACtBna,KAAKoa,gBAAkBA,EAE3B,YAAYC,GACR,OAAO,IAAI,EAAUra,KAAKmX,QAASnX,KAAKia,QAASja,KAAKka,OAAQla,KAAKma,eAAgBE,GAEvF,SACI,IAAIC,EAAIC,EAAIjE,EACZ,MAAO,CACHa,QAAiC,QAAvBmD,EAAKta,KAAKmX,eAA4B,IAAPmD,OAAgB,EAASA,EAAGvB,SACrEmB,OAA+B,QAAtBK,EAAKva,KAAKka,cAA2B,IAAPK,OAAgB,EAASA,EAAGxB,SACnEoB,eAA+C,QAA9B7D,EAAKtW,KAAKma,sBAAmC,IAAP7D,OAAgB,EAASA,EAAGyC,SACnFqB,gBAAiBpa,KAAKoa,gBAAgBjP,IAAI1H,GAAKA,EAAEsV,WAGzD,gBAAgBC,GACZ,OAAO,IAAI,EAAUA,EAAK7B,SAAW,OAAU8B,SAASD,EAAK7B,SAAU,GAAI6B,EAAKkB,QAAU,OAAWjB,SAASD,EAAKkB,QAASlB,EAAKmB,gBAAkB,OAAgBlB,SAASD,EAAKmB,gBAAiBnB,EAAKoB,gBAAgBjP,IAAI,OAAgB8N,WAK/O,uBAAuBzB,EAAII,GACvB,IAAIqC,EAAUO,EACd,IAAK,IAAIC,KAAUjD,EAAGY,WAAWX,MAAMZ,GAAkB,CACrD,IAAIjT,EAAS6W,EAAOjD,GAChB5T,EAAOjD,SACPsZ,EAAUA,EAAQ7Z,OAAOwD,IAEjC,OAAKqW,EAAQtZ,QAAU6W,EAAGL,QAAQI,MACvB,KACJ,IAAI,EAAUC,EAAGL,QAAQsD,OAAOjD,EAAGY,WAAWsC,KAAMT,OAASxI,EAAWmG,GAAaJ,EAAGY,WAAWR,UAAW4C,GAEzH,iBAAiBG,GACb,OAAO,IAAI,OAAUlJ,EAAW+I,OAAM/I,OAAWA,EAAWkJ,IAGpE,SAASzC,EAAa0C,EAAQ7U,EAAI8U,EAAQC,GACtC,IAAIra,EAAQsF,EAAK,EAAI8U,EAAS,GAAK9U,EAAK8U,EAAS,EAAI,EACjDE,EAAYH,EAAO3X,MAAMxC,EAAOsF,GAEpC,OADAgV,EAAUra,KAAKoa,GACRC,EAEX,SAASC,EAAWtN,EAAGC,GACnB,IAAItI,EAAS,GAAI2V,GAAa,EAS9B,OARAtN,EAAE0J,kBAAkB,CAAC6D,EAAGvH,IAAMrO,EAAO3E,KAAKua,EAAGvH,IAC7C/F,EAAEyJ,kBAAkB,CAAC8D,EAAIC,EAAIF,EAAGvH,KAC5B,IAAK,IAAIvT,EAAI,EAAGA,EAAIkF,EAAO1E,QAAS,CAChC,IAAIkF,EAAOR,EAAOlF,KAAM4F,EAAKV,EAAOlF,KAChCuT,GAAK7N,GAAQoV,GAAKlV,IAClBiV,GAAa,MAGlBA,EAEX,SAASI,EAAiB1N,EAAGC,GACzB,OAAOD,EAAErI,OAAO1E,QAAUgN,EAAEtI,OAAO1E,QACoC,IAAnE+M,EAAErI,OAAOpF,OAAO,CAAC6G,EAAG3G,IAAM2G,EAAEyQ,OAAS5J,EAAEtI,OAAOlF,GAAGoX,OAAO5W,OAEhE,SAAS0a,EAAK3N,EAAGC,GACb,OAAQD,EAAE/M,OAAcgN,EAAEhN,OAAa+M,EAAEtN,OAAOuN,GAAbD,EAAhBC,EAEvB,MAAM6M,EAAO,GACPc,EAAwB,IAC9B,SAASnD,EAAayC,EAAQhD,GAC1B,GAAKgD,EAAOja,OAGP,CACD,IAAI4a,EAAYX,EAAOA,EAAOja,OAAS,GACnC6a,EAAOD,EAAUnB,gBAAgBnX,MAAM8D,KAAKC,IAAI,EAAGuU,EAAUnB,gBAAgBzZ,OAAS2a,IAC1F,OAAIE,EAAK7a,QAAU6a,EAAKA,EAAK7a,OAAS,GAAG8a,GAAG7D,GACjCgD,GACXY,EAAK9a,KAAKkX,GACHM,EAAa0C,EAAQA,EAAOja,OAAS,EAAG,IAAK4a,EAAUG,YAAYF,KAR1E,MAAO,CAAC,EAAU5D,UAAU,CAACA,KAYrC,SAAS+D,EAAaf,GAClB,IAAItW,EAAOsW,EAAOA,EAAOja,OAAS,GAC9Boa,EAAYH,EAAO3X,QAEvB,OADA8X,EAAUH,EAAOja,OAAS,GAAK2D,EAAKoX,YAAYpX,EAAK8V,gBAAgBnX,MAAM,EAAGqB,EAAK8V,gBAAgBzZ,OAAS,IACrGoa,EAKX,SAASa,EAAmBhB,EAAQiB,GAChC,IAAKjB,EAAOja,OACR,OAAOia,EACX,IAAIja,EAASia,EAAOja,OAAQga,EAAaH,EACzC,MAAO7Z,EAAQ,CACX,IAAI+X,EAAQoD,EAASlB,EAAOja,EAAS,GAAIkb,EAASlB,GAClD,GAAIjC,EAAMvB,UAAYuB,EAAMvB,QAAQI,OAASmB,EAAMuB,QAAQtZ,OAAQ,CAC/D,IAAIiD,EAASgX,EAAO3X,MAAM,EAAGtC,GAE7B,OADAiD,EAAOjD,EAAS,GAAK+X,EACd9U,EAGPiY,EAAUnD,EAAMwB,OAChBvZ,IACAga,EAAajC,EAAM0B,gBAG3B,OAAOO,EAAWha,OAAS,CAAC,EAAUiX,UAAU+C,IAAeH,EAEnE,SAASsB,EAASpD,EAAOmD,EAASE,GAC9B,IAAIpB,EAAaU,EAAK3C,EAAM0B,gBAAgBzZ,OAAS+X,EAAM0B,gBAAgBjP,IAAI1H,GAAKA,EAAE0H,IAAI0Q,IAAYrB,EAAMuB,GAE5G,IAAKrD,EAAMvB,QACP,OAAO,EAAUS,UAAU+C,GAC/B,IAAIqB,EAAgBtD,EAAMvB,QAAQhM,IAAI0Q,GAAUI,EAASJ,EAAQK,QAAQxD,EAAMvB,SAAS,GACpFgF,EAAczD,EAAMwB,OAASxB,EAAMwB,OAAOkC,YAAYH,GAAUA,EACpE,OAAO,IAAI,EAAUD,EAAe,OAAYK,WAAW3D,EAAMuB,QAAS4B,GAAUM,EAAazD,EAAMyB,eAAehP,IAAI8Q,GAAStB,GAEvI,MAAM2B,EAAoB,8BAC1B,MAAMhF,EACF,YAAYnI,EAAM8I,EAAQsE,EAAW,EAAGC,GACpCxc,KAAKmP,KAAOA,EACZnP,KAAKiY,OAASA,EACdjY,KAAKuc,SAAWA,EAChBvc,KAAKwc,cAAgBA,EAEzB,UACI,OAAOxc,KAAKuc,SAAW,IAAIjF,EAAatX,KAAKmP,KAAMnP,KAAKiY,QAAUjY,KAEtE,WAAW0Y,EAAOC,EAAMC,EAAW3B,EAAe4D,GAC9C,IAAI1L,EAAOnP,KAAKmP,KAAMoM,EAAYpM,EAAKA,EAAKxO,OAAS,GAarD,OALIwO,EAPAoM,GAAaA,EAAUpE,UAAYoE,EAAUpE,QAAQI,OAASmB,EAAMvB,WAClEyB,GAAa0D,EAAkBvT,KAAK6P,OACnC2C,EAAUnB,gBAAgBzZ,QACzBgY,EAAO3Y,KAAKuc,SAAWtF,GACvB+D,EAAWO,EAAUpE,QAASuB,EAAMvB,UAEvB,sBAAbyB,GACGV,EAAa/I,EAAMA,EAAKxO,OAAS,EAAGka,EAAQ,IAAI,EAAUnC,EAAMvB,QAAQsF,QAAQlB,EAAUpE,SAAUkE,EAAK3C,EAAMuB,QAASsB,EAAUtB,SAAUsB,EAAUrB,OAAQqB,EAAUpB,eAAgBK,IAGxLtC,EAAa/I,EAAMA,EAAKxO,OAAQka,EAAQnC,GAE5C,IAAIpB,EAAanI,EAAMqL,EAAM7B,EAAMC,GAE9C,aAAahB,EAAWe,EAAMC,EAAW3B,GACrC,IAAI3S,EAAOtE,KAAKmP,KAAKxO,OAASX,KAAKmP,KAAKnP,KAAKmP,KAAKxO,OAAS,GAAGyZ,gBAAkBI,EAChF,OAAIlW,EAAK3D,OAAS,GACdgY,EAAO3Y,KAAKuc,SAAWtF,GACvB2B,GAAa5Y,KAAKwc,eAAiB5D,GAAa,gBAAgB7P,KAAK6P,IACrEwC,EAAiB9W,EAAKA,EAAK3D,OAAS,GAAIiX,GACjC5X,KACJ,IAAIsX,EAAaa,EAAanY,KAAKmP,KAAMyI,GAAY5X,KAAKiY,OAAQU,EAAMC,GAEnF,WAAWiD,GACP,OAAO,IAAIvE,EAAasE,EAAmB5b,KAAKmP,KAAM0M,GAAUD,EAAmB5b,KAAKiY,OAAQ4D,GAAU7b,KAAKuc,SAAUvc,KAAKwc,eAElI,IAAIlT,EAAM/J,EAAOqY,GACb,IAAIgD,EAAiB,GAARtR,EAAuBtJ,KAAKmP,KAAOnP,KAAKiY,OACrD,GAAqB,GAAjB2C,EAAOja,OACP,OAAO,KACX,IAAI+X,EAAQkC,EAAOA,EAAOja,OAAS,GACnC,GAAIiX,GAAac,EAAM0B,gBAAgBzZ,OACnC,OAAOpB,EAAMmd,OAAO,CAChB9E,UAAWc,EAAM0B,gBAAgB1B,EAAM0B,gBAAgBzZ,OAAS,GAChEgc,YAAahG,EAAYuC,GAAG,CAAE5P,OAAM+O,KAAMsD,EAAaf,KACvDhC,UAAmB,GAARtP,EAAuB,cAAgB,cAClDsT,gBAAgB,IAGnB,GAAKlE,EAAMvB,QAGX,CACD,IAAIkB,EAAwB,GAAjBuC,EAAOja,OAAc6Z,EAAOI,EAAO3X,MAAM,EAAG2X,EAAOja,OAAS,GAGvE,OAFI+X,EAAMwB,SACN7B,EAAOuD,EAAmBvD,EAAMK,EAAMwB,SACnC3a,EAAMmd,OAAO,CAChBvF,QAASuB,EAAMvB,QACfS,UAAWc,EAAMyB,eACjBF,QAASvB,EAAMuB,QACf0C,YAAahG,EAAYuC,GAAG,CAAE5P,OAAM+O,SACpCpY,QAAQ,EACR2Y,UAAmB,GAARtP,EAAuB,OAAS,OAC3CsT,gBAAgB,IAbpB,OAAO,MAkBnBtF,EAAaC,MAAqB,IAAID,EAAakD,EAAMA,GASzD,MAAMqC,EAAgB,CAClB,CAAEC,IAAK,QAASC,IAAKxD,EAAME,gBAAgB,GAC3C,CAAEqD,IAAK,QAASE,IAAK,cAAeD,IAAKvD,EAAMC,gBAAgB,GAC/D,CAAEqD,IAAK,QAASC,IAAKhD,EAAeN,gBAAgB,GACpD,CAAEqD,IAAK,QAASE,IAAK,cAAeD,IAAK/C,EAAeP,gBAAgB,I,4BCpW5E,MAAMwD,EAAgC,IAAI,OAS1C,SAASC,EAAoBC,GACzB,OAAO,OAAM3L,OAAO,CAChB4L,QAASD,EAAWnJ,GAAUA,EAAO5T,OAAO+c,QAAY1L,IAYhE,MAAM,EAOF,YAKAxN,EAAM3D,EAIN+c,EAASC,EAAkB,IACvBtd,KAAKiE,KAAOA,EACZjE,KAAKqd,QAAUA,EAIV,OAAYhW,UAAUkW,eAAe,SACtCxM,OAAOyM,eAAe,OAAYnW,UAAW,OAAQ,CAAE,MAAQ,OAAOoW,EAAWzd,SACrFA,KAAKM,OAASA,EACdN,KAAK0d,UAAY,CACbC,GAASzE,GAAGlZ,MACZ,OAAY4d,aAAa1E,GAAG,CAAC3Z,EAAOE,EAAK6J,IAAS/J,EAAMkY,MAAMoG,EAAoBte,EAAOE,EAAK6J,MAChGlJ,OAAOkd,GAKb,WAAW/d,EAAOE,EAAK6J,GAAO,GAC1B,OAAOuU,EAAoBte,EAAOE,EAAK6J,IAAStJ,KAAKiE,KAOzD,YAAY1E,GACR,IAAIue,EAAOve,EAAMkY,MAAMkG,IACvB,IAAc,OAATG,QAA0B,IAATA,OAAkB,EAASA,EAAK7Z,OAASjE,KAAKiE,KAChE,MAAO,CAAC,CAAE4B,KAAM,EAAGE,GAAIxG,EAAMmb,IAAI/Z,SACrC,IAAKmd,IAASA,EAAKC,cACf,MAAO,GACX,IAAIna,EAAS,GACToa,EAAU,CAAC3U,EAAMxD,KACjB,GAAIwD,EAAKwB,KAAKoS,IAAqBjd,KAAKiE,KAEpC,YADAL,EAAOlD,KAAK,CAAEmF,OAAME,GAAIF,EAAOwD,EAAK1I,SAGxC,IAAIsd,EAAQ5U,EAAKwB,KAAK,OAASqT,SAC/B,GAAID,EAAO,CACP,GAAIA,EAAM5U,KAAKwB,KAAKoS,IAAqBjd,KAAKiE,KAAM,CAChD,GAAIga,EAAME,QACN,IAAK,IAAIrX,KAAKmX,EAAME,QAChBva,EAAOlD,KAAK,CAAEmF,KAAMiB,EAAEjB,KAAOA,EAAME,GAAIe,EAAEf,GAAKF,SAElDjC,EAAOlD,KAAK,CAAEmF,KAAMA,EAAME,GAAIF,EAAOwD,EAAK1I,SAC9C,OAEC,GAAIsd,EAAME,QAAS,CACpB,IAAItc,EAAO+B,EAAOjD,OAElB,GADAqd,EAAQC,EAAM5U,KAAM4U,EAAME,QAAQ,GAAGtY,KAAOA,GACxCjC,EAAOjD,OAASkB,EAChB,QAGZ,IAAK,IAAI1B,EAAI,EAAGA,EAAIkJ,EAAKsB,SAAShK,OAAQR,IAAK,CAC3C,IAAIie,EAAK/U,EAAKsB,SAASxK,GACnBie,aAAc,QACdJ,EAAQI,EAAI/U,EAAKuB,UAAUzK,GAAK0F,KAI5C,OADAmY,EAAQP,EAAWle,GAAQ,GACpBqE,EAMX,oBAAsB,OAAO,GAMjC,SAASia,EAAoBte,EAAOE,EAAK6J,GACrC,IAAI+U,EAAU9e,EAAMkY,MAAMkG,IAC1B,IAAKU,EACD,OAAO,KACX,IAAI5G,EAAQ4G,EAAQpa,KACpB,GAAIoa,EAAQN,cACR,IAAK,IAAIO,EAAOb,EAAWle,GAAO8d,QAASiB,EAAMA,EAAOA,EAAKC,MAAM9e,EAAK6J,GAAM,GAAM,GAChFmO,EAAQ6G,EAAKxd,KAAK+J,KAAKoS,IAAqBxF,EAEpD,OAAOA,EAVX,EAAS+G,SAAwB,OAAYhN,SAiB7C,MAAMiN,UAAmB,EACrB,YAAYxa,EAAM3D,GACdmQ,MAAMxM,EAAM3D,EAAQA,EAAO+c,SAC3Brd,KAAKM,OAASA,EAKlB,cAAckQ,GACV,IAAIvM,EAAOiZ,EAAoB1M,EAAKoN,cACpC,OAAO,IAAIa,EAAWxa,EAAMuM,EAAKlQ,OAAOoe,UAAU,CAC9ChN,MAAO,CAACuL,EAAiB0B,IAAI7d,GAAQA,EAAK8d,MAAQ3a,OAAOwN,OAOjE,UAAU/J,GACN,OAAO,IAAI+W,EAAWze,KAAKiE,KAAMjE,KAAKM,OAAOoe,UAAUhX,IAE3D,oBAAsB,OAAO1H,KAAKM,OAAOoQ,SAAS/P,OAAS,GAO/D,SAAS8c,EAAWle,GAChB,IAAIua,EAAQva,EAAMua,MAAM,EAASva,OAAO,GACxC,OAAOua,EAAQA,EAAMzQ,KAAO,OAAKkO,MAqCrC,MAAMsH,EACF,YAAYnE,EAAK/Z,EAAS+Z,EAAI/Z,QAC1BX,KAAK0a,IAAMA,EACX1a,KAAKW,OAASA,EACdX,KAAK8e,UAAY,EACjB9e,KAAK+e,OAAS,GACd/e,KAAKuJ,OAASmR,EAAIsE,OAEtB,OAAOvf,GAGH,OAFAO,KAAK+e,OAAS/e,KAAKuJ,OAAOrH,KAAKzC,EAAMO,KAAK8e,WAAWrc,MACrDzC,KAAK8e,UAAYrf,EAAMO,KAAK+e,OAAOpe,OAC5BX,KAAK8e,UAAY9e,KAAK+e,OAAOpe,OAExC,MAAMlB,GAEF,OADAO,KAAKif,OAAOxf,GACLO,KAAK+e,OAEhB,iBAAmB,OAAO,EAC1B,KAAKlZ,EAAME,GACP,IAAImZ,EAAclf,KAAK8e,UAAY9e,KAAK+e,OAAOpe,OAC/C,OAAIkF,EAAOqZ,GAAenZ,GAAM/F,KAAK8e,UAC1B9e,KAAK0a,IAAIyE,YAAYtZ,EAAME,GAE3B/F,KAAK+e,OAAO9b,MAAM4C,EAAOqZ,EAAanZ,EAAKmZ,IAG9D,IAAIE,EAAiB,KAIrB,MAAM,EAIF,YAAY9e,EAIZf,EAIAyK,EAAY,GAIZX,EAAMgW,EASNC,EAIAzN,EAMA0N,GACIvf,KAAKM,OAASA,EACdN,KAAKT,MAAQA,EACbS,KAAKgK,UAAYA,EACjBhK,KAAKqJ,KAAOA,EACZrJ,KAAKqf,QAAUA,EACfrf,KAAKsf,SAAWA,EAChBtf,KAAK6R,QAAUA,EACf7R,KAAKuf,WAAaA,EAClBvf,KAAK2S,MAAQ,KAIb3S,KAAKwf,YAAc,GAEvB,aACI,OAAOxf,KAAKM,OAAOmf,WAAW,IAAIZ,EAAS7e,KAAKT,MAAMmb,KAAM1a,KAAKgK,WAKrE,KAAK2O,EAAM+G,GAGP,OAFY,MAARA,GAAgBA,GAAQ1f,KAAKT,MAAMmb,IAAI/Z,SACvC+e,OAAOjO,GACPzR,KAAKqJ,MAAQ,OAAKkO,OAASvX,KAAK2f,OAAgB,OAATD,QAA0B,IAATA,EAAkBA,EAAO1f,KAAKT,MAAMmb,IAAI/Z,SAChGX,KAAK4f,YACE,GAEJ5f,KAAK6f,YAAY,KACpB,IAAIvF,EACJ,IAAIwF,EAAUC,KAAKC,MAAQrH,EAM3B,IALK3Y,KAAK2S,QACN3S,KAAK2S,MAAQ3S,KAAKyf,cACV,MAARC,IAAyC,MAAxB1f,KAAK2S,MAAMtG,WAAqBrM,KAAK2S,MAAMtG,UAAYqT,IACxEA,EAAO1f,KAAKT,MAAMmb,IAAI/Z,QACtBX,KAAK2S,MAAMsN,OAAOP,KACb,CACL,IAAIvQ,EAAOnP,KAAK2S,MAAMtK,UACtB,GAAI8G,EAAM,CAKN,GAJAnP,KAAKgK,UAAYhK,KAAKkgB,mBAAmB,OAAaC,QAAQhR,EAAMnP,KAAKgK,UAAmC,MAAxBhK,KAAK2S,MAAMtG,YAC/FrM,KAAKqf,QAA0C,QAA/B/E,EAAKta,KAAK2S,MAAMtG,iBAA8B,IAAPiO,EAAgBA,EAAKta,KAAKT,MAAMmb,IAAI/Z,OAC3FX,KAAKqJ,KAAO8F,EACZnP,KAAK2S,MAAQ,OACT3S,KAAKqf,SAAoB,OAATK,QAA0B,IAATA,EAAkBA,EAAO1f,KAAKT,MAAMmb,IAAI/Z,SAGzE,OAAO,EAFPX,KAAK2S,MAAQ3S,KAAKyf,aAI1B,GAAIM,KAAKC,MAAQF,EACb,OAAO,KAOvB,WACI,IAAIrgB,EAAK4J,EACLrJ,KAAK2S,QAAUlT,EAAMO,KAAK2S,MAAMyN,YAAcpgB,KAAKqf,WACvB,MAAxBrf,KAAK2S,MAAMtG,WAAqBrM,KAAK2S,MAAMtG,UAAY5M,IACvDO,KAAK2S,MAAMsN,OAAOxgB,GACtBO,KAAK6f,YAAY,KAAQ,QAASxW,EAAOrJ,KAAK2S,MAAMtK,eACpDrI,KAAKqf,QAAU5f,EACfO,KAAKqJ,KAAOA,EACZrJ,KAAKgK,UAAYhK,KAAKkgB,mBAAmB,OAAaC,QAAQngB,KAAKqJ,KAAMrJ,KAAKgK,WAAW,IACzFhK,KAAK2S,MAAQ,MAGrB,YAAYsI,GACR,IAAI9H,EAAOiM,EACXA,EAAiBpf,KACjB,IACI,OAAOib,IAEX,QACImE,EAAiBjM,GAGzB,mBAAmBnJ,GACf,IAAK,IAAIlD,EAAGA,EAAI9G,KAAKwf,YAAY9d,OAC7BsI,EAAYqW,EAAarW,EAAWlD,EAAEjB,KAAMiB,EAAEf,IAClD,OAAOiE,EAKX,QAAQmN,EAASmJ,GACb,IAAI,UAAEtW,EAAS,KAAEX,EAAI,QAAEgW,EAAO,SAAEC,EAAQ,QAAEzN,GAAY7R,KAEtD,GADAA,KAAK4f,YACAzI,EAAQI,MAAO,CAChB,IAAIlS,EAAS,GAMb,GALA8R,EAAQC,kBAAkB,CAACmJ,EAAOC,EAAKC,EAAOC,IAAQrb,EAAO3E,KAAK,CAAE6f,QAAOC,MAAKC,QAAOC,SACvF1W,EAAY,OAAa2W,aAAa3W,EAAW3E,GACjDgE,EAAO,OAAKkO,MACZ8H,EAAU,EACVC,EAAW,CAAEzZ,KAAMsR,EAAQyJ,OAAOtB,EAASzZ,MAAO,GAAIE,GAAIoR,EAAQyJ,OAAOtB,EAASvZ,GAAI,IAClF/F,KAAK6R,QAAQlR,OAAQ,CACrBkR,EAAU,GACV,IAAK,IAAI/K,KAAK9G,KAAK6R,QAAS,CACxB,IAAIhM,EAAOsR,EAAQyJ,OAAO9Z,EAAEjB,KAAM,GAAIE,EAAKoR,EAAQyJ,OAAO9Z,EAAEf,IAAK,GAC7DF,EAAOE,GACP8L,EAAQnR,KAAK,CAAEmF,OAAME,SAIrC,OAAO,IAAI,EAAa/F,KAAKM,OAAQggB,EAAUtW,EAAWX,EAAMgW,EAASC,EAAUzN,EAAS7R,KAAKuf,YAKrG,eAAeD,GACX,GAAItf,KAAKsf,SAASzZ,MAAQyZ,EAASzZ,MAAQ7F,KAAKsf,SAASvZ,IAAMuZ,EAASvZ,GACpE,OAAO,EACX/F,KAAKsf,SAAWA,EAChB,IAAIuB,EAAW7gB,KAAK6R,QAAQlR,OAC5B,IAAK,IAAIR,EAAI,EAAGA,EAAIH,KAAK6R,QAAQlR,OAAQR,IAAK,CAC1C,IAAI,KAAE0F,EAAI,GAAEE,GAAO/F,KAAK6R,QAAQ1R,GAC5B0F,EAAOyZ,EAASvZ,IAAMA,EAAKuZ,EAASzZ,OACpC7F,KAAKgK,UAAYqW,EAAargB,KAAKgK,UAAWnE,EAAME,GACpD/F,KAAK6R,QAAQ9D,OAAO5N,IAAK,IAGjC,QAAIH,KAAK6R,QAAQlR,QAAUkgB,KAE3B7gB,KAAK+C,SACE,GAKX,QACQ/C,KAAK2S,QACL3S,KAAK4f,WACL5f,KAAK2S,MAAQ,MAQrB,gBAAgB9M,EAAME,GAClB/F,KAAK6R,QAAQnR,KAAK,CAAEmF,OAAME,OAW9B,yBAAyB+a,GACrB,OAAO,IAAI,cAAc,OACrB,YAAY1b,EAAO4E,EAAW3E,GAC1B,IAAIQ,EAAOR,EAAO,GAAGQ,KAAME,EAAKV,EAAOA,EAAO1E,OAAS,GAAGoF,GACtDzF,EAAS,CACT8f,UAAWva,EACX,UACI,IAAIxF,EAAK+e,EACT,GAAI/e,EAAI,CACJ,IAAK,IAAIyG,KAAKzB,EACVhF,EAAGmf,YAAY9e,KAAKoG,GACpBga,IACAzgB,EAAGkf,WAAalf,EAAGkf,WAAawB,QAAQC,IAAI,CAAC3gB,EAAGkf,WAAYuB,IAAUA,GAG9E,OADA9gB,KAAKogB,UAAYra,EACV,IAAI,OAAK,OAASyU,KAAM,GAAI,GAAIzU,EAAKF,IAEhDwG,UAAW,KACX,YAEJ,OAAO/L,IAOnB,OAAOof,GACHA,EAAO3Y,KAAKE,IAAIyY,EAAM1f,KAAKT,MAAMmb,IAAI/Z,QACrC,IAAIsgB,EAAQjhB,KAAKgK,UACjB,OAAOhK,KAAKqf,SAAWK,GAAQuB,EAAMtgB,QAA2B,GAAjBsgB,EAAM,GAAGpb,MAAaob,EAAM,GAAGlb,IAAM2Z,EAMxF,aAAe,OAAON,GAE1B,SAASiB,EAAarW,EAAWnE,EAAME,GACnC,OAAO,OAAa4a,aAAa3W,EAAW,CAAC,CAAEuW,MAAO1a,EAAM2a,IAAKza,EAAI0a,MAAO5a,EAAM6a,IAAK3a,KAE3F,MAAM,EACF,YAGAxF,GACIP,KAAKO,QAAUA,EACfP,KAAKqJ,KAAO9I,EAAQ8I,KAExB,MAAMmO,GACF,IAAKA,EAAGK,WACJ,OAAO7X,KACX,IAAIwE,EAAQxE,KAAKO,QAAQ4W,QAAQK,EAAGL,QAASK,EAAGjY,OAI5CmgB,EAAO1f,KAAKO,QAAQ8e,SAAW7H,EAAGY,WAAWsC,IAAI/Z,YAAS8Q,EACxD1K,KAAKC,IAAIwQ,EAAGL,QAAQyJ,OAAO5gB,KAAKO,QAAQ8e,SAAU7a,EAAM8a,SAASvZ,IAGvE,OAFKvB,EAAM0c,KAAK,GAAgBxB,IAC5Blb,EAAMob,WACH,IAAI,EAAcpb,GAE7B,YAAYjF,GACR,IAAI4hB,EAAOpa,KAAKE,IAAI,IAAyB1H,EAAMmb,IAAI/Z,QACnDygB,EAAa,IAAI,EAAa7hB,EAAMkY,MAAMkG,IAAUrd,OAAQf,EAAO,GAAI,OAAKgY,MAAO,EAAG,CAAE1R,KAAM,EAAGE,GAAIob,GAAQ,GAAI,MAGrH,OAFKC,EAAWF,KAAK,GAAgBC,IACjCC,EAAWxB,WACR,IAAI,EAAcwB,IAGjC,EAAS7hB,MAAqB,OAAWiS,OAAO,CAC5C5B,OAAQ,EAAcyR,KACtB,OAAO5e,EAAO+U,GACV,IAAK,IAAIsB,KAAKtB,EAAGyC,QACb,GAAInB,EAAEwI,GAAG,EAAS9C,UACd,OAAO1F,EAAErW,MACjB,OAAI+U,EAAGY,WAAWX,MAAMkG,KAAanG,EAAGjY,MAAMkY,MAAMkG,IACzC,EAAc0D,KAAK7J,EAAGjY,OAC1BkD,EAAMoM,MAAM2I,MAG3B,IAAI+J,EAAeC,IACf,IAAIC,EAAU/M,WAAW,IAAM8M,IAAY,KAC3C,MAAO,IAAME,aAAaD,IAEI,oBAAvBE,sBACPJ,EAAeC,IACX,IAAII,GAAQ,EAAGH,EAAU/M,WAAW,KAChCkN,EAAOD,oBAAoBH,EAAU,CAAEC,QAAS,OACjD,KACH,MAAO,IAAMG,EAAO,EAAIF,aAAaD,GAAWI,mBAAmBD,KAE3E,MAAME,GAA2B,OAAWC,UAAU,MAClD,YAAY3I,GACRpZ,KAAKoZ,KAAOA,EACZpZ,KAAKgiB,QAAU,KACfhiB,KAAKiiB,cAAgB,EAErBjiB,KAAKkiB,UAAY,EAEjBliB,KAAKmiB,aAAe,EACpBniB,KAAKkhB,KAAOlhB,KAAKkhB,KAAKkB,KAAKpiB,MAC3BA,KAAKqiB,eAET,OAAO3F,GACH,IAAIrc,EAAKL,KAAKoZ,KAAK7Z,MAAMua,MAAM,EAASva,OAAOgB,SAC3CF,EAAGiiB,eAAe5F,EAAOtD,KAAKkG,WAAatf,KAAKoZ,KAAKkG,SAASvZ,GAAK1F,EAAGgf,UACtErf,KAAKqiB,eACL3F,EAAO7E,aACH7X,KAAKoZ,KAAKmJ,WACVviB,KAAKmiB,aAAe,IACxBniB,KAAKqiB,gBAETriB,KAAKwiB,mBAAmBniB,GAE5B,eACI,GAAIL,KAAKgiB,QACL,OACJ,IAAI,MAAEziB,GAAUS,KAAKoZ,KAAMU,EAAQva,EAAMua,MAAM,EAASva,OACpDua,EAAMzQ,MAAQyQ,EAAMvZ,QAAQ8I,MAASyQ,EAAMvZ,QAAQof,OAAOpgB,EAAMmb,IAAI/Z,UACpEX,KAAKgiB,QAAUT,EAAYvhB,KAAKkhB,OAExC,KAAKuB,GACDziB,KAAKgiB,QAAU,KACf,IAAIhC,EAAMD,KAAKC,MAKf,GAJIhgB,KAAKkiB,SAAWlC,IAAQhgB,KAAKkiB,SAAW,GAAKliB,KAAKoZ,KAAKmJ,YACvDviB,KAAKkiB,SAAWlC,EAAM,IACtBhgB,KAAKmiB,YAAc,KAEnBniB,KAAKmiB,aAAe,EACpB,OACJ,IAAI,MAAE5iB,EAAO+f,UAAYvZ,GAAIob,IAAWnhB,KAAKoZ,KAAMU,EAAQva,EAAMua,MAAM,EAASva,OAChF,GAAIua,EAAMzQ,MAAQyQ,EAAMvZ,QAAQ8I,MAAQyQ,EAAMvZ,QAAQof,OAAOwB,EAAO,KAChE,OACJ,IAAIxI,EAAO5R,KAAKE,IAAIjH,KAAKmiB,YAAa,IAAiBM,EAAW1b,KAAKC,IAAI,GAAmByb,EAASC,gBAAkB,GAAK,KAC1HC,EAAgB7I,EAAMvZ,QAAQ8e,QAAU8B,GAAQ5hB,EAAMmb,IAAI/Z,OAASwgB,EAAO,IAC1EhS,EAAO2K,EAAMvZ,QAAQ2gB,KAAKvI,EAAMwI,GAAQwB,EAAgB,EAAI,MAChE3iB,KAAKmiB,aAAepC,KAAKC,MAAQA,GAC7B7Q,GAAQnP,KAAKmiB,aAAe,KAC5BrI,EAAMvZ,QAAQqf,WACd5f,KAAKoZ,KAAKO,SAAS,CAAEM,QAAS,EAASuE,SAAStF,GAAG,IAAI,EAAcY,EAAMvZ,aAE3EP,KAAKmiB,YAAc,KAAOhT,GAASwT,IACnC3iB,KAAKqiB,eACTriB,KAAKwiB,mBAAmB1I,EAAMvZ,SAElC,mBAAmBF,GACXA,EAAGkf,aACHvf,KAAKiiB,gBACL5hB,EAAGkf,WACEqD,KAAK,IAAM5iB,KAAKqiB,gBAChBQ,MAAMC,GAAO,eAAa9iB,KAAKoZ,KAAK7Z,MAAOujB,IAC3CF,KAAK,IAAM5iB,KAAKiiB,iBACrB5hB,EAAGkf,WAAa,MAGxB,UACQvf,KAAKgiB,SACLhiB,KAAKgiB,UAEb,YACI,OAAOhiB,KAAKgiB,SAAWhiB,KAAKiiB,cAAgB,IAEjD,CACCc,cAAe,CAAE,QAAU/iB,KAAKqiB,mBAK9B1E,GAAwB,OAAMnM,OAAO,CACvC,QAAQwR,GAAa,OAAOA,EAAUriB,OAASqiB,EAAU,GAAK,MAC9DC,QAAS,CAAC,EAAS1jB,MAAOuiB,MAS9B,MAAMoB,GAIF,YAIAvF,EAOAwF,EAAU,IACNnjB,KAAK2d,SAAWA,EAChB3d,KAAKmjB,QAAUA,EACfnjB,KAAK0d,UAAY,CAACC,EAAUwF,IA0GpC,MAAMC,GAA6B,OAAM5R,SAMnC6R,GAA0B,OAAM7R,OAAO,CACzC4L,QAASpJ,IACL,IAAKA,EAAOrT,OACR,MAAO,KACX,IAAK,eAAeoI,KAAKiL,EAAO,IAC5B,MAAM,IAAIoB,MAAM,wBAA0BkO,KAAKC,UAAUvP,EAAO,KACpE,OAAOA,EAAO,MAStB,SAASwP,GAAcjkB,GACnB,IAAIkkB,EAAOlkB,EAAMkY,MAAM4L,IACvB,OAA6B,GAAtBI,EAAKrd,WAAW,GAAU7G,EAAMmkB,QAAUD,EAAK9iB,OAAS8iB,EAAK9iB,OAQxE,SAASgjB,GAAapkB,EAAOqkB,GACzB,IAAIhgB,EAAS,GAAIigB,EAAKtkB,EAAMmkB,QAC5B,GAA6C,GAAzCnkB,EAAMkY,MAAM4L,IAAYjd,WAAW,GACnC,MAAOwd,GAAQC,EACXjgB,GAAU,KACVggB,GAAQC,EAEhB,IAAK,IAAI1jB,EAAI,EAAGA,EAAIyjB,EAAMzjB,IACtByD,GAAU,IACd,OAAOA,EAUX,SAASkgB,GAAevjB,EAASd,GACzBc,aAAmB,SACnBA,EAAU,IAAI,GAAcA,IAChC,IAAK,IAAIwjB,KAAWxjB,EAAQhB,MAAMkY,MAAM2L,IAAgB,CACpD,IAAIxf,EAASmgB,EAAQxjB,EAASd,GAC9B,GAAc,MAAVmE,EACA,OAAOA,EAEf,IAAIyF,EAAOoU,EAAWld,EAAQhB,OAC9B,OAAO8J,EAAO2a,GAAkBzjB,EAAS8I,EAAM5J,GAAO,KAQ1D,MAAM,GAIF,YAIAF,EAIAmI,EAAU,IACN1H,KAAKT,MAAQA,EACbS,KAAK0H,QAAUA,EACf1H,KAAKyjB,KAAOD,GAAcjkB,GAU9B,OAAOE,EAAKwkB,EAAO,GACf,IAAIC,EAAOlkB,KAAKT,MAAMmb,IAAIyJ,OAAO1kB,IAC7B,cAAE2kB,GAAkBpkB,KAAK0H,QAC7B,OAAqB,MAAjB0c,GAAyBA,GAAiBF,EAAKre,MAAQue,GAAiBF,EAAKne,IACzEke,EAAO,EAAIG,EAAgB3kB,EAAM2kB,GAAiB3kB,GAC3C,CAAE4kB,KAAMH,EAAKG,KAAKphB,MAAMmhB,EAAgBF,EAAKre,MAAOA,KAAMue,GAE1D,CAAEC,KAAMH,EAAKG,KAAKphB,MAAM,EAAGmhB,EAAgBF,EAAKre,MAAOA,KAAMqe,EAAKre,MAE1Eqe,EAMX,aAAazkB,EAAKwkB,EAAO,GACrB,GAAIjkB,KAAK0H,QAAQ4c,qBAAuB7kB,GAAOO,KAAK0H,QAAQ0c,cACxD,MAAO,GACX,IAAI,KAAEC,EAAI,KAAExe,GAAS7F,KAAKmkB,OAAO1kB,EAAKwkB,GACtC,OAAOI,EAAKphB,MAAMxD,EAAMoG,EAAMkB,KAAKE,IAAIod,EAAK1jB,OAAQlB,EAAM,IAAMoG,IAKpE,OAAOpG,EAAKwkB,EAAO,GACf,IAAI,KAAEI,EAAI,KAAExe,GAAS7F,KAAKmkB,OAAO1kB,EAAKwkB,GAClCrgB,EAAS5D,KAAKukB,YAAYF,EAAM5kB,EAAMoG,GACtC2e,EAAWxkB,KAAK0H,QAAQ+c,oBAAsBzkB,KAAK0H,QAAQ+c,oBAAoB5e,IAAS,EAG5F,OAFI2e,GAAY,IACZ5gB,GAAU4gB,EAAWxkB,KAAKukB,YAAYF,EAAMA,EAAKK,OAAO,UACrD9gB,EAMX,YAAYsgB,EAAMzkB,EAAMykB,EAAKvjB,QACzB,OAAO,eAAYujB,EAAMlkB,KAAKT,MAAMmkB,QAASjkB,GAKjD,WAAWA,EAAKwkB,EAAO,GACnB,IAAI,KAAEI,EAAI,KAAExe,GAAS7F,KAAKmkB,OAAO1kB,EAAKwkB,GAClCO,EAAWxkB,KAAK0H,QAAQ+c,oBAC5B,GAAID,EAAU,CACV,IAAIG,EAAYH,EAAS3e,GACzB,GAAI8e,GAAa,EACb,OAAOA,EAEf,OAAO3kB,KAAKukB,YAAYF,EAAMA,EAAKK,OAAO,SAO9C,qBACI,OAAO1kB,KAAK0H,QAAQ0c,eAAiB,MAS7C,MAAMQ,GAA8B,IAAI,OAExC,SAASZ,GAAkB3jB,EAAIwkB,EAAKplB,GAChC,OAAOqlB,GAAWD,EAAIE,aAAatlB,GAAKulB,2BAA2BvlB,GAAMA,EAAKY,GAElF,SAAS4kB,GAAa5kB,GAClB,OAAOA,EAAGZ,KAAOY,EAAGqH,QAAQ0c,eAAiB/jB,EAAGqH,QAAQ4c,oBAE5D,SAASY,GAAe7b,GACpB,IAAI8b,EAAW9b,EAAKvI,KAAK+J,KAAK+Z,IAC9B,GAAIO,EACA,OAAOA,EACX,IAA6BzV,EAAzB0V,EAAQ/b,EAAKgc,WACjB,GAAID,IAAU1V,EAAQ0V,EAAMtkB,KAAK+J,KAAK,OAASya,WAAY,CACvD,IAAIhhB,EAAO+E,EAAKkc,UAAWC,EAASlhB,GAAQoL,EAAMiC,QAAQrN,EAAKiN,OAAS,EACxE,OAAOlR,GAAMolB,GAAkBplB,GAAI,EAAM,OAAGoR,EAAW+T,IAAWP,GAAa5kB,GAAMiE,EAAKuB,UAAO4L,GAErG,OAAsB,MAAfpI,EAAKtJ,OAAiB2lB,GAAY,KAE7C,SAASZ,GAAWxG,EAAM7e,EAAK6B,GAC3B,KAAOgd,EAAMA,EAAOA,EAAKve,OAAQ,CAC7B,IAAIolB,EAAWD,GAAe5G,GAC9B,GAAI6G,EACA,OAAOA,EAAS,IAAIQ,GAAkBrkB,EAAM7B,EAAK6e,IAEzD,OAAO,KAEX,SAASoH,KAAc,OAAO,EAK9B,MAAMC,WAA0B,GAI5B,YAAYrkB,EAIZ7B,EAKA6e,GACI7N,MAAMnP,EAAK/B,MAAO+B,EAAKoG,SACvB1H,KAAKsB,KAAOA,EACZtB,KAAKP,IAAMA,EACXO,KAAKse,KAAOA,EAMhB,gBACI,OAAOte,KAAK4lB,aAAa5lB,KAAKP,KASlC,iBACI,IAAIykB,EAAOlkB,KAAKT,MAAMmb,IAAIyJ,OAAOnkB,KAAKse,KAAKzY,MAE3C,OAAS,CACL,IAAIggB,EAAU7lB,KAAKse,KAAK7I,QAAQyO,EAAKre,MACrC,MAAOggB,EAAQ9lB,QAAU8lB,EAAQ9lB,OAAO8F,MAAQggB,EAAQhgB,KACpDggB,EAAUA,EAAQ9lB,OACtB,GAAI+lB,GAASD,EAAS7lB,KAAKse,MACvB,MACJ4F,EAAOlkB,KAAKT,MAAMmb,IAAIyJ,OAAO0B,EAAQhgB,MAEzC,OAAO7F,KAAK+lB,WAAW7B,EAAKre,MAMhC,WACI,IAAI9F,EAASC,KAAKse,KAAKve,OACvB,OAAOA,EAAS+kB,GAAW/kB,EAAQC,KAAKP,IAAKO,KAAKsB,MAAQ,GAGlE,SAASwkB,GAAS/lB,EAAQmZ,GACtB,IAAK,IAAInX,EAAMmX,EAAInX,EAAKA,EAAMA,EAAIhC,OAC9B,GAAIA,GAAUgC,EACV,OAAO,EACf,OAAO,EAKX,SAASikB,GAAiBzlB,GACtB,IAAI8I,EAAO9I,EAAQ+d,KACf2H,EAAY5c,EAAKM,WAAWN,EAAKxD,MAAOvB,EAAO+E,EAAKkc,UACxD,IAAKU,EACD,OAAO,KACX,IAAI9iB,EAAM5C,EAAQmH,QAAQ0c,cACtB8B,EAAW3lB,EAAQhB,MAAMmb,IAAIyJ,OAAO8B,EAAUpgB,MAC9CsgB,EAAiB,MAAPhjB,GAAeA,GAAO+iB,EAASrgB,KAAOqgB,EAASngB,GAAKgB,KAAKE,IAAIif,EAASngB,GAAI5C,GACxF,IAAK,IAAI1D,EAAMwmB,EAAUlgB,KAAM,CAC3B,IAAI7D,EAAOmH,EAAKM,WAAWlK,GAC3B,IAAKyC,GAAQA,GAAQoC,EACjB,OAAO,KACX,IAAKpC,EAAKpB,KAAKslB,UACX,OAAOlkB,EAAK2D,KAAOsgB,EAAUF,EAAY,KAC7CxmB,EAAMyC,EAAK6D,IAcnB,SAASsgB,IAAgB,QAAEC,EAAO,MAAEC,GAAQ,EAAI,MAAEC,EAAQ,IACtD,OAAQjmB,GAAYklB,GAAkBllB,EAASgmB,EAAOC,EAAOF,GAEjE,SAASb,GAAkBllB,EAASgmB,EAAOC,EAAOF,EAASG,GACvD,IAAIpM,EAAQ9Z,EAAQmmB,UAAWC,EAAQtM,EAAMhM,MAAM,QAAQ,GAAG1N,OAC1D6kB,EAASc,GAAWjM,EAAMpX,MAAM0jB,EAAOA,EAAQL,EAAQ3lB,SAAW2lB,GAAWG,GAAYlmB,EAAQd,IAAMknB,EACvGC,EAAUL,EAAQP,GAAiBzlB,GAAW,KAClD,OAAIqmB,EACOpB,EAASjlB,EAAQsmB,OAAOD,EAAQ/gB,MAAQtF,EAAQsmB,OAAOD,EAAQ7gB,IACnExF,EAAQumB,YAActB,EAAS,EAAIjlB,EAAQkjB,KAAO+C,GAqB7D,MAAMO,GAAmB,IAczB,SAASC,KACL,OAAO,OAAYC,kBAAkB/N,GAAG1B,IACpC,IAAKA,EAAGK,aAAeL,EAAG0P,YAAY,cAClC,OAAO1P,EACX,IAAI2P,EAAQ3P,EAAGY,WAAWgP,eAAe,gBAAiB5P,EAAGY,WAAWR,UAAUvM,KAAKgc,MACvF,IAAKF,EAAMxmB,OACP,OAAO6W,EACX,IAAIkD,EAAMlD,EAAG8P,QAAQ,KAAED,GAAS7P,EAAG+P,aAAalc,KAAM6Y,EAAOxJ,EAAIyJ,OAAOkD,GACxE,GAAIA,EAAOnD,EAAKre,KAAOkhB,GACnB,OAAOvP,EACX,IAAIgQ,EAAY9M,EAAIyE,YAAY+E,EAAKre,KAAMwhB,GAC3C,IAAKF,EAAMzjB,KAAKoD,GAAKA,EAAEiC,KAAKye,IACxB,OAAOhQ,EACX,IAAI,MAAEjY,GAAUiY,EAAIlT,GAAQ,EAAG6S,EAAU,GACzC,IAAK,IAAI,KAAEkQ,KAAU9nB,EAAMqY,UAAUvS,OAAQ,CACzC,IAAI6e,EAAO3kB,EAAMmb,IAAIyJ,OAAOkD,GAC5B,GAAInD,EAAKre,MAAQvB,EACb,SACJA,EAAO4f,EAAKre,KACZ,IAAI4hB,EAAS3D,GAAevkB,EAAO2kB,EAAKre,MACxC,GAAc,MAAV4hB,EACA,SACJ,IAAI1lB,EAAM,OAAO2lB,KAAKxD,EAAKG,MAAM,GAC7BsD,EAAOhE,GAAapkB,EAAOkoB,GAC3B1lB,GAAO4lB,GACPxQ,EAAQzW,KAAK,CAAEmF,KAAMqe,EAAKre,KAAME,GAAIme,EAAKre,KAAO9D,EAAIpB,OAAQ4O,OAAQoY,IAE5E,OAAOxQ,EAAQxW,OAAS,CAAC6W,EAAI,CAAEL,UAASyQ,YAAY,IAAUpQ,IAUtE,MAAMqQ,GAA2B,OAAMrW,SAOjCsW,GAA4B,IAAI,OAMtC,SAASC,GAAWzJ,GAChB,IAAI8G,EAAQ9G,EAAK+G,WAAY/gB,EAAOga,EAAKiH,UACzC,OAAOH,GAASA,EAAMrf,GAAKzB,EAAKuB,KAAO,CAAEA,KAAMuf,EAAMrf,GAAIA,GAAIzB,EAAKxD,KAAK8I,QAAU0U,EAAKvY,GAAKzB,EAAKuB,MAAS,KAE7G,SAASmiB,GAAczoB,EAAOkB,EAAOmB,GACjC,IAAIyH,EAAOoU,EAAWle,GACtB,GAAmB,GAAf8J,EAAK1I,OACL,OAAO,KACX,IAAI8N,EAAQpF,EAAK0b,aAAanjB,GAC1B+R,EAAQ,KACZ,IAAK,IAAI5R,EAAM0M,EAAO1M,EAAKA,EAAMA,EAAIhC,OAAQ,CACzC,GAAIgC,EAAIgE,IAAMnE,GAAOG,EAAI8D,KAAOjE,EAC5B,SACJ,GAAI+R,GAAS5R,EAAI8D,KAAOpF,EACpB,MACJ,IAAIoK,EAAO9I,EAAIjB,KAAK+J,KAAKid,IACzB,GAAIjd,EAAM,CACN,IAAIpI,EAAQoI,EAAK9I,EAAKxC,GAClBkD,GAASA,EAAMoD,MAAQjE,GAAOa,EAAMoD,MAAQpF,GAASgC,EAAMsD,GAAKnE,IAChE+R,EAAQlR,IAGpB,OAAOkR,EAUX,SAASsU,GAAS1oB,EAAOioB,EAAWrB,GAChC,IAAK,IAAIpC,KAAWxkB,EAAMkY,MAAMoQ,IAAc,CAC1C,IAAIjkB,EAASmgB,EAAQxkB,EAAOioB,EAAWrB,GACvC,GAAIviB,EACA,OAAOA,EAEf,OAAOokB,GAAczoB,EAAOioB,EAAWrB,G,iBC5mC3C,MAAM,WAAqB,QAIvB,QAAQjiB,GACJ,OAAOlE,MAAQkE,GAASlE,KAAKkoB,aAAehkB,EAAMgkB,aAAeloB,KAAKyb,GAAGvX,GAK7E,GAAGA,GAAS,OAAO,EAKnB,QAAQikB,KAEZ,GAAa9gB,UAAU+gB,aAAe,GACtC,GAAa/gB,UAAUghB,WAAQ5W,EAC/B,GAAapK,UAAUihB,QAAU,OAAQC,YACzC,GAAalhB,UAAUmhB,UAAY,GAAanhB,UAAUohB,SAAW,EACrE,GAAaphB,UAAUqhB,OAAQ,EAQ/B,MAAMC,GAA+B,OAAMnX,SACrCoX,GAAW,CACbC,MAAO,GACPC,qBAAqB,EACrBC,aAAc,GACdC,QAAS,IAAM,QAASzR,MACxB0R,WAAY,IAAM,KAClBC,iBAAkB,KAClBC,cAAe,KACfC,aAAc,KACdjQ,iBAAkB,IAEhBkQ,GAA6B,OAAM7X,SAKzC,SAAS,GAAO8B,GACZ,MAAO,CAACgW,KAAWD,GAAcnQ,GAAGnI,OAAOyC,OAAOzC,OAAOyC,OAAO,GAAIoV,IAAWtV,KAEnF,MAAMiW,GAAyB,OAAWA,UAAU,CAChD,cAAe,CACXC,QAAS,OACTC,OAAQ,OACRC,UAAW,aACXC,KAAM,EACNC,OAAQ,KAEZ,qBAAsB,CAClBC,gBAAiB,UACjBC,MAAO,OACPC,YAAa,kBAEjB,oBAAqB,CACjBF,gBAAiB,UACjBC,MAAO,QAEX,aAAc,CACVN,QAAS,kBACTQ,cAAe,SACfC,WAAY,EACZP,UAAW,aACXQ,UAAW,OACXC,SAAU,UAEd,oBAAqB,CACjBT,UAAW,cAEf,oCAAqC,CACjCU,QAAS,cACTC,SAAU,OACVC,UAAW,QACXC,WAAY,UAEhB,8BAA+B,CAC3BV,gBAAiB,WAErB,6BAA8B,CAC1BA,gBAAiB,aAGnBW,GAA4B,OAAMhZ,OAAO,CAC3C4L,QAASpJ,GAAUA,EAAOtQ,KAAK+mB,GAAKA,KAYxC,SAASnB,GAAQhW,GACb,IAAI1P,EAAS,CACT8mB,GACAnB,IAIJ,OAFIjW,IAA2B,IAAjBA,EAAOqX,OACjB/mB,EAAOlD,KAAK8pB,GAAatR,IAAG,IACzBtV,EAEX,MAAM8mB,GAA0B,OAAW3I,UAAU,MACjD,YAAY3I,GACRpZ,KAAKoZ,KAAOA,EACZpZ,KAAK4qB,aAAexR,EAAKkG,SACzBtf,KAAKmoB,IAAM0C,SAASC,cAAc,OAClC9qB,KAAKmoB,IAAI4C,UAAY,aACrB/qB,KAAKmoB,IAAI6C,aAAa,cAAe,QACrChrB,KAAKmoB,IAAI8C,MAAMf,UAAYlqB,KAAKoZ,KAAK8R,cAAgB,KACrDlrB,KAAKspB,QAAUlQ,EAAK7Z,MAAMkY,MAAM4R,IAAele,IAAIggB,GAAQ,IAAI,GAAiB/R,EAAM+R,IACtF,IAAK,IAAIC,KAAUprB,KAAKspB,QACpBtpB,KAAKmoB,IAAIkD,YAAYD,EAAOjD,KAChCnoB,KAAK2qB,OAASvR,EAAK7Z,MAAMkY,MAAM+S,IAC3BxqB,KAAK2qB,QAIL3qB,KAAKmoB,IAAI8C,MAAMK,SAAW,UAE9BtrB,KAAKurB,aAAY,GACjBnS,EAAKoS,UAAUC,aAAazrB,KAAKmoB,IAAK/O,EAAKsS,YAE/C,OAAOhP,GACH,GAAI1c,KAAK2rB,cAAcjP,GAAS,CAI5B,IAAIkP,EAAM5rB,KAAK4qB,aAAciB,EAAMnP,EAAOtD,KAAKkG,SAC3CwM,EAAY/kB,KAAKE,IAAI2kB,EAAI7lB,GAAI8lB,EAAI9lB,IAAMgB,KAAKC,IAAI4kB,EAAI/lB,KAAMgmB,EAAIhmB,MAClE7F,KAAKurB,YAAYO,EAAkC,IAArBD,EAAI9lB,GAAK8lB,EAAIhmB,OAE3C6W,EAAOqP,kBACP/rB,KAAKmoB,IAAI8C,MAAMf,UAAYlqB,KAAKoZ,KAAK8R,cAAgB,MACrDlrB,KAAKoZ,KAAK7Z,MAAMkY,MAAM+S,MAAkBxqB,KAAK2qB,QAC7C3qB,KAAK2qB,OAAS3qB,KAAK2qB,MACnB3qB,KAAKmoB,IAAI8C,MAAMK,SAAWtrB,KAAK2qB,MAAQ,SAAW,IAEtD3qB,KAAK4qB,aAAelO,EAAOtD,KAAKkG,SAEpC,YAAY0M,GACR,IAAI3R,EAAQra,KAAKmoB,IAAIre,YACjBkiB,GACAhsB,KAAKmoB,IAAI8D,SACb,IAAIC,EAAc,QAASlN,KAAKhf,KAAKoZ,KAAK7Z,MAAMkY,MAAMkR,IAAkB3oB,KAAKoZ,KAAKkG,SAASzZ,MACvFsmB,EAAW,GACXC,EAAWpsB,KAAKspB,QAAQne,IAAIigB,GAAU,IAAI,GAAcA,EAAQprB,KAAKoZ,KAAKkG,UAAWtf,KAAKoZ,KAAKiT,gBAAgBrqB,MACnH,IAAK,IAAIkiB,KAAQlkB,KAAKoZ,KAAKkT,mBAAoB,CAC3C,IAAIjI,EACJ,GAAI9P,MAAMgY,QAAQrI,EAAKpjB,OACnB,IAAK,IAAI6M,KAAKuW,EAAKpjB,KACf,GAAI6M,EAAE7M,MAAQ,OAAU0rB,KAAM,CAC1BnI,EAAO1W,EACP,YAIR0W,EAAOH,EAAKpjB,MAAQ,OAAU0rB,KAAOtI,OAAOzS,EAEhD,GAAK4S,EAAL,CAEI8H,EAASxrB,SACTwrB,EAAW,IACfM,GAAcP,EAAaC,EAAUjI,EAAKre,MAC1C,IAAK,IAAIxF,KAAM+rB,EACX/rB,EAAG6jB,KAAKlkB,KAAKoZ,KAAMiL,EAAM8H,IAEjC,IAAK,IAAI9rB,KAAM+rB,EACX/rB,EAAGqsB,SACHV,GACAhsB,KAAKoZ,KAAKoS,UAAUC,aAAazrB,KAAKmoB,IAAK9N,GAEnD,cAAcqC,GACV,IAAIvJ,EAAOuJ,EAAOtE,WAAWX,MAAM4R,IAAgBtnB,EAAM2a,EAAOnd,MAAMkY,MAAM4R,IACxEsD,EAASjQ,EAAO7E,YAAc6E,EAAOkQ,eAAiBlQ,EAAOmQ,kBAC5D,QAASpR,GAAGiB,EAAOtE,WAAWX,MAAMkR,IAAkBjM,EAAOnd,MAAMkY,MAAMkR,IAAkBjM,EAAOtD,KAAKkG,SAASzZ,KAAM6W,EAAOtD,KAAKkG,SAASvZ,IAChJ,GAAIoN,GAAQpR,EACR,IAAK,IAAIqpB,KAAUprB,KAAKspB,QAChB8B,EAAO1O,OAAOA,KACdiQ,GAAS,OAEhB,CACDA,GAAS,EACT,IAAIrD,EAAU,GACd,IAAK,IAAI6B,KAAQppB,EAAK,CAClB,IAAI+qB,EAAQ3Z,EAAKxB,QAAQwZ,GACrB2B,EAAQ,EACRxD,EAAQ5oB,KAAK,IAAI,GAAiBV,KAAKoZ,KAAM+R,KAG7CnrB,KAAKspB,QAAQwD,GAAOpQ,OAAOA,GAC3B4M,EAAQ5oB,KAAKV,KAAKspB,QAAQwD,KAGlC,IAAK,IAAIC,KAAK/sB,KAAKspB,QACfyD,EAAE5E,IAAI8D,SACF3C,EAAQ3X,QAAQob,GAAK,GACrBA,EAAEC,UAEV,IAAK,IAAID,KAAKzD,EACVtpB,KAAKmoB,IAAIkD,YAAY0B,EAAE5E,KAC3BnoB,KAAKspB,QAAUA,EAEnB,OAAOqD,EAEX,UACI,IAAK,IAAIvT,KAAQpZ,KAAKspB,QAClBlQ,EAAK4T,UACThtB,KAAKmoB,IAAI8D,WAEd,CACCgB,QAAsB,OAAYC,cAAcrnB,KAAKpD,GACrB,GAAxBA,EAAM6mB,QAAQ3oB,QAAgB8B,EAAMkoB,MAEjCloB,EAAM2W,KAAK+T,eAAiB,OAAUC,IAAM,CAAEzD,KAAMlnB,EAAM0lB,IAAIkF,aAAgB,CAAEC,MAAO7qB,EAAM0lB,IAAIkF,aAD7F,QAInB,SAASE,GAAQC,GAAO,OAAQjZ,MAAMgY,QAAQiB,GAAOA,EAAM,CAACA,GAC5D,SAASf,GAAcljB,EAAQkkB,EAAShuB,GACpC,MAAO8J,EAAO9G,OAAS8G,EAAO1D,MAAQpG,EAC9B8J,EAAO1D,MAAQpG,GACfguB,EAAQ/sB,KAAK6I,EAAO9G,OACxB8G,EAAOrH,OAGf,MAAM,GACF,YAAYkpB,EAAQ9L,EAAUmK,GAC1BzpB,KAAKorB,OAASA,EACdprB,KAAKypB,OAASA,EACdzpB,KAAK0tB,aAAe,GACpB1tB,KAAKG,EAAI,EACTH,KAAKuJ,OAAS,QAASyV,KAAKoM,EAAOpC,QAAS1J,EAASzZ,MAEzD,KAAKuT,EAAM8K,EAAMyJ,GACT3tB,KAAK0tB,aAAa/sB,SAClBX,KAAK0tB,aAAe,IACxBjB,GAAczsB,KAAKuJ,OAAQvJ,KAAK0tB,aAAcxJ,EAAKre,MACnD,IAAI6nB,EAAeC,EAAahtB,OAASX,KAAK0tB,aAAattB,OAAOutB,GAAgB3tB,KAAK0tB,aACnFE,EAAU5tB,KAAKorB,OAAO9X,OAAO2V,WAAW7P,EAAM8K,EAAMwJ,GACpDE,GACAF,EAAaG,QAAQD,GACzB,IAAIxC,EAASprB,KAAKorB,OAClB,GAA2B,GAAvBsC,EAAa/sB,SAAgByqB,EAAO9X,OAAOwV,oBAC3C,OACJ,IAAIgF,EAAQ5J,EAAKliB,IAAMhC,KAAKypB,OAC5B,GAAIzpB,KAAKG,GAAKirB,EAAO2C,SAASptB,OAAQ,CAClC,IAAIqtB,EAAS,IAAIC,GAAc7U,EAAM8K,EAAKuF,OAAQqE,EAAOJ,GACzDtC,EAAO2C,SAASrtB,KAAKstB,GACrB5C,EAAOjD,IAAIkD,YAAY2C,EAAO7F,UAG9BiD,EAAO2C,SAAS/tB,KAAKG,GAAGuc,OAAOtD,EAAM8K,EAAKuF,OAAQqE,EAAOJ,GAE7D1tB,KAAKypB,OAASvF,EAAKgK,OACnBluB,KAAKG,IAET,SACI,IAAIirB,EAASprB,KAAKorB,OAClB,MAAOA,EAAO2C,SAASptB,OAASX,KAAKG,EAAG,CACpC,IAAImE,EAAO8mB,EAAO2C,SAASrsB,MAC3B0pB,EAAOjD,IAAIgG,YAAY7pB,EAAK6jB,KAC5B7jB,EAAK0oB,YAIjB,MAAM,GACF,YAAY5T,EAAM9F,GACdtT,KAAKoZ,KAAOA,EACZpZ,KAAKsT,OAASA,EACdtT,KAAK+tB,SAAW,GAChB/tB,KAAKouB,OAAS,KACdpuB,KAAKmoB,IAAM0C,SAASC,cAAc,OAClC9qB,KAAKmoB,IAAI4C,UAAY,aAAe/qB,KAAKsT,OAAOuV,MAAQ,IAAM7oB,KAAKsT,OAAOuV,MAAQ,IAClF,IAAK,IAAIhe,KAAQyI,EAAO6F,iBACpBnZ,KAAKmoB,IAAIkG,iBAAiBxjB,EAAO6N,IAC7B,IAAIwL,EAAO9K,EAAKkV,kBAAkB5V,EAAM6V,QAAUnV,EAAKoV,aACnDlb,EAAO6F,iBAAiBtO,GAAMuO,EAAM8K,EAAMxL,IAC1CA,EAAMe,mBAGlBzZ,KAAKgpB,QAAUuE,GAAQja,EAAO0V,QAAQ5P,IAClC9F,EAAO6V,gBACPnpB,KAAKouB,OAAS,IAAIH,GAAc7U,EAAM,EAAG,EAAG,CAAC9F,EAAO6V,cAAc/P,KAClEpZ,KAAKmoB,IAAIkD,YAAYrrB,KAAKouB,OAAOjG,KACjCnoB,KAAKouB,OAAOjG,IAAI8C,MAAMwD,SAAW,4CAGzC,OAAO/R,GACH,IAAIgS,EAAc1uB,KAAKgpB,QAEvB,GADAhpB,KAAKgpB,QAAUuE,GAAQvtB,KAAKsT,OAAO0V,QAAQtM,EAAOtD,OAC9CpZ,KAAKouB,QAAUpuB,KAAKsT,OAAO8V,aAAc,CACzC,IAAIuF,EAAU3uB,KAAKsT,OAAO8V,aAAappB,KAAKouB,OAAOpF,QAAQ,GAAItM,GAC3DiS,GAAW3uB,KAAKouB,OAAOpF,QAAQ,IAC/BhpB,KAAKouB,OAAO1R,OAAOA,EAAOtD,KAAM,EAAG,EAAG,CAACuV,IAE/C,IAAIC,EAAKlS,EAAOtD,KAAKkG,SACrB,OAAQ,QAAS7D,GAAGzb,KAAKgpB,QAAS0F,EAAaE,EAAG/oB,KAAM+oB,EAAG7oB,OACtD/F,KAAKsT,OAAO4V,kBAAmBlpB,KAAKsT,OAAO4V,iBAAiBxM,GAErE,UACI,IAAK,IAAImS,KAAO7uB,KAAK+tB,SACjBc,EAAI7B,WAGhB,MAAMiB,GACF,YAAY7U,EAAMqQ,EAAQqE,EAAO9E,GAC7BhpB,KAAKypB,QAAU,EACfzpB,KAAK8tB,MAAQ,EACb9tB,KAAKgpB,QAAU,GACfhpB,KAAKmoB,IAAM0C,SAASC,cAAc,OAClC9qB,KAAK0c,OAAOtD,EAAMqQ,EAAQqE,EAAO9E,GAErC,OAAO5P,EAAMqQ,EAAQqE,EAAO9E,GACpBhpB,KAAKypB,QAAUA,IACfzpB,KAAKmoB,IAAI8C,MAAMxB,QAAUzpB,KAAKypB,OAASA,GAAU,MACjDzpB,KAAK8tB,OAASA,IACd9tB,KAAKmoB,IAAI8C,MAAM6D,WAAa9uB,KAAK8tB,MAAQA,GAASA,EAAQ,KAAO,IAChEiB,GAAY/uB,KAAKgpB,QAASA,IAC3BhpB,KAAKgvB,WAAW5V,EAAM4P,GAE9B,WAAW5P,EAAM4P,GACb,IAAIiG,EAAM,mBAAoBC,EAASlvB,KAAKmoB,IAAI9C,WAChD,IAAK,IAAI8J,EAAO,EAAGC,EAAO,IAAK,CAC3B,IAAIC,EAASD,EAAME,EAASH,EAAOnG,EAAQroB,OAASqoB,EAAQmG,KAAU,KAAMI,GAAU,EACtF,GAAID,EAAQ,CACR,IAAIE,EAAIF,EAAOlH,aACXoH,IACAP,GAAO,IAAMO,GACjB,IAAK,IAAIrvB,EAAIivB,EAAMjvB,EAAIH,KAAKgpB,QAAQroB,OAAQR,IACxC,GAAIH,KAAKgpB,QAAQ7oB,GAAGsvB,QAAQH,GAAS,CACjCD,EAASlvB,EACTovB,GAAU,EACV,YAIRF,EAASrvB,KAAKgpB,QAAQroB,OAE1B,MAAOyuB,EAAOC,EAAQ,CAClB,IAAIntB,EAAOlC,KAAKgpB,QAAQoG,KACxB,GAAIltB,EAAKmmB,MAAO,CACZnmB,EAAK8qB,QAAQkC,GACb,IAAI7U,EAAQ6U,EAAOplB,YACnBolB,EAAOjD,SACPiD,EAAS7U,GAGjB,IAAKiV,EACD,MACAA,EAAOjH,QACHkH,EACAL,EAASA,EAAOplB,YAEhB9J,KAAKmoB,IAAIsD,aAAa6D,EAAOjH,MAAMjP,GAAO8V,IAE9CK,GACAH,IAERpvB,KAAKmoB,IAAI4C,UAAYkE,EACrBjvB,KAAKgpB,QAAUA,EAEnB,UACIhpB,KAAKgvB,WAAW,KAAM,KAG9B,SAASD,GAAYrhB,EAAGC,GACpB,GAAID,EAAE/M,QAAUgN,EAAEhN,OACd,OAAO,EACX,IAAK,IAAIR,EAAI,EAAGA,EAAIuN,EAAE/M,OAAQR,IAC1B,IAAKuN,EAAEvN,GAAGsvB,QAAQ9hB,EAAExN,IAChB,OAAO,EACf,OAAO,EAKX,MAAMuvB,GAAiC,OAAMle,SACvCme,GAAgC,OAAMne,OAAO,CAC/C,QAAQwC,GACJ,OAAO,eAAcA,EAAQ,CAAE4b,aAAc1f,OAAQiJ,iBAAkB,IAAM,CACzE,iBAAiBzL,EAAGC,GAChB,IAAI/J,EAASmN,OAAOyC,OAAO,GAAI9F,GAC/B,IAAK,IAAIgL,KAAS/K,EAAG,CACjB,IAAIkiB,EAASjsB,EAAO8U,GAAQiG,EAAMhR,EAAE+K,GACpC9U,EAAO8U,GAASmX,EAAS,CAACzW,EAAM8K,EAAMxL,IAAUmX,EAAOzW,EAAM8K,EAAMxL,IAAUiG,EAAIvF,EAAM8K,EAAMxL,GAASiG,EAE1G,OAAO/a,QAKvB,MAAMksB,WAAqB,GACvB,YAAYC,GACRtf,QACAzQ,KAAK+vB,OAASA,EAElB,GAAG7rB,GAAS,OAAOlE,KAAK+vB,QAAU7rB,EAAM6rB,OACxC,QAAU,OAAOlF,SAASmF,eAAehwB,KAAK+vB,SAElD,SAASH,GAAaxW,EAAM2W,GACxB,OAAO3W,EAAK7Z,MAAMkY,MAAMkY,IAAkBC,aAAaG,EAAQ3W,EAAK7Z,OAExE,MAAM0wB,GAAgC5G,GAAc6G,QAAQ,CAACP,IAAmBpwB,IAAS,CACrFspB,MAAO,iBACPC,qBAAqB,EACrB,QAAQ1P,GAAQ,OAAOA,EAAK7Z,MAAMkY,MAAMiY,KACxC,WAAWtW,EAAM8K,EAAMiM,GACnB,OAAIA,EAAOzsB,KAAK0sB,GAAKA,EAAE/H,OACZ,KACJ,IAAIyH,GAAaF,GAAaxW,EAAMA,EAAK7Z,MAAMmb,IAAIyJ,OAAOD,EAAKre,MAAMkqB,UAEhF7G,iBAAkBxM,GAAUA,EAAOtE,WAAWX,MAAMkY,KAAqBjT,EAAOnd,MAAMkY,MAAMkY,IAC5F,cAAcvW,GACV,OAAO,IAAI0W,GAAaF,GAAaxW,EAAMiX,GAAcjX,EAAK7Z,MAAMmb,IAAI4V,UAE5E,aAAalC,EAAQ1R,GACjB,IAAI1V,EAAM4oB,GAAalT,EAAOtD,KAAMiX,GAAc3T,EAAOtD,KAAK7Z,MAAMmb,IAAI4V,QACxE,OAAOtpB,GAAOonB,EAAO2B,OAAS3B,EAAS,IAAI0B,GAAa9oB,IAE5DmS,iBAAkB5Z,EAAMkY,MAAMkY,IAAkBxW,oBAKpD,SAASoX,GAAYjd,EAAS,IAC1B,MAAO,CACHqc,GAAiBzW,GAAG5F,GACpBgW,KACA2G,IAGR,SAASI,GAAcC,GACnB,IAAIhsB,EAAO,EACX,MAAOA,EAAOgsB,EACVhsB,EAAc,GAAPA,EAAY,EACvB,OAAOA,EAEX,MAAMksB,GAAsC,IAAI,cAAc,GAC1D,cACI/f,SAASgE,WACTzU,KAAKooB,aAAe,wBAGtBqI,GAA2C9H,GAAgBuH,QAAQ,CAAC,aAAc3wB,IACpF,IAAImxB,EAAQ,GAAIpsB,GAAQ,EACxB,IAAK,IAAIwB,KAASvG,EAAMqY,UAAUvS,OAC9B,GAAIS,EAAMyR,MAAO,CACb,IAAIoZ,EAAUpxB,EAAMmb,IAAIyJ,OAAOre,EAAMuhB,MAAMxhB,KACvC8qB,EAAUrsB,IACVA,EAAOqsB,EACPD,EAAMhwB,KAAK8vB,GAAuB1qB,MAAM6qB,KAGpD,OAAO,QAASzX,GAAGwX,KAOvB,SAASE,KACL,OAAOH,GC1dX,SAASI,GAAS/qB,EAAO+V,GACrB,IAAIhW,EAAOgW,EAAQ+E,OAAO9a,EAAMD,KAAM,GAAIE,EAAK8V,EAAQ+E,OAAO9a,EAAMC,IAAK,GACzE,OAAOF,GAAQE,OAAK0L,EAAY,CAAE5L,OAAME,MAS5C,MAAM+qB,GAA0B,OAAYtf,OAAO,CAAErG,IAAK0lB,KAIpDE,GAA4B,OAAYvf,OAAO,CAAErG,IAAK0lB,KAC5D,SAASG,GAAc5X,GACnB,IAAIkX,EAAQ,GACZ,IAAK,IAAI,KAAEjJ,KAAUjO,EAAK7Z,MAAMqY,UAAUvS,OAClCirB,EAAM5sB,KAAKutB,GAAKA,EAAEprB,MAAQwhB,GAAQ4J,EAAElrB,IAAMshB,IAE9CiJ,EAAM5vB,KAAK0Y,EAAK8X,YAAY7J,IAEhC,OAAOiJ,EAEX,MAAMa,GAAyB,OAAW3f,OAAO,CAC7C,SACI,OAAO,OAAWgJ,MAEtB,OAAO4W,EAAQ5Z,GACX4Z,EAASA,EAAOjmB,IAAIqM,EAAGL,SACvB,IAAK,IAAI2B,KAAKtB,EAAGyC,QACTnB,EAAEwI,GAAGwP,MAAgBO,GAAWD,EAAQtY,EAAErW,MAAMoD,KAAMiT,EAAErW,MAAMsD,IAC9DqrB,EAASA,EAAO1U,OAAO,CAAEiC,IAAK,CAAC2S,GAAWxrB,MAAMgT,EAAErW,MAAMoD,KAAMiT,EAAErW,MAAMsD,OACjE+S,EAAEwI,GAAGyP,MACVK,EAASA,EAAO1U,OAAO,CAAEzc,OAAQ,CAAC4F,EAAME,IAAO+S,EAAErW,MAAMoD,MAAQA,GAAQiT,EAAErW,MAAMsD,IAAMA,EACjFwrB,WAAYzY,EAAErW,MAAMoD,KAAM2rB,SAAU1Y,EAAErW,MAAMsD,MAGxD,GAAIyR,EAAGI,UAAW,CACd,IAAI6Z,GAAc,GAAO,KAAEpK,GAAS7P,EAAGI,UAAUvM,KACjD+lB,EAAOM,QAAQrK,EAAMA,EAAM,CAAC3Z,EAAGC,KAAYD,EAAI2Z,GAAQ1Z,EAAI0Z,IACvDoK,GAAc,KACdA,IACAL,EAASA,EAAO1U,OAAO,CACnB6U,WAAYlK,EACZmK,SAAUnK,EACVpnB,OAAQ,CAACyN,EAAGC,IAAMA,GAAK0Z,GAAQ3Z,GAAK2Z,KAGhD,OAAO+J,GAEXnE,QAAShS,GAAK,OAAW0W,YAAY9rB,KAAKoV,KAS9C,SAAS,GAAW1b,EAAOsG,EAAME,GAC7B,IAAIuU,EACJ,IAAI3G,EAAQ,KAKZ,OAJyC,QAAxC2G,EAAK/a,EAAMua,MAAMqX,IAAW,UAA2B,IAAP7W,GAAyBA,EAAGoX,QAAQ7rB,EAAME,EAAI,CAACF,EAAME,OAC7F4N,GAASA,EAAM9N,KAAOA,KACvB8N,EAAQ,CAAE9N,OAAME,SAEjB4N,EAEX,SAAS0d,GAAWD,EAAQvrB,EAAME,GAC9B,IAAI4N,GAAQ,EAGZ,OAFAyd,EAAOM,QAAQ7rB,EAAMA,EAAM,CAAC6H,EAAGC,KAAYD,GAAK7H,GAAQ8H,GAAK5H,IACzD4N,GAAQ,KACLA,EAEX,SAASie,GAAYryB,EAAO2E,GACxB,OAAO3E,EAAMua,MAAMqX,IAAW,GAASjtB,EAAQA,EAAM9D,OAAO,OAAYyxB,aAAa3Y,GAAG4Y,OAK5F,MAAMC,GAAW3Y,IACb,IAAK,IAAI8K,KAAQ8M,GAAc5X,GAAO,CAClC,IAAItT,EAAQmiB,GAAS7O,EAAK7Z,MAAO2kB,EAAKre,KAAMqe,EAAKne,IACjD,GAAID,EAEA,OADAsT,EAAKO,SAAS,CAAEM,QAAS2X,GAAYxY,EAAK7Z,MAAO,CAACuxB,GAAW5X,GAAGpT,GAAQksB,GAAa5Y,EAAMtT,QACpF,EAGf,OAAO,GAKLmsB,GAAa7Y,IACf,IAAKA,EAAK7Z,MAAMua,MAAMqX,IAAW,GAC7B,OAAO,EACX,IAAIlX,EAAU,GACd,IAAK,IAAIiK,KAAQ8M,GAAc5X,GAAO,CAClC,IAAIgY,EAAS,GAAWhY,EAAK7Z,MAAO2kB,EAAKre,KAAMqe,EAAKne,IAChDqrB,GACAnX,EAAQvZ,KAAKqwB,GAAa7X,GAAGkY,GAASY,GAAa5Y,EAAMgY,GAAQ,IAIzE,OAFInX,EAAQtZ,QACRyY,EAAKO,SAAS,CAAEM,YACbA,EAAQtZ,OAAS,GAE5B,SAASqxB,GAAa5Y,EAAMtT,EAAOosB,GAAO,GACtC,IAAIC,EAAW/Y,EAAK7Z,MAAMmb,IAAIyJ,OAAOre,EAAMD,MAAMkqB,OAAQqC,EAAShZ,EAAK7Z,MAAMmb,IAAIyJ,OAAOre,EAAMC,IAAIgqB,OAClG,OAAO,OAAWsC,SAASnZ,GAAG,GAAGE,EAAK7Z,MAAM+yB,OAAOJ,EAAO,eAAiB,qBAAqBC,KAAY/Y,EAAK7Z,MAAM+yB,OAAO,SAASF,MAK3I,MAAMG,GAAUnZ,IACZ,IAAI,MAAE7Z,GAAU6Z,EAAMa,EAAU,GAChC,IAAK,IAAIxa,EAAM,EAAGA,EAAMF,EAAMmb,IAAI/Z,QAAS,CACvC,IAAIujB,EAAO9K,EAAK8X,YAAYzxB,GAAMqG,EAAQmiB,GAAS1oB,EAAO2kB,EAAKre,KAAMqe,EAAKne,IACtED,GACAmU,EAAQvZ,KAAKowB,GAAW5X,GAAGpT,IAC/BrG,GAAOqG,EAAQsT,EAAK8X,YAAYprB,EAAMC,IAAMme,GAAMne,GAAK,EAI3D,OAFIkU,EAAQtZ,QACRyY,EAAKO,SAAS,CAAEM,QAAS2X,GAAYxY,EAAK7Z,MAAO0a,OAC5CA,EAAQtZ,QAKf6xB,GAAYpZ,IACd,IAAIU,EAAQV,EAAK7Z,MAAMua,MAAMqX,IAAW,GACxC,IAAKrX,IAAUA,EAAMjY,KACjB,OAAO,EACX,IAAIoY,EAAU,GAGd,OAFAH,EAAM4X,QAAQ,EAAGtY,EAAK7Z,MAAMmb,IAAI/Z,OAAQ,CAACkF,EAAME,KAASkU,EAAQvZ,KAAKqwB,GAAa7X,GAAG,CAAErT,OAAME,UAC7FqT,EAAKO,SAAS,CAAEM,aACT,GAULwY,GAAa,CACf,CAAE3V,IAAK,eAAgBE,IAAK,YAAaD,IAAKgV,IAC9C,CAAEjV,IAAK,eAAgBE,IAAK,YAAaD,IAAKkV,IAC9C,CAAEnV,IAAK,aAAcC,IAAKwV,IAC1B,CAAEzV,IAAK,aAAcC,IAAKyV,KAExBE,GAAgB,CAClBC,eAAgB,KAChBC,gBAAiB,KAEfC,GAA0B,OAAMrhB,OAAO,CACzC,QAAQwC,GAAU,OAAO,eAAcA,EAAQ0e,OAKnD,SAASZ,GAAYxe,GACjB,IAAI1P,EAAS,CAACutB,GAAW,IAGzB,OAFI7d,GACA1P,EAAOlD,KAAKmyB,GAAW3Z,GAAG5F,IACvB1P,EAEX,MAAM0tB,GAA0B,OAAWwB,QAAQ,CAAEC,OAAqB,IAAI,cAAc,OACpF,MAAM3Z,GACF,IAAI,MAAE7Z,GAAU6Z,EAAM+R,EAAO5rB,EAAMkY,MAAMob,IACrCG,EAAWta,IACX,IAAIwL,EAAO9K,EAAK8X,YAAY9X,EAAK6Z,SAASva,EAAM3U,SAC5CqtB,EAAS,GAAWhY,EAAK7Z,MAAO2kB,EAAKre,KAAMqe,EAAKne,IAChDqrB,GACAhY,EAAKO,SAAS,CAAEM,QAAS8W,GAAa7X,GAAGkY,KAC7C1Y,EAAMe,kBAEV,GAAI0R,EAAKwH,eACL,OAAOxH,EAAKwH,eAAevZ,EAAM4Z,GACrC,IAAIE,EAAUrI,SAASC,cAAc,QAMrC,OALAoI,EAAQC,YAAchI,EAAKyH,gBAC3BM,EAAQlI,aAAa,aAAczrB,EAAM+yB,OAAO,gBAChDY,EAAQpe,MAAQvV,EAAM+yB,OAAO,UAC7BY,EAAQnI,UAAY,qBACpBmI,EAAQF,QAAUA,EACXE,MAGbE,GAAqB,CACvBC,SAAU,IACVC,WAAY,IACZC,UAAW,KACXpa,iBAAkB,IAEtB,MAAM,WAAmB,GACrB,YAAY7F,EAAQkgB,GAChB/iB,QACAzQ,KAAKsT,OAASA,EACdtT,KAAKwzB,KAAOA,EAEhB,GAAGtvB,GAAS,OAAOlE,KAAKsT,QAAUpP,EAAMoP,QAAUtT,KAAKwzB,MAAQtvB,EAAMsvB,KACrE,MAAMpa,GACF,GAAIpZ,KAAKsT,OAAOigB,UACZ,OAAOvzB,KAAKsT,OAAOigB,UAAUvzB,KAAKwzB,MACtC,IAAIC,EAAO5I,SAASC,cAAc,QAGlC,OAFA2I,EAAKN,YAAcnzB,KAAKwzB,KAAOxzB,KAAKsT,OAAO+f,SAAWrzB,KAAKsT,OAAOggB,WAClEG,EAAK3e,MAAQsE,EAAK7Z,MAAM+yB,OAAOtyB,KAAKwzB,KAAO,YAAc,eAClDC,GAQf,SAASC,GAAWpgB,EAAS,IACzB,IAAIqgB,EAAa5iB,OAAOyC,OAAOzC,OAAOyC,OAAO,GAAI4f,IAAqB9f,GAClEsgB,EAAU,IAAI,GAAWD,GAAY,GAAOE,EAAY,IAAI,GAAWF,GAAY,GACnF3K,EAAU,OAAWjH,UAAU,MAC/B,YAAY3I,GACRpZ,KAAK6F,KAAOuT,EAAKkG,SAASzZ,KAC1B7F,KAAKgpB,QAAUhpB,KAAK8zB,aAAa1a,GAErC,OAAOsD,IACCA,EAAO7E,YAAc6E,EAAOmQ,iBAC5BnQ,EAAOtE,WAAWX,MAAMkG,KAAajB,EAAOnd,MAAMkY,MAAMkG,KACxDjB,EAAOtE,WAAW0B,MAAMqX,IAAW,IAAUzU,EAAOnd,MAAMua,MAAMqX,IAAW,MAC3EnxB,KAAKgpB,QAAUhpB,KAAK8zB,aAAapX,EAAOtD,OAEhD,aAAaA,GACT,IAAI2a,EAAU,IAAI,QAClB,IAAK,IAAI7P,KAAQ9K,EAAKkT,mBAAoB,CACtC,IAAI0H,EAAO,GAAW5a,EAAK7Z,MAAO2kB,EAAKre,KAAMqe,EAAKne,IAAM8tB,EAClD5L,GAAS7O,EAAK7Z,MAAO2kB,EAAKre,KAAMqe,EAAKne,IAAM6tB,EAAU,KACvDI,GACAD,EAAQpV,IAAIuF,EAAKre,KAAMqe,EAAKre,KAAMmuB,GAE1C,OAAOD,EAAQrH,aAGnB,iBAAEvT,GAAqBwa,EAC3B,MAAO,CACH3K,EACA,GAAO,CACHH,MAAO,gBACP,QAAQzP,GAAQ,IAAIkB,EAAI,OAAwC,QAA/BA,EAAKlB,EAAK6a,OAAOjL,UAA6B,IAAP1O,OAAgB,EAASA,EAAG0O,UAAY,QAASzR,OACzH,gBACI,OAAO,IAAI,GAAWoc,GAAY,IAEtCxa,iBAAkBpI,OAAOyC,OAAOzC,OAAOyC,OAAO,GAAI2F,GAAmB,CAAE+a,MAAO,CAAC9a,EAAM8K,EAAMxL,KACnF,GAAIS,EAAiB+a,OAAS/a,EAAiB+a,MAAM9a,EAAM8K,EAAMxL,GAC7D,OAAO,EACX,IAAI0Y,EAAS,GAAWhY,EAAK7Z,MAAO2kB,EAAKre,KAAMqe,EAAKne,IACpD,GAAIqrB,EAEA,OADAhY,EAAKO,SAAS,CAAEM,QAAS8W,GAAa7X,GAAGkY,MAClC,EAEX,IAAItrB,EAAQmiB,GAAS7O,EAAK7Z,MAAO2kB,EAAKre,KAAMqe,EAAKne,IACjD,QAAID,IACAsT,EAAKO,SAAS,CAAEM,QAAS6W,GAAW5X,GAAGpT,MAChC,QAKvBgsB,MAGR,MAAM,GAAyB,OAAWvI,UAAU,CAChD,sBAAuB,CACnBM,gBAAiB,OACjBsK,OAAQ,iBACRrK,MAAO,OACPsK,aAAc,OACdC,OAAQ,QACRjK,QAAS,QACT7gB,OAAQ,WAEZ,sBAAuB,CACnB6gB,QAAS,QACT7gB,OAAQ,aC3RV,GAAyB,OAAWggB,UAAU,CAChD,sBAAuB,CAAEM,gBAAiB,aAC1C,yBAA0B,CAAEA,gBAAiB,eAE3CyK,GAAkB,IAAOC,GAAkB,SAC3CC,GAAqC,OAAMhjB,OAAO,CACpD,QAAQuF,GACJ,OAAO,eAAcA,EAAS,CAC1B0d,aAAa,EACbC,SAAUH,GACVI,gBAAiBL,QAIvBM,GAA4B,OAAWZ,KAAK,CAAEnL,MAAO,uBAAyBgM,GAA+B,OAAWb,KAAK,CAAEnL,MAAO,0BACtIiM,GAAoC,OAAWtjB,OAAO,CACxD,SAAW,OAAO,OAAWgJ,MAC7B,OAAOua,EAAMvd,GACT,IAAKA,EAAGK,aAAeL,EAAGI,UACtB,OAAOmd,EACX,IAAIpD,EAAc,GACdre,EAASkE,EAAGjY,MAAMkY,MAAM+c,IAC5B,IAAK,IAAI1uB,KAAS0R,EAAGjY,MAAMqY,UAAUvS,OAAQ,CACzC,IAAKS,EAAMyR,MACP,SACJ,IAAIlJ,EAAQ2mB,GAAcxd,EAAGjY,MAAOuG,EAAMuhB,MAAO,EAAG/T,IAC5CxN,EAAMuhB,KAAO,GAAK2N,GAAcxd,EAAGjY,MAAOuG,EAAMuhB,KAAO,EAAG,EAAG/T,IAC7DA,EAAOmhB,cACNO,GAAcxd,EAAGjY,MAAOuG,EAAMuhB,KAAM,EAAG/T,IACnCxN,EAAMuhB,KAAO7P,EAAGjY,MAAMmb,IAAI/Z,QAAUq0B,GAAcxd,EAAGjY,MAAOuG,EAAMuhB,KAAO,GAAI,EAAG/T,IAC7F,IAAKjF,EACD,SACJ,IAAI2lB,EAAO3lB,EAAMkhB,QAAUqF,GAAeC,GAC1ClD,EAAYjxB,KAAKszB,EAAKluB,MAAMuI,EAAM5N,MAAMoF,KAAMwI,EAAM5N,MAAMsF,KACtDsI,EAAMzM,KACN+vB,EAAYjxB,KAAKszB,EAAKluB,MAAMuI,EAAMzM,IAAIiE,KAAMwI,EAAMzM,IAAImE,KAE9D,OAAO,OAAW+F,IAAI6lB,GAAa,IAEvC1E,QAAShS,GAAK,OAAW0W,YAAY9rB,KAAKoV,KAExCga,GAAwB,CAC1BH,GACA,IAQJ,SAASI,GAAgB5hB,EAAS,IAC9B,MAAO,CAACkhB,GAAsBtb,GAAG5F,GAAS2hB,IAE9C,SAASE,GAAc7W,EAAM9I,EAAKkf,GAC9B,IAAIU,EAAS9W,EAAKzT,KAAK2K,EAAM,EAAI,OAAS6f,SAAW,OAAS/P,UAC9D,GAAI8P,EACA,OAAOA,EACX,GAAwB,GAApB9W,EAAK/M,KAAK5Q,OAAa,CACvB,IAAIsB,EAAQyyB,EAAS/iB,QAAQ2M,EAAK/M,MAClC,GAAItP,GAAS,GAAKA,EAAQ,IAAMuT,EAAM,EAAI,EAAI,GAC1C,MAAO,CAACkf,EAASzyB,EAAQuT,IAEjC,OAAO,KAQX,SAASwf,GAAcz1B,EAAOE,EAAK+V,EAAKlC,EAAS,IAC7C,IAAIqhB,EAAkBrhB,EAAOqhB,iBAAmBL,GAAiBI,EAAWphB,EAAOohB,UAAYH,GAC3FlrB,EAAOoU,EAAWle,GAAQ+e,EAAOjV,EAAK0b,aAAatlB,EAAK+V,GAC5D,IAAK,IAAIzT,EAAMuc,EAAMvc,EAAKA,EAAMA,EAAIhC,OAAQ,CACxC,IAAIu1B,EAAUH,GAAcpzB,EAAIjB,KAAM0U,EAAKkf,GAC3C,GAAIY,GAAWvzB,EAAI8D,KAAO9D,EAAIgE,GAC1B,OAAOwvB,GAAoBh2B,EAAOE,EAAK+V,EAAKzT,EAAKuzB,EAASZ,GAElE,OAAOc,GAAmBj2B,EAAOE,EAAK+V,EAAKnM,EAAMiV,EAAKxd,KAAM6zB,EAAiBD,GAEjF,SAASa,GAAoBE,EAAQC,EAAMlgB,EAAK9P,EAAOiwB,EAAUjB,GAC7D,IAAI30B,EAAS2F,EAAM3F,OAAQ61B,EAAa,CAAE/vB,KAAMH,EAAMG,KAAME,GAAIL,EAAMK,IAClElF,EAAQ,EAAG0I,EAAoB,OAAXxJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOwJ,OAC/E,GAAIA,IAAWiM,EAAM,EAAIjM,EAAOG,YAAYhE,EAAMG,MAAQ0D,EAAOI,WAAWjE,EAAMK,KAC9E,GACI,GAAIyP,EAAM,EAAIjM,EAAOxD,IAAML,EAAMG,KAAO0D,EAAO1D,MAAQH,EAAMK,GAAI,CAC7D,GAAa,GAATlF,GAAc80B,EAAShkB,QAAQpI,EAAOzI,KAAKyQ,OAAS,GAAKhI,EAAO1D,KAAO0D,EAAOxD,GAC9E,MAAO,CAAEtF,MAAOm1B,EAAYh0B,IAAK,CAAEiE,KAAM0D,EAAO1D,KAAME,GAAIwD,EAAOxD,IAAMwpB,SAAS,GAE/E,GAAI4F,GAAc5rB,EAAOzI,KAAM0U,EAAKkf,GACrC7zB,SAEC,GAAIs0B,GAAc5rB,EAAOzI,MAAO0U,EAAKkf,KACtC7zB,IACa,GAATA,GACA,MAAO,CACHJ,MAAOm1B,EACPh0B,IAAK2H,EAAO1D,MAAQ0D,EAAOxD,QAAK0L,EAAY,CAAE5L,KAAM0D,EAAO1D,KAAME,GAAIwD,EAAOxD,IAC5EwpB,SAAS,UAIpB/Z,EAAM,EAAIjM,EAAOM,cAAgBN,EAAOO,eACrD,MAAO,CAAErJ,MAAOm1B,EAAYrG,SAAS,GAEzC,SAASiG,GAAmBj2B,EAAOE,EAAK+V,EAAKnM,EAAMwsB,EAAWlB,EAAiBD,GAC3E,IAAIoB,EAAUtgB,EAAM,EAAIjW,EAAMw2B,SAASt2B,EAAM,EAAGA,GAAOF,EAAMw2B,SAASt2B,EAAKA,EAAM,GAC7Eu2B,EAAUtB,EAAS/iB,QAAQmkB,GAC/B,GAAIE,EAAU,GAAMA,EAAU,GAAK,GAAOxgB,EAAM,EAC5C,OAAO,KACX,IAAIygB,EAAa,CAAEpwB,KAAM2P,EAAM,EAAI/V,EAAM,EAAIA,EAAKsG,GAAIyP,EAAM,EAAI/V,EAAM,EAAIA,GACtEuf,EAAOzf,EAAMmb,IAAIwb,UAAUz2B,EAAK+V,EAAM,EAAIjW,EAAMmb,IAAI/Z,OAAS,GAAIE,EAAQ,EAC7E,IAAK,IAAIs1B,EAAW,GAAKnX,EAAK9c,OAAQiN,MAAQgnB,GAAYxB,GAAkB,CACxE,IAAItQ,EAAOrF,EAAKvc,MACZ+S,EAAM,IACN2gB,GAAY9R,EAAK1jB,QACrB,IAAIy1B,EAAU32B,EAAM02B,EAAW3gB,EAC/B,IAAK,IAAI/V,EAAM+V,EAAM,EAAI,EAAI6O,EAAK1jB,OAAS,EAAGiB,EAAM4T,EAAM,EAAI6O,EAAK1jB,QAAU,EAAGlB,GAAOmC,EAAKnC,GAAO+V,EAAK,CACpG,IAAI7B,EAAQ+gB,EAAS/iB,QAAQ0S,EAAK5kB,IAClC,KAAIkU,EAAQ,GAAKtK,EAAKoM,QAAQ2gB,EAAU32B,EAAK,GAAGqB,MAAQ+0B,GAExD,GAAKliB,EAAQ,GAAK,GAAO6B,EAAM,EAC3B3U,QAEC,IAAa,GAATA,EACL,MAAO,CAAEJ,MAAOw1B,EAAYr0B,IAAK,CAAEiE,KAAMuwB,EAAU32B,EAAKsG,GAAIqwB,EAAU32B,EAAM,GAAK8vB,QAAU5b,GAAS,GAAOqiB,GAAW,GAGtHn1B,KAGJ2U,EAAM,IACN2gB,GAAY9R,EAAK1jB,QAEzB,OAAOqe,EAAK7P,KAAO,CAAE1O,MAAOw1B,EAAY1G,SAAS,GAAU,KCrI/D,SAAS8G,GAAUC,EAAKC,GACpB,OAAO,OAAgB3mB,OAAO0mB,EAAIjxB,OAAO8F,IAAIorB,GAAKD,EAAIE,WAE1D,SAASC,GAAOl3B,EAAOqY,GACnB,OAAOrY,EAAMmd,OAAO,CAAE9E,YAAWgF,gBAAgB,EAAMhE,UAAW,WAEtE,SAAS8d,IAAQ,MAAEn3B,EAAK,SAAEoa,GAAYgd,GAClC,IAAI/e,EAAYye,GAAU92B,EAAMqY,UAAW+e,GAC3C,OAAI/e,EAAU6D,GAAGlc,EAAMqY,aAEvB+B,EAAS8c,GAAOl3B,EAAOqY,KAChB,GAEX,SAASgf,GAAS9wB,EAAO+wB,GACrB,OAAO,OAAgBttB,OAAOstB,EAAU/wB,EAAMC,GAAKD,EAAMD,MAE7D,SAASixB,GAAa1d,EAAMyd,GACxB,OAAOH,GAAQtd,EAAMtT,GAASA,EAAMyR,MAAQ6B,EAAK2d,WAAWjxB,EAAO+wB,GAAWD,GAAS9wB,EAAO+wB,IAMlG,MAAMG,GAAiB5d,GAAQ0d,GAAa1d,EAAMA,EAAK+T,eAAiB,OAAUC,KAI5E6J,GAAkB7d,GAAQ0d,GAAa1d,EAAMA,EAAK+T,eAAiB,OAAUC,KASnF,SAAS8J,GAAc9d,EAAMyd,GACzB,OAAOH,GAAQtd,EAAMtT,GAASA,EAAMyR,MAAQ6B,EAAK+d,YAAYrxB,EAAO+wB,GAAWD,GAAS9wB,EAAO+wB,IAMnG,MAAMO,GAAkBhe,GAAQ8d,GAAc9d,EAAMA,EAAK+T,eAAiB,OAAUC,KAI9EiK,GAAmBje,GAAQ8d,GAAc9d,EAAMA,EAAK+T,eAAiB,OAAUC,KA0DrF,SAASkK,GAAgB/3B,EAAO+e,EAAMiZ,GAClC,GAAIjZ,EAAKxd,KAAK+J,KAAK0sB,GACf,OAAO,EACX,IAAIC,EAAMlZ,EAAKvY,GAAKuY,EAAKzY,KACzB,OAAO2xB,IAAQA,EAAM,GAAK,YAAYzuB,KAAKxJ,EAAMw2B,SAASzX,EAAKzY,KAAMyY,EAAKvY,OAASuY,EAAK+G,WAE5F,SAASoS,GAAal4B,EAAOkB,EAAOo2B,GAChC,IAAIp3B,EAAMge,EAAWle,GAAOwlB,aAAatkB,EAAM4mB,MAC3CkQ,EAAcV,EAAU,OAASvR,SAAW,OAAS+P,SAGzD,IAAK,IAAIqC,EAAKj3B,EAAM4mB,OAAQ,CACxB,IAAInlB,EAAO20B,EAAUp3B,EAAIkK,WAAW+tB,GAAMj4B,EAAIiK,YAAYguB,GAC1D,IAAKx1B,EACD,MACAo1B,GAAgB/3B,EAAO2C,EAAMq1B,GAC7B93B,EAAMyC,EAENw1B,EAAKb,EAAU30B,EAAK6D,GAAK7D,EAAK2D,KAEtC,IAA0CwI,EAAOspB,EAA7C3B,EAAUv2B,EAAIqB,KAAK+J,KAAK0sB,GAK5B,OAHII,EADA3B,IAAY3nB,EAAQwoB,EAAU7B,GAAcz1B,EAAOE,EAAIoG,KAAM,GAAKmvB,GAAcz1B,EAAOE,EAAIsG,IAAK,KAAOsI,EAAMkhB,QACpGsH,EAAUxoB,EAAMzM,IAAImE,GAAKsI,EAAMzM,IAAIiE,KAEnCgxB,EAAUp3B,EAAIsG,GAAKtG,EAAIoG,KAC7B,OAAgB0D,OAAOouB,EAAQd,GAAW,EAAI,GAKzD,MAAMe,GAAmBxe,GAAQsd,GAAQtd,EAAMtT,GAAS2xB,GAAare,EAAK7Z,MAAOuG,EAAOsT,EAAK+T,eAAiB,OAAUC,MAIlHyK,GAAoBze,GAAQsd,GAAQtd,EAAMtT,GAAS2xB,GAAare,EAAK7Z,MAAOuG,EAAOsT,EAAK+T,eAAiB,OAAUC,MACzH,SAAS0K,GAAa1e,EAAMyd,GACxB,OAAOH,GAAQtd,EAAMtT,IACjB,IAAKA,EAAMyR,MACP,OAAOqf,GAAS9wB,EAAO+wB,GAC3B,IAAIkB,EAAQ3e,EAAK4e,eAAelyB,EAAO+wB,GACvC,OAAOkB,EAAM1Q,MAAQvhB,EAAMuhB,KAAO0Q,EAAQ3e,EAAK6e,mBAAmBnyB,EAAO+wB,KAMjF,MAAMqB,GAAe9e,GAAQ0e,GAAa1e,GAAM,GAI1C+e,GAAiB/e,GAAQ0e,GAAa1e,GAAM,GAClD,SAASgf,GAAahf,EAAMyd,GACxB,IAAI,MAAEt3B,GAAU6Z,EAAMxB,EAAYye,GAAU92B,EAAMqY,UAAW9R,GAClDA,EAAMyR,MAAQ6B,EAAK4e,eAAelyB,EAAO+wB,EAASzd,EAAK+O,IAAIkQ,cAAgBzB,GAAS9wB,EAAO+wB,IAEtG,GAAIjf,EAAU6D,GAAGlc,EAAMqY,WACnB,OAAO,EACX,IAAI0gB,EAAWlf,EAAKmf,YAAYh5B,EAAMqY,UAAUvM,KAAKgc,MACjDmR,EAAapf,EAAKoS,UAAUiN,wBAMhC,OALArf,EAAKO,SAAS8c,GAAOl3B,EAAOqY,GAAY,CACpCqC,QAASqe,GAAYA,EAASt2B,IAAMw2B,EAAWx2B,KAAOs2B,EAASpK,OAASsK,EAAWtK,OAC7E,OAAWtR,eAAehF,EAAUvM,KAAKgc,KAAM,CAAEqR,EAAG,QAASC,QAASL,EAASt2B,IAAMw2B,EAAWx2B,WAChGyP,KAEH,EAKX,MAAMmnB,GAAexf,GAAQgf,GAAahf,GAAM,GAI1Cyf,GAAiBzf,GAAQgf,GAAahf,GAAM,GAClD,SAAS0f,GAAmB1f,EAAM3Y,EAAOo2B,GACrC,IAAI3S,EAAO9K,EAAK8X,YAAYzwB,EAAM4mB,MAAO0Q,EAAQ3e,EAAK6e,mBAAmBx3B,EAAOo2B,GAGhF,GAFIkB,EAAM1Q,MAAQ5mB,EAAM4mB,MAAQ0Q,EAAM1Q,OAASwP,EAAU3S,EAAKne,GAAKme,EAAKre,QACpEkyB,EAAQ3e,EAAK6e,mBAAmBx3B,EAAOo2B,GAAS,KAC/CA,GAAWkB,EAAM1Q,MAAQnD,EAAKre,MAAQqe,EAAKvjB,OAAQ,CACpD,IAAIgmB,EAAQ,OAAOe,KAAKtO,EAAK7Z,MAAMw2B,SAAS7R,EAAKre,KAAMkB,KAAKE,IAAIid,EAAKre,KAAO,IAAKqe,EAAKne,MAAM,GAAGpF,OAC3FgmB,GAASlmB,EAAM4mB,MAAQnD,EAAKre,KAAO8gB,IACnCoR,EAAQ,OAAgBxuB,OAAO2a,EAAKre,KAAO8gB,IAEnD,OAAOoR,EAMX,MAAMgB,GAA4B3f,GAAQsd,GAAQtd,EAAMtT,GAASgzB,GAAmB1f,EAAMtT,GAAO,IAO3FkzB,GAA6B5f,GAAQsd,GAAQtd,EAAMtT,GAASgzB,GAAmB1f,EAAMtT,GAAO,IAI5FmzB,GAAkB7f,GAAQsd,GAAQtd,EAAMtT,GAAS,OAAgByD,OAAO6P,EAAK8X,YAAYprB,EAAMuhB,MAAMxhB,KAAM,IAI3GqzB,GAAgB9f,GAAQsd,GAAQtd,EAAMtT,GAAS,OAAgByD,OAAO6P,EAAK8X,YAAYprB,EAAMuhB,MAAMthB,IAAK,IAC9G,SAASozB,GAAkB55B,EAAOoa,EAAUnS,GACxC,IAAImM,GAAQ,EAAOiE,EAAYye,GAAU92B,EAAMqY,UAAW9R,IACtD,IAAI6vB,EAAWX,GAAcz1B,EAAOuG,EAAMuhB,MAAO,IAC1C2N,GAAcz1B,EAAOuG,EAAMuhB,KAAM,IAChCvhB,EAAMuhB,KAAO,GAAK2N,GAAcz1B,EAAOuG,EAAMuhB,KAAO,EAAG,IACvDvhB,EAAMuhB,KAAO9nB,EAAMmb,IAAI/Z,QAAUq0B,GAAcz1B,EAAOuG,EAAMuhB,KAAO,GAAI,GAC/E,IAAKsO,IAAaA,EAAS/zB,IACvB,OAAOkE,EACX6N,GAAQ,EACR,IAAI0T,EAAOsO,EAASl1B,MAAMoF,MAAQC,EAAMuhB,KAAOsO,EAAS/zB,IAAImE,GAAK4vB,EAAS/zB,IAAIiE,KAC9E,OAAO2B,EAAS,OAAgB1B,MAAMA,EAAMszB,OAAQ/R,GAAQ,OAAgB9d,OAAO8d,KAEvF,QAAK1T,IAELgG,EAAS8c,GAAOl3B,EAAOqY,KAChB,GAMX,MAAMyhB,GAAwB,EAAG95B,QAAOoa,cAAewf,GAAkB55B,EAAOoa,GAAU,GAM1F,SAAS2f,GAAUlgB,EAAMud,GACrB,IAAI/e,EAAYye,GAAUjd,EAAK7Z,MAAMqY,UAAW9R,IAC5C,IAAIuhB,EAAOsP,EAAI7wB,GACf,OAAO,OAAgBA,MAAMA,EAAMszB,OAAQ/R,EAAKA,KAAMA,EAAKkS,cAE/D,OAAI3hB,EAAU6D,GAAGrC,EAAK7Z,MAAMqY,aAE5BwB,EAAKO,SAAS8c,GAAOrd,EAAK7Z,MAAOqY,KAC1B,GAEX,SAAS4hB,GAAapgB,EAAMyd,GACxB,OAAOyC,GAAUlgB,EAAMtT,GAASsT,EAAK2d,WAAWjxB,EAAO+wB,IAM3D,MAAM4C,GAAiBrgB,GAAQogB,GAAapgB,EAAMA,EAAK+T,eAAiB,OAAUC,KAI5EsM,GAAkBtgB,GAAQogB,GAAapgB,EAAMA,EAAK+T,eAAiB,OAAUC,KASnF,SAASuM,GAAcvgB,EAAMyd,GACzB,OAAOyC,GAAUlgB,EAAMtT,GAASsT,EAAK+d,YAAYrxB,EAAO+wB,IAM5D,MAAM+C,GAAkBxgB,GAAQugB,GAAcvgB,EAAMA,EAAK+T,eAAiB,OAAUC,KAI9EyM,GAAmBzgB,GAAQugB,GAAcvgB,EAAMA,EAAK+T,eAAiB,OAAUC,KAerF,MAQM0M,GAAmB1gB,GAAQkgB,GAAUlgB,EAAMtT,GAAS2xB,GAAare,EAAK7Z,MAAOuG,EAAOsT,EAAK+T,eAAiB,OAAUC,MAIpH2M,GAAoB3gB,GAAQkgB,GAAUlgB,EAAMtT,GAAS2xB,GAAare,EAAK7Z,MAAOuG,EAAOsT,EAAK+T,eAAiB,OAAUC,MAC3H,SAAS4M,GAAa5gB,EAAMyd,GACxB,OAAOyC,GAAUlgB,EAAMtT,GAASsT,EAAK4e,eAAelyB,EAAO+wB,IAK/D,MAAMoD,GAAe7gB,GAAQ4gB,GAAa5gB,GAAM,GAI1C8gB,GAAiB9gB,GAAQ4gB,GAAa5gB,GAAM,GAClD,SAAS+gB,GAAa/gB,EAAMyd,GACxB,OAAOyC,GAAUlgB,EAAMtT,GAASsT,EAAK4e,eAAelyB,EAAO+wB,EAASzd,EAAK+O,IAAIkQ,eAKjF,MAAM+B,GAAehhB,GAAQ+gB,GAAa/gB,GAAM,GAI1CihB,GAAiBjhB,GAAQ+gB,GAAa/gB,GAAM,GAI5CkhB,GAA4BlhB,GAAQkgB,GAAUlgB,EAAMtT,GAASgzB,GAAmB1f,EAAMtT,GAAO,IAI7Fy0B,GAA6BnhB,GAAQkgB,GAAUlgB,EAAMtT,GAASgzB,GAAmB1f,EAAMtT,GAAO,IAI9F00B,GAAkBphB,GAAQkgB,GAAUlgB,EAAMtT,GAAS,OAAgByD,OAAO6P,EAAK8X,YAAYprB,EAAMuhB,MAAMxhB,OAIvG40B,GAAgBrhB,GAAQkgB,GAAUlgB,EAAMtT,GAAS,OAAgByD,OAAO6P,EAAK8X,YAAYprB,EAAMuhB,MAAMthB,KAIrG20B,GAAiB,EAAGn7B,QAAOoa,eAC7BA,EAAS8c,GAAOl3B,EAAO,CAAE65B,OAAQ,MAC1B,GAKLuB,GAAe,EAAGp7B,QAAOoa,eAC3BA,EAAS8c,GAAOl3B,EAAO,CAAE65B,OAAQ75B,EAAMmb,IAAI/Z,WACpC,GAKLi6B,GAAiB,EAAGr7B,QAAOoa,eAC7BA,EAAS8c,GAAOl3B,EAAO,CAAE65B,OAAQ75B,EAAMqY,UAAUvM,KAAK+tB,OAAQ/R,KAAM,MAC7D,GAKLwT,GAAe,EAAGt7B,QAAOoa,eAC3BA,EAAS8c,GAAOl3B,EAAO,CAAE65B,OAAQ75B,EAAMqY,UAAUvM,KAAK+tB,OAAQ/R,KAAM9nB,EAAMmb,IAAI/Z,WACvE,GAKLm6B,GAAY,EAAGv7B,QAAOoa,eACxBA,EAASpa,EAAMmd,OAAO,CAAE9E,UAAW,CAAEwhB,OAAQ,EAAG/R,KAAM9nB,EAAMmb,IAAI/Z,QAAUiY,UAAW,aAC9E,GAKLmiB,GAAa,EAAGx7B,QAAOoa,eACzB,IAAItU,EAAS21B,GAAmBz7B,GAAO4L,IAAI,EAAGtF,OAAME,QAAS,OAAgBD,MAAMD,EAAMkB,KAAKE,IAAIlB,EAAK,EAAGxG,EAAMmb,IAAI/Z,UAEpH,OADAgZ,EAASpa,EAAMmd,OAAO,CAAE9E,UAAW,OAAgBhI,OAAOvK,GAASuT,UAAW,aACvE,GAQLqiB,GAAqB,EAAG17B,QAAOoa,eACjC,IAAI/B,EAAYye,GAAU92B,EAAMqY,UAAW9R,IACvC,IAAIwU,EACJ,IAAI/Z,EAAUkd,EAAWle,GAAOwlB,aAAajf,EAAMuhB,KAAM,GACzD,QAAU9mB,EAAQsF,KAAOC,EAAMD,MAAQtF,EAAQwF,IAAMD,EAAMC,IACtDxF,EAAQwF,GAAKD,EAAMC,IAAMxF,EAAQsF,MAAQC,EAAMD,QACpB,QAAzByU,EAAK/Z,EAAQR,cAA2B,IAAPua,OAAgB,EAASA,EAAGva,QAChEQ,EAAUA,EAAQR,OACtB,OAAO,OAAgB+F,MAAMvF,EAAQwF,GAAIxF,EAAQsF,QAGrD,OADA8T,EAAS8c,GAAOl3B,EAAOqY,KAChB,GAOLsjB,GAAoB,EAAG37B,QAAOoa,eAChC,IAAI5X,EAAMxC,EAAMqY,UAAWA,EAAY,KAKvC,OAJI7V,EAAIsD,OAAO1E,OAAS,EACpBiX,EAAY,OAAgBhI,OAAO,CAAC7N,EAAIsJ,OAClCtJ,EAAIsJ,KAAKkM,QACfK,EAAY,OAAgBhI,OAAO,CAAC,OAAgBrG,OAAOxH,EAAIsJ,KAAKgc,WACnEzP,IAEL+B,EAAS8c,GAAOl3B,EAAOqY,KAChB,IAEX,SAASujB,IAAS,MAAE57B,EAAK,SAAEoa,GAAY4c,GACnC,GAAIh3B,EAAMqa,SACN,OAAO,EACX,IAAIlB,EAAQ,mBACRvB,EAAU5X,EAAM67B,cAAct1B,IAC9B,IAAI,KAAED,EAAI,GAAEE,GAAOD,EACnB,GAAID,GAAQE,EAAI,CACZ,IAAIs1B,EAAU9E,EAAG1wB,GACbw1B,EAAUx1B,EACV6S,EAAQ,kBACH2iB,EAAUx1B,IACf6S,EAAQ,kBACZ7S,EAAOkB,KAAKE,IAAIpB,EAAMw1B,GACtBt1B,EAAKgB,KAAKC,IAAIjB,EAAIs1B,GAEtB,OAAOx1B,GAAQE,EAAK,CAAED,SAAU,CAAEqR,QAAS,CAAEtR,OAAME,MAAMD,MAAO,OAAgByD,OAAO1D,MAE3F,OAAIsR,EAAQA,QAAQI,QAEpBoC,EAASpa,EAAMmd,OAAOvF,EAAS,CAAEyF,gBAAgB,EAAMhE,UAAWF,MAC3D,GAEX,SAAS4iB,GAAWv3B,EAAQtE,EAAKo3B,GAC7B,GAAI9yB,aAAkB,OAClB,IAAK,IAAIsB,KAAUtB,EAAOw3B,YAAY,OAAYC,cAC9Cn2B,EAAOqsB,QAAQjyB,EAAKA,EAAK,CAACoG,EAAME,KACxBF,EAAOpG,GAAOsG,EAAKtG,IACnBA,EAAMo3B,EAAU9wB,EAAKF,KAErC,OAAOpG,EAEX,MAAMg8B,GAAe,CAAC13B,EAAQ8yB,IAAYsE,GAASp3B,EAAQtE,IACvD,IAAsDwc,EAAQyf,GAA1D,MAAEn8B,GAAUwE,EAAQmgB,EAAO3kB,EAAMmb,IAAIyJ,OAAO1kB,GAChD,IAAKo3B,GAAWp3B,EAAMykB,EAAKre,MAAQpG,EAAMykB,EAAKre,KAAO,MAChD,SAASkD,KAAKkT,EAASiI,EAAKG,KAAKphB,MAAM,EAAGxD,EAAMykB,EAAKre,OAAQ,CAC9D,GAAiC,MAA7BoW,EAAOA,EAAOtb,OAAS,GACvB,OAAOlB,EAAM,EACjB,IAAIk8B,EAAM,eAAY1f,EAAQ1c,EAAMmkB,SAAUkY,EAAOD,EAAMnY,GAAcjkB,IAAUikB,GAAcjkB,GACjG,IAAK,IAAIY,EAAI,EAAGA,EAAIy7B,GAAyC,KAAjC3f,EAAOA,EAAOtb,OAAS,EAAIR,GAAWA,IAC9DV,IACJi8B,EAAYj8B,OAGZi8B,EAAY,eAAiBxX,EAAKG,KAAM5kB,EAAMykB,EAAKre,KAAMgxB,EAASA,GAAW3S,EAAKre,KAC9E61B,GAAaj8B,GAAOykB,EAAK6L,SAAW8G,EAAUt3B,EAAMmb,IAAI4V,MAAQ,KAChEoL,GAAa7E,EAAU,GAAK,GAEpC,OAAOyE,GAAWv3B,EAAQ23B,EAAW7E,KAMnCgF,GAAqBziB,GAAQqiB,GAAariB,GAAM,GAIhD0iB,GAAoB1iB,GAAQqiB,GAAariB,GAAM,GAC/C2iB,GAAgB,CAACh4B,EAAQ8yB,IAAYsE,GAASp3B,EAAQtD,IACxD,IAAIhB,EAAMgB,GAAO,MAAElB,GAAUwE,EAAQmgB,EAAO3kB,EAAMmb,IAAIyJ,OAAO1kB,GACzDu8B,EAAaz8B,EAAM08B,gBAAgBx8B,GACvC,IAAK,IAAIy8B,EAAM,OAAQ,CACnB,GAAIz8B,IAAQo3B,EAAU3S,EAAKne,GAAKme,EAAKre,MAAO,CACpCpG,GAAOgB,GAASyjB,EAAK6L,SAAW8G,EAAUt3B,EAAMmb,IAAI4V,MAAQ,KAC5D7wB,GAAOo3B,EAAU,GAAK,GAC1B,MAEJ,IAAI30B,EAAO,eAAiBgiB,EAAKG,KAAM5kB,EAAMykB,EAAKre,KAAMgxB,GAAW3S,EAAKre,KACpEs2B,EAAWjY,EAAKG,KAAKphB,MAAM8D,KAAKE,IAAIxH,EAAKyC,GAAQgiB,EAAKre,KAAMkB,KAAKC,IAAIvH,EAAKyC,GAAQgiB,EAAKre,MACvFu2B,EAAUJ,EAAWG,GACzB,GAAW,MAAPD,GAAeE,GAAWF,EAC1B,MACY,KAAZC,GAAmB18B,GAAOgB,IAC1By7B,EAAME,GACV38B,EAAMyC,EAEV,OAAOo5B,GAAWv3B,EAAQtE,EAAKo3B,KAO7BwF,GAAsBt4B,GAAUg4B,GAAch4B,GAAQ,GAItDu4B,GAAqBv4B,GAAUg4B,GAAch4B,GAAQ,GAMrDw4B,GAAkBnjB,GAAQ+hB,GAAS/hB,EAAM3Z,IAC3C,IAAI0mB,EAAU/M,EAAK8X,YAAYzxB,GAAKsG,GACpC,OAAOu1B,GAAWliB,EAAM3Z,EAAM0mB,EAAUA,EAAUpf,KAAKE,IAAImS,EAAK7Z,MAAMmb,IAAI/Z,OAAQlB,EAAM,IAAI,KAO1F+8B,GAAoBpjB,GAAQ+hB,GAAS/hB,EAAM3Z,IAC7C,IAAI+nB,EAAYpO,EAAK8X,YAAYzxB,GAAKoG,KACtC,OAAOy1B,GAAWliB,EAAM3Z,EAAM+nB,EAAYA,EAAYzgB,KAAKC,IAAI,EAAGvH,EAAM,IAAI,KAkC1Eg9B,GAAY,EAAGl9B,QAAOoa,eACxB,GAAIpa,EAAMqa,SACN,OAAO,EACX,IAAIzC,EAAU5X,EAAM67B,cAAct1B,IACvB,CAAEqR,QAAS,CAAEtR,KAAMC,EAAMD,KAAME,GAAID,EAAMC,GAAIwJ,OAAQ,OAAK2J,GAAG,CAAC,GAAI,MACrEpT,MAAO,OAAgByD,OAAOzD,EAAMD,SAG5C,OADA8T,EAASpa,EAAMmd,OAAOvF,EAAS,CAAEyF,gBAAgB,EAAMhE,UAAW,YAC3D,GAKL8jB,GAAiB,EAAGn9B,QAAOoa,eAC7B,GAAIpa,EAAMqa,SACN,OAAO,EACX,IAAIzC,EAAU5X,EAAM67B,cAAct1B,IAC9B,IAAKA,EAAMyR,OAAuB,GAAdzR,EAAMD,MAAaC,EAAMD,MAAQtG,EAAMmb,IAAI/Z,OAC3D,MAAO,CAAEmF,SACb,IAAIrG,EAAMqG,EAAMD,KAAMqe,EAAO3kB,EAAMmb,IAAIyJ,OAAO1kB,GAC1CoG,EAAOpG,GAAOykB,EAAKre,KAAOpG,EAAM,EAAI,eAAiBykB,EAAKG,KAAM5kB,EAAMykB,EAAKre,MAAM,GAASqe,EAAKre,KAC/FE,EAAKtG,GAAOykB,EAAKne,GAAKtG,EAAM,EAAI,eAAiBykB,EAAKG,KAAM5kB,EAAMykB,EAAKre,MAAM,GAAQqe,EAAKre,KAC9F,MAAO,CAAEsR,QAAS,CAAEtR,OAAME,KAAIwJ,OAAQhQ,EAAMmb,IAAIzX,MAAMxD,EAAKsG,GAAI42B,OAAOp9B,EAAMmb,IAAIzX,MAAM4C,EAAMpG,KACxFqG,MAAO,OAAgByD,OAAOxD,MAEtC,OAAIoR,EAAQA,QAAQI,QAEpBoC,EAASpa,EAAMmd,OAAOvF,EAAS,CAAEyF,gBAAgB,EAAMhE,UAAW,qBAC3D,IAEX,SAASoiB,GAAmBz7B,GACxB,IAAIq9B,EAAS,GAAIld,GAAQ,EACzB,IAAK,IAAI5Z,KAASvG,EAAMqY,UAAUvS,OAAQ,CACtC,IAAIw3B,EAAYt9B,EAAMmb,IAAIyJ,OAAOre,EAAMD,MAAOi3B,EAAUv9B,EAAMmb,IAAIyJ,OAAOre,EAAMC,IAG/E,GAFKD,EAAMyR,OAASzR,EAAMC,IAAM+2B,EAAQj3B,OACpCi3B,EAAUv9B,EAAMmb,IAAIyJ,OAAOre,EAAMC,GAAK,IACtC2Z,GAAQmd,EAAU9M,OAAQ,CAC1B,IAAI5c,EAAOypB,EAAOA,EAAOj8B,OAAS,GAClCwS,EAAKpN,GAAK+2B,EAAQ/2B,GAClBoN,EAAK9N,OAAO3E,KAAKoF,QAGjB82B,EAAOl8B,KAAK,CAAEmF,KAAMg3B,EAAUh3B,KAAME,GAAI+2B,EAAQ/2B,GAAIV,OAAQ,CAACS,KAEjE4Z,EAAOod,EAAQ/M,OAAS,EAE5B,OAAO6M,EAEX,SAASG,GAASx9B,EAAOoa,EAAUkd,GAC/B,GAAIt3B,EAAMqa,SACN,OAAO,EACX,IAAIzC,EAAU,GAAI9R,EAAS,GAC3B,IAAK,IAAI23B,KAAShC,GAAmBz7B,GAAQ,CACzC,GAAIs3B,EAAUmG,EAAMj3B,IAAMxG,EAAMmb,IAAI/Z,OAAuB,GAAdq8B,EAAMn3B,KAC/C,SACJ,IAAIo3B,EAAW19B,EAAMmb,IAAIyJ,OAAO0S,EAAUmG,EAAMj3B,GAAK,EAAIi3B,EAAMn3B,KAAO,GAClEhE,EAAOo7B,EAASt8B,OAAS,EAC7B,GAAIk2B,EAAS,CACT1f,EAAQzW,KAAK,CAAEmF,KAAMm3B,EAAMj3B,GAAIA,GAAIk3B,EAASl3B,IAAM,CAAEF,KAAMm3B,EAAMn3B,KAAM0J,OAAQ0tB,EAAS5Y,KAAO9kB,EAAM29B,YACpG,IAAK,IAAIp2B,KAAKk2B,EAAM33B,OAChBA,EAAO3E,KAAK,OAAgBoF,MAAMiB,KAAKE,IAAI1H,EAAMmb,IAAI/Z,OAAQmG,EAAEsyB,OAASv3B,GAAOkF,KAAKE,IAAI1H,EAAMmb,IAAI/Z,OAAQmG,EAAEugB,KAAOxlB,SAEtH,CACDsV,EAAQzW,KAAK,CAAEmF,KAAMo3B,EAASp3B,KAAME,GAAIi3B,EAAMn3B,MAAQ,CAAEA,KAAMm3B,EAAMj3B,GAAIwJ,OAAQhQ,EAAM29B,UAAYD,EAAS5Y,OAC3G,IAAK,IAAIvd,KAAKk2B,EAAM33B,OAChBA,EAAO3E,KAAK,OAAgBoF,MAAMgB,EAAEsyB,OAASv3B,EAAMiF,EAAEugB,KAAOxlB,KAGxE,QAAKsV,EAAQxW,SAEbgZ,EAASpa,EAAMmd,OAAO,CAClBvF,UACAyF,gBAAgB,EAChBhF,UAAW,OAAgBhI,OAAOvK,EAAQ9F,EAAMqY,UAAU4e,WAC1D5d,UAAW,gBAER,GAKX,MAAMukB,GAAa,EAAG59B,QAAOoa,cAAeojB,GAASx9B,EAAOoa,GAAU,GAIhEyjB,GAAe,EAAG79B,QAAOoa,cAAeojB,GAASx9B,EAAOoa,GAAU,GACxE,SAAS0jB,GAAS99B,EAAOoa,EAAUkd,GAC/B,GAAIt3B,EAAMqa,SACN,OAAO,EACX,IAAIzC,EAAU,GACd,IAAK,IAAI6lB,KAAShC,GAAmBz7B,GAC7Bs3B,EACA1f,EAAQzW,KAAK,CAAEmF,KAAMm3B,EAAMn3B,KAAM0J,OAAQhQ,EAAMmb,IAAIzX,MAAM+5B,EAAMn3B,KAAMm3B,EAAMj3B,IAAMxG,EAAM29B,YAEvF/lB,EAAQzW,KAAK,CAAEmF,KAAMm3B,EAAMj3B,GAAIwJ,OAAQhQ,EAAM29B,UAAY39B,EAAMmb,IAAIzX,MAAM+5B,EAAMn3B,KAAMm3B,EAAMj3B,MAGnG,OADA4T,EAASpa,EAAMmd,OAAO,CAAEvF,UAASyF,gBAAgB,EAAMhE,UAAW,qBAC3D,EAKX,MAAM0kB,GAAa,EAAG/9B,QAAOoa,cAAe0jB,GAAS99B,EAAOoa,GAAU,GAIhE4jB,GAAe,EAAGh+B,QAAOoa,cAAe0jB,GAAS99B,EAAOoa,GAAU,GAIlE6jB,GAAapkB,IACf,GAAIA,EAAK7Z,MAAMqa,SACX,OAAO,EACX,IAAI,MAAEra,GAAU6Z,EAAMjC,EAAU5X,EAAM4X,QAAQ6jB,GAAmBz7B,GAAO4L,IAAI,EAAGtF,OAAME,SAC7EF,EAAO,EACPA,IACKE,EAAKxG,EAAMmb,IAAI/Z,QACpBoF,IACG,CAAEF,OAAME,SAEf6R,EAAYye,GAAU92B,EAAMqY,UAAW9R,GAASsT,EAAK4e,eAAelyB,GAAO,IAAOqF,IAAIgM,GAE1F,OADAiC,EAAKO,SAAS,CAAExC,UAASS,YAAWgF,gBAAgB,EAAMhE,UAAW,iBAC9D,GASX,SAAS6kB,GAAkBl+B,EAAOE,GAC9B,GAAI,iBAAiBsJ,KAAKxJ,EAAMw2B,SAASt2B,EAAM,EAAGA,EAAM,IACpD,MAAO,CAAEoG,KAAMpG,EAAKsG,GAAItG,GAC5B,IACwE6lB,EADpE/kB,EAAUkd,EAAWle,GAAOwlB,aAAatlB,GACzCwc,EAAS1b,EAAQmJ,YAAYjK,GAAM4a,EAAQ9Z,EAAQoJ,WAAWlK,GAClE,OAAIwc,GAAU5B,GAAS4B,EAAOlW,IAAMtG,GAAO4a,EAAMxU,MAAQpG,IACpD6lB,EAAWrJ,EAAOnb,KAAK+J,KAAK,OAASya,YAAcA,EAAS3T,QAAQ0I,EAAM9I,OAAS,GACpFhS,EAAMmb,IAAIyJ,OAAOlI,EAAOlW,IAAIF,MAAQtG,EAAMmb,IAAIyJ,OAAO9J,EAAMxU,MAAMA,KAC1D,CAAEA,KAAMoW,EAAOlW,GAAIA,GAAIsU,EAAMxU,MACjC,KASX,MAAM63B,GAAsCC,IAAiB,GAIvDC,GAA+BD,IAAiB,GACtD,SAASA,GAAiBE,GACtB,MAAO,EAAGt+B,QAAOoa,eACb,GAAIpa,EAAMqa,SACN,OAAO,EACX,IAAIzC,EAAU5X,EAAM67B,cAAct1B,IAC9B,IAAI,KAAED,EAAI,GAAEE,GAAOD,EAAOoe,EAAO3kB,EAAMmb,IAAIyJ,OAAOte,GAC9Ci4B,GAAWD,GAASh4B,GAAQE,GAAM03B,GAAkBl+B,EAAOsG,GAC3Dg4B,IACAh4B,EAAOE,GAAMA,GAAMme,EAAKne,GAAKme,EAAO3kB,EAAMmb,IAAIyJ,OAAOpe,IAAKA,IAC9D,IAAI1F,EAAK,IAAI,GAAcd,EAAO,CAAE6kB,cAAeve,EAAMye,sBAAuBwZ,IAC5ErW,EAAS3D,GAAezjB,EAAIwF,GAClB,MAAV4hB,IACAA,EAAS,OAAOC,KAAKnoB,EAAMmb,IAAIyJ,OAAOte,GAAMwe,MAAM,GAAG1jB,QACzD,MAAOoF,EAAKme,EAAKne,IAAM,KAAKgD,KAAKmb,EAAKG,KAAKte,EAAKme,EAAKre,OACjDE,IACA+3B,IACGj4B,OAAME,MAAO+3B,GACXj4B,EAAOqe,EAAKre,MAAQA,EAAOqe,EAAKre,KAAO,MAAQ,KAAKkD,KAAKmb,EAAKG,KAAKphB,MAAM,EAAG4C,MACjFA,EAAOqe,EAAKre,MAChB,IAAI0J,EAAS,CAAC,GAAIoU,GAAapkB,EAAOkoB,IAGtC,OAFIqW,GACAvuB,EAAO7O,KAAKijB,GAAapkB,EAAOc,EAAG0lB,WAAW7B,EAAKre,MAAO,KACvD,CAAEsR,QAAS,CAAEtR,OAAME,KAAIwJ,OAAQ,OAAK2J,GAAG3J,IAC1CzJ,MAAO,OAAgByD,OAAO1D,EAAO,EAAI0J,EAAO,GAAG5O,WAG3D,OADAgZ,EAASpa,EAAMmd,OAAOvF,EAAS,CAAEyF,gBAAgB,EAAMhE,UAAW,YAC3D,GAGf,SAASmlB,GAAqBx+B,EAAO0b,GACjC,IAAI+iB,GAAU,EACd,OAAOz+B,EAAM67B,cAAct1B,IACvB,IAAIqR,EAAU,GACd,IAAK,IAAI1X,EAAMqG,EAAMD,KAAMpG,GAAOqG,EAAMC,IAAK,CACzC,IAAIme,EAAO3kB,EAAMmb,IAAIyJ,OAAO1kB,GACxBykB,EAAK6L,OAASiO,IAAWl4B,EAAMyR,OAASzR,EAAMC,GAAKme,EAAKre,QACxDoV,EAAEiJ,EAAM/M,EAASrR,GACjBk4B,EAAS9Z,EAAK6L,QAElBtwB,EAAMykB,EAAKne,GAAK,EAEpB,IAAIk4B,EAAY1+B,EAAM4X,QAAQA,GAC9B,MAAO,CAAEA,UACLrR,MAAO,OAAgBA,MAAMm4B,EAAUrd,OAAO9a,EAAMszB,OAAQ,GAAI6E,EAAUrd,OAAO9a,EAAMuhB,KAAM,OAQzG,MAAM6W,GAAkB,EAAG3+B,QAAOoa,eAC9B,GAAIpa,EAAMqa,SACN,OAAO,EACX,IAAI+U,EAAU5d,OAAOnB,OAAO,MACxBrP,EAAU,IAAI,GAAchB,EAAO,CAAEklB,oBAAqBhkB,IACtD,IAAIkT,EAAQgb,EAAQluB,GACpB,OAAgB,MAATkT,GAAiB,EAAIA,KAEhCwD,EAAU4mB,GAAqBx+B,EAAO,CAAC2kB,EAAM/M,EAASrR,KACtD,IAAI2hB,EAAS3D,GAAevjB,EAAS2jB,EAAKre,MAC1C,GAAc,MAAV4hB,EACA,OACC,KAAK1e,KAAKmb,EAAKG,QAChBoD,EAAS,GACb,IAAI1lB,EAAM,OAAO2lB,KAAKxD,EAAKG,MAAM,GAC7BsD,EAAOhE,GAAapkB,EAAOkoB,IAC3B1lB,GAAO4lB,GAAQ7hB,EAAMD,KAAOqe,EAAKre,KAAO9D,EAAIpB,UAC5CguB,EAAQzK,EAAKre,MAAQ4hB,EACrBtQ,EAAQzW,KAAK,CAAEmF,KAAMqe,EAAKre,KAAME,GAAIme,EAAKre,KAAO9D,EAAIpB,OAAQ4O,OAAQoY,OAK5E,OAFKxQ,EAAQA,QAAQI,OACjBoC,EAASpa,EAAMmd,OAAOvF,EAAS,CAAEyB,UAAW,aACzC,GAMLulB,GAAa,EAAG5+B,QAAOoa,eACrBpa,EAAMqa,WAEVD,EAASpa,EAAMmd,OAAOqhB,GAAqBx+B,EAAO,CAAC2kB,EAAM/M,KACrDA,EAAQzW,KAAK,CAAEmF,KAAMqe,EAAKre,KAAM0J,OAAQhQ,EAAMkY,MAAM4L,QACpD,CAAEzK,UAAW,mBACV,GAMLwlB,GAAa,EAAG7+B,QAAOoa,eACrBpa,EAAMqa,WAEVD,EAASpa,EAAMmd,OAAOqhB,GAAqBx+B,EAAO,CAAC2kB,EAAM/M,KACrD,IAAIwP,EAAQ,OAAOe,KAAKxD,EAAKG,MAAM,GACnC,IAAKsC,EACD,OACJ,IAAIgV,EAAM,eAAYhV,EAAOpnB,EAAMmkB,SAAU2a,EAAO,EAChD9uB,EAASoU,GAAapkB,EAAOwH,KAAKC,IAAI,EAAG20B,EAAMnY,GAAcjkB,KACjE,MAAO8+B,EAAO1X,EAAMhmB,QAAU09B,EAAO9uB,EAAO5O,QAAUgmB,EAAMvgB,WAAWi4B,IAAS9uB,EAAOnJ,WAAWi4B,GAC9FA,IACJlnB,EAAQzW,KAAK,CAAEmF,KAAMqe,EAAKre,KAAOw4B,EAAMt4B,GAAIme,EAAKre,KAAO8gB,EAAMhmB,OAAQ4O,OAAQA,EAAOtM,MAAMo7B,OAC1F,CAAEzlB,UAAW,oBACV,GAgCL0lB,GAAmB,CACrB,CAAExhB,IAAK,SAAUC,IAAKia,GAAgBx0B,MAAOi3B,GAAgBhgB,gBAAgB,GAC7E,CAAEqD,IAAK,SAAUC,IAAKka,GAAiBz0B,MAAOk3B,IAC9C,CAAE5c,IAAK,SAAUC,IAAKmb,GAAc11B,MAAOy3B,IAC3C,CAAEnd,IAAK,SAAUC,IAAKob,GAAgB31B,MAAO03B,IAC7C,CAAEpd,IAAK,SAAUC,IAAKkc,GAAiBz2B,MAAOg4B,IAC9C,CAAE1d,IAAK,SAAUC,IAAKmc,GAAe12B,MAAOi4B,IAC5C,CAAE3d,IAAK,SAAUC,IAAK+e,IACtB,CAAEhf,IAAK,SAAUC,IAAK8e,IACtB,CAAE/e,IAAK,SAAUC,IAAKwf,IACtB,CAAEzf,IAAK,aAAcC,IAAKsf,IAC1B,CAAEvf,IAAK,SAAUC,IAAK0f,IACtB,CAAE3f,IAAK,SAAUC,IAAK2f,IACtB,CAAE5f,IAAK,SAAUC,IAAK8b,KAmCpB0F,GAA8B,CAChC,CAAEzhB,IAAK,YAAaC,IAAKia,GAAgBx0B,MAAOi3B,GAAgBhgB,gBAAgB,GAChF,CAAEqD,IAAK,gBAAiBE,IAAK,gBAAiBD,IAAKqa,GAAiB50B,MAAOo3B,IAC3E,CAAE5c,IAAK,gBAAiBD,IAAKic,GAA4Bx2B,MAAO+3B,IAChE,CAAEzd,IAAK,aAAcC,IAAKka,GAAiBz0B,MAAOk3B,GAAiBjgB,gBAAgB,GACnF,CAAEqD,IAAK,iBAAkBE,IAAK,iBAAkBD,IAAKsa,GAAkB70B,MAAOq3B,IAC9E,CAAE7c,IAAK,iBAAkBD,IAAKgc,GAA2Bv2B,MAAO83B,IAChE,CAAExd,IAAK,UAAWC,IAAKmb,GAAc11B,MAAOy3B,GAAcxgB,gBAAgB,GAC1E,CAAEuD,IAAK,cAAeD,IAAK2d,GAAgBl4B,MAAOo4B,IAClD,CAAE5d,IAAK,eAAgBD,IAAK6b,GAAcp2B,MAAO43B,IACjD,CAAEtd,IAAK,YAAaC,IAAKob,GAAgB31B,MAAO03B,GAAgBzgB,gBAAgB,GAChF,CAAEuD,IAAK,gBAAiBD,IAAK4d,GAAcn4B,MAAOq4B,IAClD,CAAE7d,IAAK,iBAAkBD,IAAK8b,GAAgBr2B,MAAO63B,IACrD,CAAEvd,IAAK,SAAUC,IAAK6b,GAAcp2B,MAAO43B,IAC3C,CAAEtd,IAAK,WAAYC,IAAK8b,GAAgBr2B,MAAO63B,IAC/C,CAAEvd,IAAK,OAAQC,IAAKic,GAA4Bx2B,MAAO+3B,IACvD,CAAEzd,IAAK,WAAYC,IAAK2d,GAAgBl4B,MAAOo4B,IAC/C,CAAE9d,IAAK,MAAOC,IAAKgc,GAA2Bv2B,MAAO83B,IACrD,CAAExd,IAAK,UAAWC,IAAK4d,GAAcn4B,MAAOq4B,IAC5C,CAAE/d,IAAK,QAASC,IAAK2gB,IACrB,CAAE5gB,IAAK,QAASC,IAAK+d,IACrB,CAAEhe,IAAK,YAAaC,IAAK8e,GAAoBr5B,MAAOq5B,IACpD,CAAE/e,IAAK,SAAUC,IAAK+e,IACtB,CAAEhf,IAAK,gBAAiBE,IAAK,gBAAiBD,IAAKsf,IACnD,CAAEvf,IAAK,aAAcE,IAAK,aAAcD,IAAKuf,IAC7C,CAAEtf,IAAK,gBAAiBD,IAAKyf,IAC7B,CAAExf,IAAK,aAAcD,IAAKwf,KAC5Bn8B,OAAoBk+B,GAAiBnzB,IAAIwC,IAAK,CAAGqP,IAAKrP,EAAEmP,IAAKC,IAAKpP,EAAEoP,IAAKva,MAAOmL,EAAEnL,UAqB9Eg8B,GAA6B,CAC/B,CAAE1hB,IAAK,gBAAiBE,IAAK,iBAAkBD,IAAK6a,GAAkBp1B,MAAOs3B,IAC7E,CAAEhd,IAAK,iBAAkBE,IAAK,kBAAmBD,IAAK8a,GAAmBr1B,MAAOu3B,IAChF,CAAEjd,IAAK,cAAeC,IAAKogB,IAC3B,CAAErgB,IAAK,oBAAqBC,IAAKugB,IACjC,CAAExgB,IAAK,gBAAiBC,IAAKqgB,IAC7B,CAAEtgB,IAAK,sBAAuBC,IAAKwgB,IACnC,CAAEzgB,IAAK,SAAUC,IAAKme,IACtB,CAAEpe,IAAK,YAAaC,IAAK6gB,IACzB,CAAE9gB,IAAK,QAASE,IAAK,SAAUD,IAAKge,IACpC,CAAEje,IAAK,QAASC,IAAKke,GAAoBxhB,gBAAgB,GACzD,CAAEqD,IAAK,QAASC,IAAKqhB,IACrB,CAAEthB,IAAK,QAASC,IAAKohB,IACrB,CAAErhB,IAAK,aAAcC,IAAKmhB,IAC1B,CAAEphB,IAAK,cAAeC,IAAKygB,IAC3B,CAAE1gB,IAAK,eAAgBC,IAAKsc,KAC9Bj5B,OAAOm+B,IAOHE,GAAgB,CAAE3hB,IAAK,MAAOC,IAAKohB,GAAY37B,MAAO47B,IC38BtD,GAAW,CACb1J,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,KAC/BzY,OAAQ,aAENyiB,GAAkC,OAAYltB,OAAO,CACvD,IAAI/O,EAAOoZ,GACP,IAAI3B,EAAS2B,EAAQ+E,OAAOne,GAAQ,EAAG,OAAQk8B,YAC/C,OAAiB,MAAVzkB,OAAiBzI,EAAYyI,KAGtC0kB,GAAiC,OAAYptB,OAAO,CACtD,IAAI/O,EAAOoZ,GAAW,OAAOA,EAAQ+E,OAAOne,MAE1Co8B,GAA6B,IAAI,cAAc,UAErDA,GAAcrW,UAAY,EAC1BqW,GAAcpW,SAAW,EACzB,MAAMqW,GAA4B,OAAWttB,OAAO,CAChD,SAAW,OAAO,QAAS+F,OAC3B,OAAO9U,EAAO+U,GACV,GAAIA,EAAGI,UAAW,CACd,IAAI4P,EAAYhQ,EAAGjY,MAAMmb,IAAIyJ,OAAO3M,EAAGI,UAAUvM,KAAKgc,MAAMxhB,KACxDk5B,EAAgBvnB,EAAGY,WAAWsC,IAAIyJ,OAAO3M,EAAGY,WAAWR,UAAUvM,KAAKgc,MAAMxhB,KAC5E2hB,GAAahQ,EAAGL,QAAQyJ,OAAOme,GAAgB,KAC/Ct8B,EAAQ,QAAS8U,OAEzB9U,EAAQA,EAAM0I,IAAIqM,EAAGL,SACrB,IAAK,IAAI6nB,KAAUxnB,EAAGyC,QACd+kB,EAAO1d,GAAGod,IACVj8B,EAAQA,EAAMia,OAAO,CAAEiC,IAAK,CAACkgB,GAAc/4B,MAAMk5B,EAAOv8B,MAAOu8B,EAAOv8B,MAAQ,MACzEu8B,EAAO1d,GAAGsd,MACfn8B,EAAQA,EAAMia,OAAO,CAAEzc,OAAQ4F,GAAQA,GAAQm5B,EAAOv8B,SAE9D,OAAOA,KAUf,SAASw8B,KACL,MAAO,CAAC,OAAWC,aAAahmB,GAAGimB,IAAcL,IAErD,MAAMM,GAAiB,WACvB,SAAS9Y,GAAQlI,GACb,IAAK,IAAIje,EAAI,EAAGA,EAAIi/B,GAAez+B,OAAQR,GAAK,EAC5C,GAAIi/B,GAAeh5B,WAAWjG,IAAMie,EAChC,OAAOghB,GAAeC,OAAOl/B,EAAI,GACzC,OAAO,eAAcie,EAAK,IAAMA,EAAKA,EAAK,GAE9C,SAAS,GAAO7e,EAAOE,GACnB,OAAOF,EAAM6nB,eAAe,gBAAiB3nB,GAAK,IAAM,GAE5D,SAAS0/B,GAAY/lB,EAAMvT,EAAME,EAAIwJ,GACjC,GAAI6J,EAAKkmB,UACL,OAAO,EACX,IAAIhJ,EAAMld,EAAK7Z,MAAMqY,UAAUvM,KAC/B,GAAIkE,EAAO5O,OAAS,GAAsB,GAAjB4O,EAAO5O,QAAwD,GAAzC,eAAc,eAAY4O,EAAQ,KAC7E1J,GAAQywB,EAAIzwB,MAAQE,GAAMuwB,EAAIvwB,GAC9B,OAAO,EACX,IAAIyR,EAAK+nB,GAAcnmB,EAAK7Z,MAAOgQ,GACnC,QAAKiI,IAEL4B,EAAKO,SAASnC,IACP,GAMX,MAAMgoB,GAAoB,EAAGjgC,QAAOoa,eAChC,IAAIwR,EAAO,GAAO5rB,EAAOA,EAAMqY,UAAUvM,KAAKgc,MAC1Ctc,EAASogB,EAAKuJ,UAAY,GAASA,SACnC+K,EAAO,KAAMtoB,EAAU5X,EAAM67B,cAAct1B,IAC3C,GAAIA,EAAMyR,MAAO,CACb,IAAI0E,EAASyjB,GAASngC,EAAMmb,IAAK5U,EAAMuhB,MACvC,IAAK,IAAI3hB,KAASqF,EACd,GAAIrF,GAASuW,GAAU,GAAS1c,EAAMmb,IAAK5U,EAAMuhB,OAASf,GAAQ,eAAY5gB,EAAO,IACjF,MAAO,CAAEyR,QAAS,CAAEtR,KAAMC,EAAMuhB,KAAO3hB,EAAM/E,OAAQoF,GAAID,EAAMuhB,KAAO3hB,EAAM/E,QACxEmF,MAAO,OAAgByD,OAAOzD,EAAMuhB,KAAO3hB,EAAM/E,QACjDiY,UAAW,mBAG3B,MAAO,CAAE9S,MAAO25B,EAAO35B,KAI3B,OAFK25B,GACD9lB,EAASpa,EAAMmd,OAAOvF,EAAS,CAAEyF,gBAAgB,MAC7C6iB,GAMNE,GAAsB,CACxB,CAAE7iB,IAAK,YAAaC,IAAKyiB,KAa7B,SAASD,GAAchgC,EAAOy2B,GAC1B,IAAI7K,EAAO,GAAO5rB,EAAOA,EAAMqY,UAAUvM,KAAKgc,MAC1Ctc,EAASogB,EAAKuJ,UAAY,GAASA,SACvC,IAAK,IAAI7nB,KAAO9B,EAAQ,CACpB,IAAIya,EAASc,GAAQ,eAAYzZ,EAAK,IACtC,GAAImpB,GAAWnpB,EACX,OAAO2Y,GAAU3Y,EAAM+yB,GAAWrgC,EAAOsN,EAAK9B,EAAO4G,QAAQ9E,EAAMA,EAAMA,IAAQ,GAC3EgzB,GAAWtgC,EAAOsN,EAAK2Y,EAAQ2F,EAAKlP,QAAU,GAASA,QACjE,GAAI+Z,GAAWxQ,GAAUsa,GAAgBvgC,EAAOA,EAAMqY,UAAUvM,KAAKxF,MACjE,OAAOk6B,GAAYxgC,EAAOsN,EAAK2Y,GAEvC,OAAO,KAEX,SAASsa,GAAgBvgC,EAAOE,GAC5B,IAAIkU,GAAQ,EAKZ,OAJApU,EAAMua,MAAMglB,IAAcpN,QAAQ,EAAGnyB,EAAMmb,IAAI/Z,OAAQkF,IAC/CA,GAAQpG,IACRkU,GAAQ,KAETA,EAEX,SAAS,GAAS+G,EAAKjb,GACnB,IAAIyC,EAAOwY,EAAIyE,YAAY1f,EAAKA,EAAM,GACtC,OAAOyC,EAAKe,MAAM,EAAG,eAAc,eAAYf,EAAM,KAEzD,SAASw9B,GAAShlB,EAAKjb,GACnB,IAAI0T,EAAOuH,EAAIyE,YAAY1f,EAAM,EAAGA,GACpC,OAAO,eAAc,eAAY0T,EAAM,KAAOA,EAAKxS,OAASwS,EAAOA,EAAKlQ,MAAM,GAElF,SAAS48B,GAAWtgC,EAAOi0B,EAAM9jB,EAAOswB,GACpC,IAAIP,EAAO,KAAMtoB,EAAU5X,EAAM67B,cAAct1B,IAC3C,IAAKA,EAAMyR,MACP,MAAO,CAAEJ,QAAS,CAAC,CAAE5H,OAAQikB,EAAM3tB,KAAMC,EAAMD,MAAQ,CAAE0J,OAAQG,EAAO7J,KAAMC,EAAMC,KAChFkU,QAASykB,GAAmBxlB,GAAGpT,EAAMC,GAAKytB,EAAK7yB,QAC/CmF,MAAO,OAAgBA,MAAMA,EAAMszB,OAAS5F,EAAK7yB,OAAQmF,EAAMuhB,KAAOmM,EAAK7yB,SACnF,IAAIuB,EAAO,GAAS3C,EAAMmb,IAAK5U,EAAMuhB,MACrC,OAAKnlB,GAAQ,KAAK6G,KAAK7G,IAAS89B,EAAYruB,QAAQzP,IAAS,EAClD,CAAEiV,QAAS,CAAE5H,OAAQikB,EAAO9jB,EAAO7J,KAAMC,EAAMuhB,MAClDpN,QAASykB,GAAmBxlB,GAAGpT,EAAMuhB,KAAOmM,EAAK7yB,QACjDmF,MAAO,OAAgByD,OAAOzD,EAAMuhB,KAAOmM,EAAK7yB,SACjD,CAAEmF,MAAO25B,EAAO35B,KAE3B,OAAO25B,EAAO,KAAOlgC,EAAMmd,OAAOvF,EAAS,CACvCyF,gBAAgB,EAChBhE,UAAW,eAGnB,SAASmnB,GAAYxgC,EAAO0gC,EAAOvwB,GAC/B,IAAI+vB,EAAO,KAAM1H,EAAQx4B,EAAMqY,UAAUvS,OAAO8F,IAAIrF,GAC5CA,EAAMyR,OAAS,GAAShY,EAAMmb,IAAK5U,EAAMuhB,OAAS3X,EAC3C,OAAgBnG,OAAOzD,EAAMuhB,KAAO3X,EAAM/O,QAC9C8+B,EAAO35B,GAElB,OAAO25B,EAAO,KAAOlgC,EAAMmd,OAAO,CAC9B9E,UAAW,OAAgBhI,OAAOmoB,EAAOx4B,EAAMqY,UAAU4e,WACzD5Z,gBAAgB,EAChB3C,QAAS1a,EAAMqY,UAAUvS,OAAO8F,IAAI,EAAGtF,UAAW+4B,GAAkB1lB,GAAGrT,MAK/E,SAAS+5B,GAAWrgC,EAAOmG,EAAOw6B,GAC9B,IAAIT,EAAO,KAAMtoB,EAAU5X,EAAM67B,cAAct1B,IAC3C,IAAKA,EAAMyR,MACP,MAAO,CAAEJ,QAAS,CAAC,CAAE5H,OAAQ7J,EAAOG,KAAMC,EAAMD,MAAQ,CAAE0J,OAAQ7J,EAAOG,KAAMC,EAAMC,KACjFkU,QAASykB,GAAmBxlB,GAAGpT,EAAMC,GAAKL,EAAM/E,QAChDmF,MAAO,OAAgBA,MAAMA,EAAMszB,OAAS1zB,EAAM/E,OAAQmF,EAAMuhB,KAAO3hB,EAAM/E,SACrF,IAAIlB,EAAMqG,EAAMuhB,KAAMnlB,EAAO,GAAS3C,EAAMmb,IAAKjb,GACjD,GAAIyC,GAAQwD,EAAO,CACf,GAAIy6B,GAAU5gC,EAAOE,GACjB,MAAO,CAAE0X,QAAS,CAAE5H,OAAQ7J,EAAQA,EAAOG,KAAMpG,GAC7Cwa,QAASykB,GAAmBxlB,GAAGzZ,EAAMiG,EAAM/E,QAC3CmF,MAAO,OAAgByD,OAAO9J,EAAMiG,EAAM/E,SAE7C,GAAIm/B,GAAgBvgC,EAAOE,GAAM,CAClC,IAAI2gC,EAAWF,GAAe3gC,EAAMw2B,SAASt2B,EAAKA,EAAqB,EAAfiG,EAAM/E,SAAe+E,EAAQA,EAAQA,EAC7F,MAAO,CAAEI,MAAO,OAAgByD,OAAO9J,EAAMiG,EAAM/E,QAAUy/B,EAAW,EAAI,IACxEnmB,QAAS2kB,GAAkB1lB,GAAGzZ,SAGrC,IAAIygC,GAAe3gC,EAAMw2B,SAASt2B,EAAM,EAAIiG,EAAM/E,OAAQlB,IAAQiG,EAAQA,GAC3Ey6B,GAAU5gC,EAAOE,EAAM,EAAIiG,EAAM/E,QACjC,MAAO,CAAEwW,QAAS,CAAE5H,OAAQ7J,EAAQA,EAAQA,EAAQA,EAAOG,KAAMpG,GAC7Dwa,QAASykB,GAAmBxlB,GAAGzZ,EAAMiG,EAAM/E,QAC3CmF,MAAO,OAAgByD,OAAO9J,EAAMiG,EAAM/E,SAE7C,GAAIpB,EAAM08B,gBAAgBx8B,EAAtBF,CAA2B2C,IAAS,OAAam+B,KAAM,CAC5D,IAAIltB,EAAO5T,EAAMw2B,SAASt2B,EAAM,EAAGA,GACnC,GAAI0T,GAAQzN,GAASnG,EAAM08B,gBAAgBx8B,EAAtBF,CAA2B4T,IAAS,OAAaktB,KAClE,MAAO,CAAElpB,QAAS,CAAE5H,OAAQ7J,EAAQA,EAAOG,KAAMpG,GAC7Cwa,QAASykB,GAAmBxlB,GAAGzZ,EAAMiG,EAAM/E,QAC3CmF,MAAO,OAAgByD,OAAO9J,EAAMiG,EAAM/E,UAEtD,MAAO,CAAEmF,MAAO25B,EAAO35B,KAE3B,OAAO25B,EAAO,KAAOlgC,EAAMmd,OAAOvF,EAAS,CACvCyF,gBAAgB,EAChBhE,UAAW,eAGnB,SAASunB,GAAU5gC,EAAOE,GACtB,IAAI4J,EAAOoU,EAAWle,GAAOwlB,aAAatlB,EAAM,GAChD,OAAO4J,EAAKtJ,QAAUsJ,EAAKxD,MAAQpG,ECvNvC,MAAM6gC,GAA2B,OAAM9uB,OAAO,CAC1C,QAAQuF,GACJ,IAAIwpB,EAAcC,EAClB,IAAK,IAAIhR,KAAKzY,EACVwpB,EAAeA,GAAgB/Q,EAAE+Q,aACjCC,EAAkBA,GAAmBhR,EAAEgR,gBAE3C,MAAO,CAAED,eAAcC,sBAc/B,SAASC,GAASrnB,EAAMsnB,GACpB,IAAIzM,EAAS7a,EAAK6a,OAAO0M,IACrB1+B,EAAQgyB,EAASA,EAAO2M,MAAMjvB,QAAQ+uB,IAAU,EACpD,OAAOz+B,GAAS,EAAIgyB,EAAO4M,OAAO5+B,GAAS,KAE/C,MAAM0+B,GAA2B,OAAW5e,UAAU,MAClD,YAAY3I,GACRpZ,KAAKoF,MAAQgU,EAAK7Z,MAAMkY,MAAMqpB,IAC9B9gC,KAAK4gC,MAAQ5gC,KAAKoF,MAAMnF,OAAOwD,GAAKA,GACpCzD,KAAK6gC,OAAS7gC,KAAK4gC,MAAMz1B,IAAIqF,GAAQA,EAAK4I,IAC1C,IAAI+R,EAAO/R,EAAK7Z,MAAMkY,MAAM6oB,IAC5BtgC,KAAKgC,IAAM,IAAI++B,GAAW3nB,GAAM,EAAM+R,EAAKoV,cAC3CvgC,KAAKkuB,OAAS,IAAI6S,GAAW3nB,GAAM,EAAO+R,EAAKqV,iBAC/CxgC,KAAKgC,IAAIg/B,KAAKhhC,KAAK6gC,OAAO5gC,OAAOZ,GAAKA,EAAE2C,MACxChC,KAAKkuB,OAAO8S,KAAKhhC,KAAK6gC,OAAO5gC,OAAOZ,IAAMA,EAAE2C,MAC5C,IAAK,IAAI3C,KAAKW,KAAK6gC,OACfxhC,EAAE8oB,IAAI8Y,UAAUtiB,IAAI,YAChBtf,EAAE4e,OACF5e,EAAE4e,QAGd,OAAOvB,GACH,IAAIyO,EAAOzO,EAAOnd,MAAMkY,MAAM6oB,IAC1BtgC,KAAKgC,IAAIk/B,WAAa/V,EAAKoV,eAC3BvgC,KAAKgC,IAAIg/B,KAAK,IACdhhC,KAAKgC,IAAM,IAAI++B,GAAWrkB,EAAOtD,MAAM,EAAM+R,EAAKoV,eAElDvgC,KAAKkuB,OAAOgT,WAAa/V,EAAKqV,kBAC9BxgC,KAAKkuB,OAAO8S,KAAK,IACjBhhC,KAAKkuB,OAAS,IAAI6S,GAAWrkB,EAAOtD,MAAM,EAAO+R,EAAKqV,kBAE1DxgC,KAAKgC,IAAIm/B,cACTnhC,KAAKkuB,OAAOiT,cACZ,IAAI/7B,EAAQsX,EAAOnd,MAAMkY,MAAMqpB,IAC/B,GAAI17B,GAASpF,KAAKoF,MAAO,CACrB,IAAIw7B,EAAQx7B,EAAMnF,OAAOwqB,GAAKA,GAC1BoW,EAAS,GAAI7+B,EAAM,GAAIksB,EAAS,GAAIjQ,EAAQ,GAChD,IAAK,IAAIzN,KAAQowB,EAAO,CACpB,IAAsCF,EAAlC5T,EAAQ9sB,KAAK4gC,MAAMjvB,QAAQnB,GAC3Bsc,EAAQ,GACR4T,EAAQlwB,EAAKkM,EAAOtD,MACpB6E,EAAMvd,KAAKggC,KAGXA,EAAQ1gC,KAAK6gC,OAAO/T,GAChB4T,EAAMhkB,QACNgkB,EAAMhkB,OAAOA,IAErBmkB,EAAOngC,KAAKggC,IACXA,EAAM1+B,IAAMA,EAAMksB,GAAQxtB,KAAKggC,GAEpC1gC,KAAK4gC,MAAQA,EACb5gC,KAAK6gC,OAASA,EACd7gC,KAAKgC,IAAIg/B,KAAKh/B,GACdhC,KAAKkuB,OAAO8S,KAAK9S,GACjB,IAAK,IAAI7uB,KAAK4e,EACV5e,EAAE8oB,IAAI8Y,UAAUtiB,IAAI,YAChBtf,EAAE4e,OACF5e,EAAE4e,aAIV,IAAK,IAAI5e,KAAKW,KAAK6gC,OACXxhC,EAAEqd,QACFrd,EAAEqd,OAAOA,GAGzB,UACI1c,KAAKgC,IAAIg/B,KAAK,IACdhhC,KAAKkuB,OAAO8S,KAAK,MAEtB,CACC/T,QAAsB,OAAYC,cAAcrnB,KAAKpD,IAAS,CAAGT,IAAKS,EAAMT,IAAIo/B,eAAgBlT,OAAQzrB,EAAMyrB,OAAOkT,oBAEzH,MAAML,GACF,YAAY3nB,EAAMpX,EAAKk/B,GACnBlhC,KAAKoZ,KAAOA,EACZpZ,KAAKgC,IAAMA,EACXhC,KAAKkhC,UAAYA,EACjBlhC,KAAKmoB,SAAM1W,EACXzR,KAAKqhC,QAAU,GACfrhC,KAAK6gC,OAAS,GACd7gC,KAAKmhC,cAET,KAAKN,GACD,IAAK,IAAIxhC,KAAKW,KAAK6gC,OACXxhC,EAAE2tB,SAAW6T,EAAOlvB,QAAQtS,GAAK,GACjCA,EAAE2tB,UACVhtB,KAAK6gC,OAASA,EACd7gC,KAAKshC,UAET,UACI,GAA0B,GAAtBthC,KAAK6gC,OAAOlgC,OAKZ,YAJIX,KAAKmoB,MACLnoB,KAAKmoB,IAAI8D,SACTjsB,KAAKmoB,SAAM1W,IAInB,IAAKzR,KAAKmoB,IAAK,CACXnoB,KAAKmoB,IAAM0C,SAASC,cAAc,OAClC9qB,KAAKmoB,IAAI4C,UAAY/qB,KAAKgC,IAAM,0BAA4B,6BAC5DhC,KAAKmoB,IAAI8C,MAAMjrB,KAAKgC,IAAM,MAAQ,UAAY,IAC9C,IAAIjC,EAASC,KAAKkhC,WAAalhC,KAAKoZ,KAAK+O,IACzCpoB,EAAO0rB,aAAazrB,KAAKmoB,IAAKnoB,KAAKgC,IAAMjC,EAAOslB,WAAa,MAEjE,IAAIkc,EAASvhC,KAAKmoB,IAAI9C,WACtB,IAAK,IAAIqb,KAAS1gC,KAAK6gC,OACnB,GAAIH,EAAMvY,IAAIqZ,YAAcxhC,KAAKmoB,IAAK,CAClC,MAAOoZ,GAAUb,EAAMvY,IACnBoZ,EAASE,GAAGF,GAChBA,EAASA,EAAOz3B,iBAGhB9J,KAAKmoB,IAAIsD,aAAaiV,EAAMvY,IAAKoZ,GAGzC,MAAOA,EACHA,EAASE,GAAGF,GAEpB,eACI,OAAQvhC,KAAKmoB,KAAOnoB,KAAKkhC,UAAY,EAC/Bn6B,KAAKC,IAAI,EAAGhH,KAAKgC,IACfhC,KAAKmoB,IAAIsQ,wBAAwBvK,OAASnnB,KAAKC,IAAI,EAAGhH,KAAKoZ,KAAKoS,UAAUiN,wBAAwBz2B,KAClG+E,KAAKE,IAAIy6B,YAAa1hC,KAAKoZ,KAAKoS,UAAUiN,wBAAwBvK,QAAUluB,KAAKmoB,IAAIsQ,wBAAwBz2B,KAEzH,cACI,GAAKhC,KAAKkhC,WAAalhC,KAAKqhC,SAAWrhC,KAAKoZ,KAAKuoB,aAAjD,CAEA,IAAK,IAAI1S,KAAOjvB,KAAKqhC,QAAQx9B,MAAM,KAC3BorB,GACAjvB,KAAKkhC,UAAUD,UAAUhV,OAAOgD,GACxC,IAAK,IAAIA,KAAQjvB,KAAKqhC,QAAUrhC,KAAKoZ,KAAKuoB,cAAc99B,MAAM,KACtDorB,GACAjvB,KAAKkhC,UAAUD,UAAUtiB,IAAIsQ,KAG7C,SAASwS,GAAGnjB,GACR,IAAIpc,EAAOoc,EAAKxU,YAEhB,OADAwU,EAAK2N,SACE/pB,EAEX,MAAM,GAAyB,OAAWqnB,UAAU,CAChD,aAAc,CACVG,UAAW,aACX4B,SAAU,SACV3B,KAAM,EACN2D,MAAO,GAEX,oBAAqB,CACjBzD,gBAAiB,UACjBC,MAAO,SAEX,wBAAyB,CACrB8X,aAAc,kBAElB,2BAA4B,CACxBC,UAAW,kBAEf,mBAAoB,CAChBhY,gBAAiB,UACjBC,MAAO,WAQTgX,GAAyB,OAAMtvB,OAAO,CACxCyR,QAAS,CAAC0d,GAAa,MClMZ,SAASmB,KACtB,IAAIjT,EAAMpa,UAAU,GACF,iBAAPoa,IAAiBA,EAAMhE,SAASC,cAAc+D,IACzD,IAAI1uB,EAAI,EAAG+B,EAAOuS,UAAU,GAC5B,GAAIvS,GAAuB,iBAARA,GAAqC,MAAjBA,EAAK6/B,WAAqBxtB,MAAMgY,QAAQrqB,GAAO,CACpF,IAAK,IAAIqP,KAAQrP,EAAM,GAAI6O,OAAO1J,UAAUkW,eAAe/I,KAAKtS,EAAMqP,GAAO,CAC3E,IAAI9O,EAAQP,EAAKqP,GACG,iBAAT9O,EAAmBosB,EAAI7D,aAAazZ,EAAM9O,GACnC,MAATA,IAAeosB,EAAItd,GAAQ9O,GAEtCtC,IAEF,KAAOA,EAAIsU,UAAU9T,OAAQR,IAAKwe,GAAIkQ,EAAKpa,UAAUtU,IACrD,OAAO0uB,EAGT,SAASlQ,GAAIkQ,EAAKmT,GAChB,GAAoB,iBAATA,EACTnT,EAAIxD,YAAYR,SAASmF,eAAegS,SACnC,GAAa,MAATA,QACJ,GAAsB,MAAlBA,EAAMD,SACflT,EAAIxD,YAAY2W,OACX,KAAIztB,MAAMgY,QAAQyV,GAGvB,MAAM,IAAIx7B,WAAW,2BAA6Bw7B,GAFlD,IAAK,IAAI7hC,EAAI,EAAGA,EAAI6hC,EAAMrhC,OAAQR,IAAKwe,GAAIkQ,EAAKmT,EAAM7hC,KChB1D,MAAM8hC,GAAsD,mBAA9B/xB,OAAO7I,UAAU66B,UACzCzX,GAAKA,EAAEyX,UAAU,QAAUzX,GAAKA,EAKtC,MAAM,GAcF,YAAYpG,EAAM8d,EAAOt8B,EAAO,EAAGE,EAAKse,EAAK1jB,OAAQuhC,GAMjDliC,KAAKyC,MAAQ,CAAEoD,KAAM,EAAGE,GAAI,GAI5B/F,KAAKmP,MAAO,EACZnP,KAAKs1B,QAAU,GACft1B,KAAKL,OAAS,GACdK,KAAKoiC,UAAY,EACjBpiC,KAAKgf,KAAOqF,EAAK6R,UAAUrwB,EAAME,GACjC/F,KAAKqiC,YAAcx8B,EACnB7F,KAAKkiC,UAAYA,EAAYzX,GAAKyX,EAAUD,GAAexX,IAAMwX,GACjEjiC,KAAKmiC,MAAQniC,KAAKkiC,UAAUC,GAEhC,OACI,GAAIniC,KAAKoiC,WAAapiC,KAAKL,OAAOgB,OAAQ,CAGtC,GAFAX,KAAKqiC,aAAeriC,KAAKL,OAAOgB,OAChCX,KAAKgf,KAAK9c,OACNlC,KAAKgf,KAAK7P,KACV,OAAQ,EACZnP,KAAKoiC,UAAY,EACjBpiC,KAAKL,OAASK,KAAKgf,KAAKvc,MAE5B,OAAO,eAAYzC,KAAKL,OAAQK,KAAKoiC,WAQzC,OACI,MAAOpiC,KAAKs1B,QAAQ30B,OAChBX,KAAKs1B,QAAQ5zB,MACjB,OAAO1B,KAAKsiC,kBAOhB,kBACI,OAAS,CACL,IAAIpgC,EAAOlC,KAAKuiC,OAChB,GAAIrgC,EAAO,EAEP,OADAlC,KAAKmP,MAAO,EACLnP,KAEX,IAAIwiC,EAAM,eAActgC,GAAOzB,EAAQT,KAAKqiC,YAAcriC,KAAKoiC,UAC/DpiC,KAAKoiC,WAAa,eAAclgC,GAChC,IAAIylB,EAAO3nB,KAAKkiC,UAAUM,GAC1B,IAAK,IAAIriC,EAAI,EAAGV,EAAMgB,GAAQN,IAAK,CAC/B,IAAIsiC,EAAO9a,EAAKvhB,WAAWjG,GACvBkO,EAAQrO,KAAKqO,MAAMo0B,EAAMhjC,GAC7B,GAAI4O,EAEA,OADArO,KAAKyC,MAAQ4L,EACNrO,KAEX,GAAIG,GAAKwnB,EAAKhnB,OAAS,EACnB,MACAlB,GAAOgB,GAASN,EAAIqiC,EAAI7hC,QAAU6hC,EAAIp8B,WAAWjG,IAAMsiC,GACvDhjC,MAIhB,MAAMgjC,EAAMhjC,GACR,IAAI4O,EAAQ,KACZ,IAAK,IAAIlO,EAAI,EAAGA,EAAIH,KAAKs1B,QAAQ30B,OAAQR,GAAK,EAAG,CAC7C,IAAI8B,EAAQjC,KAAKs1B,QAAQn1B,GAAIk+B,GAAO,EAChCr+B,KAAKmiC,MAAM/7B,WAAWnE,IAAUwgC,IAC5BxgC,GAASjC,KAAKmiC,MAAMxhC,OAAS,EAC7B0N,EAAQ,CAAExI,KAAM7F,KAAKs1B,QAAQn1B,EAAI,GAAI4F,GAAItG,EAAM,IAG/CO,KAAKs1B,QAAQn1B,KACbk+B,GAAO,IAGVA,IACDr+B,KAAKs1B,QAAQvnB,OAAO5N,EAAG,GACvBA,GAAK,GASb,OANIH,KAAKmiC,MAAM/7B,WAAW,IAAMq8B,IACH,GAArBziC,KAAKmiC,MAAMxhC,OACX0N,EAAQ,CAAExI,KAAMpG,EAAKsG,GAAItG,EAAM,GAE/BO,KAAKs1B,QAAQ50B,KAAK,EAAGjB,IAEtB4O,GAGM,oBAAVq0B,SACP,GAAar7B,UAAUq7B,OAAOC,UAAY,WAAc,OAAO3iC,OAEnE,MAAMuX,GAAQ,CAAE1R,MAAO,EAAGE,IAAK,EAAGsI,MAAoB,KAAKqZ,KAAK,KAC1Dkb,GAAY,MAAuB,MAAf,IAAIC,QAAkB,GAAK,KAMrD,MAAMC,GAMF,YAAYze,EAAM8d,EAAOz6B,EAAS7B,EAAO,EAAGE,EAAKse,EAAK1jB,QAclD,GAbAX,KAAK+F,GAAKA,EACV/F,KAAK+iC,QAAU,GAKf/iC,KAAKmP,MAAO,EAMZnP,KAAKyC,MAAQ8U,GACT,uBAAuBxO,KAAKo5B,GAC5B,OAAO,IAAIa,GAAsB3e,EAAM8d,EAAOz6B,EAAS7B,EAAME,GACjE/F,KAAKijC,GAAK,IAAIC,OAAOf,EAAOS,KAA0B,OAAZl7B,QAAgC,IAAZA,OAAqB,EAASA,EAAQy7B,YAAc,IAAM,KACxHnjC,KAAKgf,KAAOqF,EAAKrF,OACjB,IAAI6d,EAAYxY,EAAKF,OAAOte,GAC5B7F,KAAKojC,aAAevG,EAAUh3B,KAC9B7F,KAAKqjC,SAAWx9B,EAChB7F,KAAKsjC,QAAQtjC,KAAKojC,cAEtB,QAAQG,GACJvjC,KAAKgf,KAAK9c,KAAKqhC,GACXvjC,KAAKgf,KAAKke,UACVl9B,KAAK+iC,QAAU,IAGf/iC,KAAK+iC,QAAU/iC,KAAKgf,KAAKvc,MACrBzC,KAAKojC,aAAepjC,KAAK+iC,QAAQpiC,OAASX,KAAK+F,KAC/C/F,KAAK+iC,QAAU/iC,KAAK+iC,QAAQ9/B,MAAM,EAAGjD,KAAK+F,GAAK/F,KAAKojC,eACxDpjC,KAAKgf,KAAK9c,QAGlB,WACIlC,KAAKojC,aAAepjC,KAAKojC,aAAepjC,KAAK+iC,QAAQpiC,OAAS,EAC1DX,KAAKojC,aAAepjC,KAAK+F,GACzB/F,KAAK+iC,QAAU,GAEf/iC,KAAKsjC,QAAQ,GAKrB,OACI,IAAK,IAAItgC,EAAMhD,KAAKqjC,SAAWrjC,KAAKojC,eAAgB,CAChDpjC,KAAKijC,GAAGO,UAAYxgC,EACpB,IAAIqL,EAAQrO,KAAKqjC,UAAYrjC,KAAK+F,IAAM/F,KAAKijC,GAAGvb,KAAK1nB,KAAK+iC,SAC1D,GAAI10B,EAAO,CACP,IAAIxI,EAAO7F,KAAKojC,aAAe/0B,EAAMpM,MAAO8D,EAAKF,EAAOwI,EAAM,GAAG1N,OAIjE,GAHAX,KAAKqjC,SAAWt9B,GAAMF,GAAQE,EAAK,EAAI,GACnCF,GAAQ7F,KAAK+iC,QAAQpiC,QACrBX,KAAKi9B,WACLp3B,EAAOE,GAAMF,EAAO7F,KAAKyC,MAAMsD,GAE/B,OADA/F,KAAKyC,MAAQ,CAAEoD,OAAME,KAAIsI,SAClBrO,KAEXgD,EAAMhD,KAAKqjC,SAAWrjC,KAAKojC,iBAE1B,MAAIpjC,KAAKojC,aAAepjC,KAAK+iC,QAAQpiC,OAASX,KAAK+F,IAMpD,OADA/F,KAAKmP,MAAO,EACLnP,KALPA,KAAKi9B,WACLj6B,EAAM,KAStB,MAAMygC,GAAyB,IAAIzzB,QAEnC,MAAM0zB,GACF,YAAY79B,EAAMwe,GACdrkB,KAAK6F,KAAOA,EACZ7F,KAAKqkB,KAAOA,EAEhB,SAAW,OAAOrkB,KAAK6F,KAAO7F,KAAKqkB,KAAK1jB,OACxC,WAAW+Z,EAAK7U,EAAME,GAClB,IAAIoI,EAASs1B,GAAUxzB,IAAIyK,GAC3B,IAAKvM,GAAUA,EAAOtI,MAAQE,GAAMoI,EAAOpI,IAAMF,EAAM,CACnD,IAAI89B,EAAO,IAAID,GAAa79B,EAAM6U,EAAIyE,YAAYtZ,EAAME,IAExD,OADA09B,GAAU33B,IAAI4O,EAAKipB,GACZA,EAEX,GAAIx1B,EAAOtI,MAAQA,GAAQsI,EAAOpI,IAAMA,EACpC,OAAOoI,EACX,IAAI,KAAEkW,EAAMxe,KAAM+9B,GAAez1B,EAQjC,OAPIy1B,EAAa/9B,IACbwe,EAAO3J,EAAIyE,YAAYtZ,EAAM+9B,GAAcvf,EAC3Cuf,EAAa/9B,GAEbsI,EAAOpI,GAAKA,IACZse,GAAQ3J,EAAIyE,YAAYhR,EAAOpI,GAAIA,IACvC09B,GAAU33B,IAAI4O,EAAK,IAAIgpB,GAAaE,EAAYvf,IACzC,IAAIqf,GAAa79B,EAAMwe,EAAKphB,MAAM4C,EAAO+9B,EAAY79B,EAAK69B,KAGzE,MAAMZ,GACF,YAAY3e,EAAM8d,EAAOz6B,EAAS7B,EAAME,GACpC/F,KAAKqkB,KAAOA,EACZrkB,KAAK+F,GAAKA,EACV/F,KAAKmP,MAAO,EACZnP,KAAKyC,MAAQ8U,GACbvX,KAAKqjC,SAAWx9B,EAChB7F,KAAKijC,GAAK,IAAIC,OAAOf,EAAOS,KAA0B,OAAZl7B,QAAgC,IAAZA,OAAqB,EAASA,EAAQy7B,YAAc,IAAM,KACxHnjC,KAAK2jC,KAAOD,GAAazzB,IAAIoU,EAAMxe,EAAM7F,KAAKkiB,SAASrc,EAAO,MAElE,SAASpG,GACL,OAAOA,GAAOO,KAAK+F,GAAK/F,KAAK+F,GAAK/F,KAAKqkB,KAAKF,OAAO1kB,GAAKsG,GAE5D,OACI,OAAS,CACL,IAAI/C,EAAMhD,KAAKijC,GAAGO,UAAYxjC,KAAKqjC,SAAWrjC,KAAK2jC,KAAK99B,KACpDwI,EAAQrO,KAAKijC,GAAGvb,KAAK1nB,KAAK2jC,KAAKtf,MAUnC,GARIhW,IAAUA,EAAM,IAAMA,EAAMpM,OAASe,IACrChD,KAAKijC,GAAGO,UAAYxgC,EAAM,EAC1BqL,EAAQrO,KAAKijC,GAAGvb,KAAK1nB,KAAK2jC,KAAKtf,OAI/BhW,GAASrO,KAAK2jC,KAAK59B,GAAK/F,KAAK+F,IAAMsI,EAAMpM,MAAQoM,EAAM,GAAG1N,OAASX,KAAK2jC,KAAKtf,KAAK1jB,OAAS,KAC3F0N,EAAQ,MACRA,EAAO,CACP,IAAIxI,EAAO7F,KAAK2jC,KAAK99B,KAAOwI,EAAMpM,MAAO8D,EAAKF,EAAOwI,EAAM,GAAG1N,OAG9D,OAFAX,KAAKyC,MAAQ,CAAEoD,OAAME,KAAIsI,SACzBrO,KAAKqjC,SAAWt9B,GAAMF,GAAQE,EAAK,EAAI,GAChC/F,KAGP,GAAIA,KAAK2jC,KAAK59B,IAAM/F,KAAK+F,GAErB,OADA/F,KAAKmP,MAAO,EACLnP,KAGXA,KAAK2jC,KAAOD,GAAazzB,IAAIjQ,KAAKqkB,KAAMrkB,KAAK2jC,KAAK99B,KAAM7F,KAAKkiB,SAASliB,KAAK2jC,KAAK99B,KAA+B,EAAxB7F,KAAK2jC,KAAKtf,KAAK1jB,WAStH,SAASkjC,GAAYxzB,GACjB,IAEI,OADA,IAAI6yB,OAAO7yB,EAAQuyB,KACZ,EAEX,MAAOtoB,GACH,OAAO,GAIf,SAASwpB,GAAiB1qB,GACtB,IAAIhU,EAAQ,GAAI,QAAS,CAAEyjB,MAAO,eAAgBtX,KAAM,SACpD4W,EAAM,GAAI,OAAQ,CAClBU,MAAO,cACPkb,UAAYrrB,IACa,IAAjBA,EAAMsrB,SACNtrB,EAAMe,iBACNL,EAAKO,SAAS,CAAEM,QAASgqB,GAAa/qB,IAAG,KACzCE,EAAK8qB,SAEiB,IAAjBxrB,EAAMsrB,UACXtrB,EAAMe,iBACN0qB,MAGRC,SAAW1rB,IACPA,EAAMe,iBACN0qB,MAEL,GAAI,QAAS/qB,EAAK7Z,MAAM+yB,OAAO,cAAe,KAAMltB,GAAQ,IAAK,GAAI,SAAU,CAAEyjB,MAAO,YAAa/nB,KAAM,UAAYsY,EAAK7Z,MAAM+yB,OAAO,QAC5I,SAAS6R,IACL,IAAI91B,EAAQ,6BAA6BqZ,KAAKtiB,EAAM3C,OACpD,IAAK4L,EACD,OACJ,IAAI,MAAE9O,GAAU6Z,EAAMyjB,EAAYt9B,EAAMmb,IAAIyJ,OAAO5kB,EAAMqY,UAAUvM,KAAKgc,OACnE,CAAEgd,EAAMC,EAAIC,EAAIC,GAAWn2B,EAC5BstB,EAAM4I,GAAMA,EAAGthC,MAAM,GAAK,EAC1BihB,EAAOogB,GAAMA,EAAKzH,EAAU9M,OAChC,GAAIuU,GAAME,EAAS,CACf,IAAIC,EAAKvgB,EAAO,IACZmgB,IACAI,EAAKA,GAAc,KAARJ,GAAe,EAAI,GAAMxH,EAAU9M,OAASxwB,EAAMmb,IAAI4V,OACrEpM,EAAOnd,KAAK29B,MAAMnlC,EAAMmb,IAAI4V,MAAQmU,QAE/BH,GAAMD,IACXngB,EAAOA,GAAgB,KAARmgB,GAAe,EAAI,GAAKxH,EAAU9M,QAErD,IAAI4U,EAAUplC,EAAMmb,IAAIwJ,KAAKnd,KAAKC,IAAI,EAAGD,KAAKE,IAAI1H,EAAMmb,IAAI4V,MAAOpM,KACnE9K,EAAKO,SAAS,CACVM,QAASgqB,GAAa/qB,IAAG,GACzBtB,UAAW,OAAgBrO,OAAOo7B,EAAQ9+B,KAAOkB,KAAKC,IAAI,EAAGD,KAAKE,IAAI00B,EAAKgJ,EAAQhkC,UACnFic,gBAAgB,IAEpBxD,EAAK8qB,QAET,MAAO,CAAE/b,MAAK1oB,KAAM,IA3DH,oBAAVijC,SACPI,GAAaz7B,UAAUq7B,OAAOC,UAAYK,GAAsB37B,UAAUq7B,OAAOC,UAC7E,WAAc,OAAO3iC,OA2D7B,MAAMikC,GAA4B,OAAYzyB,SACxCozB,GAA2B,OAAWpzB,OAAO,CAC/C,SAAW,OAAO,GAClB,OAAO/O,EAAO+U,GACV,IAAK,IAAIsB,KAAKtB,EAAGyC,QACTnB,EAAEwI,GAAG2iB,MACLxhC,EAAQqW,EAAErW,OAClB,OAAOA,GAEXwqB,QAAShS,GAAK6lB,GAAUj7B,KAAKoV,EAAGuS,GAAOA,EAAMsW,GAAmB,QAc9De,GAAWzrB,IACb,IAAIsnB,EAAQD,GAASrnB,EAAM0qB,IAC3B,IAAKpD,EAAO,CACR,IAAIzmB,EAAU,CAACgqB,GAAa/qB,IAAG,IACa,MAAxCE,EAAK7Z,MAAMua,MAAM8qB,IAAa,IAC9B3qB,EAAQvZ,KAAK,OAAYmxB,aAAa3Y,GAAG,CAAC0rB,GAAaE,MAC3D1rB,EAAKO,SAAS,CAAEM,YAChBymB,EAAQD,GAASrnB,EAAM0qB,IAI3B,OAFIpD,GACAA,EAAMvY,IAAI4c,cAAc,SAASb,SAC9B,GAELY,GAA2B,OAAWvb,UAAU,CAClD,wBAAyB,CACrBa,QAAS,cACT,UAAW,CAAE4a,SAAU,UAIzBC,GAA0B,CAC5BC,2BAA2B,EAC3BC,mBAAoB,EACpBC,WAAY,KAEVC,GAA+B,OAAM7zB,OAAO,CAC9C,QAAQ9J,GACJ,OAAO,eAAcA,EAASu9B,GAAyB,CACnDC,0BAA2B,CAACx3B,EAAGC,IAAMD,GAAKC,EAC1Cw3B,mBAAoBp+B,KAAKE,IACzBm+B,WAAYr+B,KAAKE,SAU7B,SAASq+B,GAA0B59B,GAC/B,IAAI69B,EAAM,CAACC,GAAcC,IAGzB,OAFI/9B,GACA69B,EAAI7kC,KAAK2kC,GAAgBnsB,GAAGxR,IACzB69B,EAEX,MAAMG,GAAyB,OAAW1R,KAAK,CAAEnL,MAAO,sBAClD8c,GAA6B,OAAW3R,KAAK,CAAEnL,MAAO,6CACtD4c,GAAgC,OAAW1jB,UAAU,MACvD,YAAY3I,GACRpZ,KAAK2xB,YAAc3xB,KAAK4lC,QAAQxsB,GAEpC,OAAOsD,IACCA,EAAOmpB,cAAgBnpB,EAAO7E,YAAc6E,EAAOmQ,mBACnD7sB,KAAK2xB,YAAc3xB,KAAK4lC,QAAQlpB,EAAOtD,OAE/C,QAAQA,GACJ,IAAI+R,EAAO/R,EAAK7Z,MAAMkY,MAAM4tB,KACxB,MAAE9lC,GAAU6Z,EAAMkd,EAAM/2B,EAAMqY,UAClC,GAAI0e,EAAIjxB,OAAO1E,OAAS,EACpB,OAAO,OAAW6Z,KACtB,IAAsB2nB,EAAlBr8B,EAAQwwB,EAAIjrB,KAAay6B,EAAQ,KACrC,GAAIhgC,EAAMyR,MAAO,CACb,IAAK4T,EAAK+Z,0BACN,OAAO,OAAW1qB,KACtB,IAAIurB,EAAOxmC,EAAMymC,OAAOlgC,EAAMuhB,MAC9B,IAAK0e,EACD,OAAO,OAAWvrB,KACtBsrB,EAAQvmC,EAAM08B,gBAAgBn2B,EAAMuhB,MACpC8a,EAAQ5iC,EAAMw2B,SAASgQ,EAAKlgC,KAAMkgC,EAAKhgC,QAEtC,CACD,IAAIyxB,EAAM1xB,EAAMC,GAAKD,EAAMD,KAC3B,GAAI2xB,EAAMrM,EAAKga,oBAAsB3N,EAAM,IACvC,OAAO,OAAWhd,KAEtB,GADA2nB,EAAQ5iC,EAAMw2B,SAASjwB,EAAMD,KAAMC,EAAMC,IAAIkgC,QACxC9D,EACD,OAAO,OAAW3nB,KAE1B,IAAIua,EAAO,GACX,IAAK,IAAI9gB,KAAQmF,EAAK8sB,cAAe,CACjC,IAAI38B,EAAS,IAAI,GAAahK,EAAMmb,IAAKynB,EAAOluB,EAAKpO,KAAMoO,EAAKlO,IAChE,OAAQwD,EAAOrH,OAAOiN,KAAM,CACxB,IAAI,KAAEtJ,EAAI,GAAEE,GAAOwD,EAAO9G,MAC1B,KAAKqjC,IAAmB,GAARjgC,GAAaigC,EAAMvmC,EAAMw2B,SAASlwB,EAAO,EAAGA,KAAU,OAAaw6B,QAC9Et6B,GAAMxG,EAAMmb,IAAI/Z,QAAUmlC,EAAMvmC,EAAMw2B,SAAShwB,EAAIA,EAAK,KAAO,OAAas6B,SACzEyF,GAASjgC,GAAQC,EAAMD,MAAQE,GAAMD,EAAMC,GAC3CgvB,EAAKr0B,KAAKilC,GAAc7/B,MAAMD,EAAME,KAC/BF,GAAQC,EAAMC,IAAMA,GAAMD,EAAMD,OACrCkvB,EAAKr0B,KAAKglC,GAAU5/B,MAAMD,EAAME,IAChCgvB,EAAKp0B,OAASwqB,EAAKia,YACnB,OAAO,OAAW5qB,MAIlC,OAAO,OAAW1O,IAAIipB,KAE3B,CACCpD,YAAahuB,GAAKA,EAAEguB,cAElB6T,GAA4B,OAAWjc,UAAU,CACnD,qBAAsB,CAAEM,gBAAiB,aACzC,qCAAsC,CAAEA,gBAAiB,iBAGvDsc,GAAa,EAAG5mC,QAAOoa,eACzB,IAAI,UAAE/B,GAAcrY,EAChB6mC,EAAS,OAAgBx2B,OAAOgI,EAAUvS,OAAO8F,IAAIrF,GAASvG,EAAMymC,OAAOlgC,EAAMuhB,OAAS,OAAgB9d,OAAOzD,EAAMuhB,OAAQzP,EAAU4e,WAC7I,OAAI4P,EAAO3qB,GAAG7D,KAEd+B,EAASpa,EAAMmd,OAAO,CAAE9E,UAAWwuB,MAC5B,IAIX,SAASC,GAAmB9mC,EAAO4iC,GAC/B,IAAI,KAAE92B,EAAI,OAAEhG,GAAW9F,EAAMqY,UACzBmuB,EAAOxmC,EAAMymC,OAAO36B,EAAKgc,MAAOif,EAAWP,GAAQA,EAAKlgC,MAAQwF,EAAKxF,MAAQkgC,EAAKhgC,IAAMsF,EAAKtF,GACjG,IAAK,IAAIwgC,GAAS,EAAOh9B,EAAS,IAAI,GAAahK,EAAMmb,IAAKynB,EAAO98B,EAAOA,EAAO1E,OAAS,GAAGoF,MAAO,CAElG,GADAwD,EAAOrH,QACHqH,EAAO4F,KAMN,CACD,GAAIo3B,GAAUlhC,EAAO3B,KAAKoD,GAAKA,EAAEjB,MAAQ0D,EAAO9G,MAAMoD,MAClD,SACJ,GAAIygC,EAAU,CACV,IAAIP,EAAOxmC,EAAMymC,OAAOz8B,EAAO9G,MAAMoD,MACrC,IAAKkgC,GAAQA,EAAKlgC,MAAQ0D,EAAO9G,MAAMoD,MAAQkgC,EAAKhgC,IAAMwD,EAAO9G,MAAMsD,GACnE,SAER,OAAOwD,EAAO9G,MAbd,GAAI8jC,EACA,OAAO,KACXh9B,EAAS,IAAI,GAAahK,EAAMmb,IAAKynB,EAAO,EAAGp7B,KAAKC,IAAI,EAAG3B,EAAOA,EAAO1E,OAAS,GAAGkF,KAAO,IAC5F0gC,GAAS,GAkBrB,MAAMC,GAAuB,EAAGjnC,QAAOoa,eACnC,IAAI,OAAEtU,GAAW9F,EAAMqY,UACvB,GAAIvS,EAAO3B,KAAK4yB,GAAOA,EAAIzwB,OAASywB,EAAIvwB,IACpC,OAAOogC,GAAW,CAAE5mC,QAAOoa,aAC/B,IAAI8sB,EAAelnC,EAAMw2B,SAAS1wB,EAAO,GAAGQ,KAAMR,EAAO,GAAGU,IAC5D,GAAIxG,EAAMqY,UAAUvS,OAAO3B,KAAKoD,GAAKvH,EAAMw2B,SAASjvB,EAAEjB,KAAMiB,EAAEf,KAAO0gC,GACjE,OAAO,EACX,IAAI3gC,EAAQugC,GAAmB9mC,EAAOknC,GACtC,QAAK3gC,IAEL6T,EAASpa,EAAMmd,OAAO,CAClB9E,UAAWrY,EAAMqY,UAAU8uB,SAAS,OAAgB5gC,MAAMA,EAAMD,KAAMC,EAAMC,KAAK,GACjFkU,QAAS,OAAW2C,eAAe9W,EAAMC,QAEtC,IAGL4gC,GAAiC,OAAMn1B,OAAO,CAChD,QAAQuF,GACJ,IAAIuD,EACJ,MAAO,CACHtY,IAAK+U,EAAQxU,OAAO,CAACirB,EAAKrC,IAAiB,OAARqC,QAAwB,IAARA,EAAiBA,EAAMrC,EAAKnpB,SAAKyP,KAAc,EAClGm1B,cAAe7vB,EAAQxU,OAAO,CAACirB,EAAKrC,IAAiB,OAARqC,QAAwB,IAARA,EAAiBA,EAAOrC,EAAKyb,eAAiBzb,EAAK0b,eAAYp1B,KAAc,EAC1Iq1B,aAA0D,QAA3CxsB,EAAKvD,EAAQnD,KAAK4b,GAAKA,EAAEsX,oBAAiC,IAAPxsB,OAAgB,EAASA,EAAGwsB,cAAgB,CAAC1tB,GAAQ,IAAI,GAAYA,QAanJ,MAAM2tB,GAIF,YAAYzzB,GACRtT,KAAK0kB,OAASpR,EAAOoR,OACrB1kB,KAAK4mC,gBAAkBtzB,EAAOszB,cAC9B5mC,KAAKgnC,SAAW1zB,EAAO0zB,OACvBhnC,KAAK8yB,QAAUxf,EAAOwf,SAAW,GACjC9yB,KAAKinC,QAAUjnC,KAAK0kB,UAAY1kB,KAAKgnC,QAAUnD,GAAY7jC,KAAK0kB,SAKpE,GAAGxgB,GACC,OAAOlE,KAAK0kB,QAAUxgB,EAAMwgB,QAAU1kB,KAAK8yB,SAAW5uB,EAAM4uB,SACxD9yB,KAAK4mC,eAAiB1iC,EAAM0iC,eAAiB5mC,KAAKgnC,QAAU9iC,EAAM8iC,OAK1E,SACI,OAAOhnC,KAAKgnC,OAAS,IAAIE,GAAYlnC,MAAQ,IAAImnC,GAAYnnC,OAGrE,MAAMonC,GACF,YAAY52B,GACRxQ,KAAKwQ,KAAOA,GAGpB,MAAM22B,WAAoBC,GACtB,YAAY52B,GACRC,MAAMD,GACNxQ,KAAKqnC,SAAW72B,EAAKkU,OAAOoO,QAAQ,eAAgB,CAAC5yB,EAAGke,IAAa,KAANA,EAAY,KAAa,KAANA,EAAY,KAAa,KAANA,EAAY,KAAO,MAE5H,OAAO1D,EAAK7U,EAAO,EAAGE,EAAK2U,EAAI/Z,QAC3B,OAAO,IAAI,GAAa+Z,EAAK1a,KAAKqnC,SAAUxhC,EAAME,EAAI/F,KAAKwQ,KAAKo2B,mBAAgBn1B,EAAYgZ,GAAKA,EAAE6c,eAEvG,UAAU5sB,EAAK6sB,EAASC,GACpB,IAAIj+B,EAASvJ,KAAKuJ,OAAOmR,EAAK8sB,GAAOlF,kBAGrC,OAFI/4B,EAAO4F,OACP5F,EAASvJ,KAAKuJ,OAAOmR,EAAK,EAAG6sB,GAASjF,mBACnC/4B,EAAO4F,KAAO,KAAO5F,EAAO9G,MAIvC,iBAAiBiY,EAAK7U,EAAME,GACxB,IAAK,IAAItG,EAAMsG,IAAM,CACjB,IAAItF,EAAQsG,KAAKC,IAAInB,EAAMpG,EAAM,IAAwBO,KAAKqnC,SAAS1mC,QACnE4I,EAASvJ,KAAKuJ,OAAOmR,EAAKja,EAAOhB,GAAMqG,EAAQ,KACnD,OAAQyD,EAAO+4B,kBAAkBnzB,KAC7BrJ,EAAQyD,EAAO9G,MACnB,GAAIqD,EACA,OAAOA,EACX,GAAIrF,GAASoF,EACT,OAAO,KACXpG,GAAO,KAGf,UAAUib,EAAK6sB,EAASC,GACpB,OAAOxnC,KAAKynC,iBAAiB/sB,EAAK,EAAG6sB,IACjCvnC,KAAKynC,iBAAiB/sB,EAAK8sB,EAAO9sB,EAAI/Z,QAE9C,eAAe+mC,GAAW,OAAO1nC,KAAKwQ,KAAKsiB,QAC3C,SAASpY,EAAKitB,GACV,IAAIp+B,EAASvJ,KAAKuJ,OAAOmR,GAAMrV,EAAS,GACxC,OAAQkE,EAAOrH,OAAOiN,KAAM,CACxB,GAAI9J,EAAO1E,QAAUgnC,EACjB,OAAO,KACXtiC,EAAO3E,KAAK6I,EAAO9G,OAEvB,OAAO4C,EAEX,UAAUqV,EAAK7U,EAAME,EAAI4Y,GACrB,IAAIpV,EAASvJ,KAAKuJ,OAAOmR,EAAK3T,KAAKC,IAAI,EAAGnB,EAAO7F,KAAKqnC,SAAS1mC,QAASoG,KAAKE,IAAIlB,EAAK/F,KAAKqnC,SAAS1mC,OAAQ+Z,EAAI/Z,SAChH,OAAQ4I,EAAOrH,OAAOiN,KAClBwP,EAAIpV,EAAO9G,MAAMoD,KAAM0D,EAAO9G,MAAMsD,KAGhD,MAAMmhC,WAAoBE,GACtB,OAAO1sB,EAAK7U,EAAO,EAAGE,EAAK2U,EAAI/Z,QAC3B,OAAO,IAAImiC,GAAapoB,EAAK1a,KAAKwQ,KAAKkU,OAAQ1kB,KAAKwQ,KAAKo2B,mBAAgBn1B,EAAY,CAAE0xB,YAAY,GAAQt9B,EAAME,GAErH,UAAU2U,EAAK6sB,EAASC,GACpB,IAAIj+B,EAASvJ,KAAKuJ,OAAOmR,EAAK8sB,GAAOtlC,OAGrC,OAFIqH,EAAO4F,OACP5F,EAASvJ,KAAKuJ,OAAOmR,EAAK,EAAG6sB,GAASrlC,QACnCqH,EAAO4F,KAAO,KAAO5F,EAAO9G,MAEvC,iBAAiBiY,EAAK7U,EAAME,GACxB,IAAK,IAAIlE,EAAO,GAAIA,IAAQ,CACxB,IAAIpB,EAAQsG,KAAKC,IAAInB,EAAME,EAAY,IAAPlE,GAC5B0H,EAASvJ,KAAKuJ,OAAOmR,EAAKja,EAAOsF,GAAKD,EAAQ,KAClD,OAAQyD,EAAOrH,OAAOiN,KAClBrJ,EAAQyD,EAAO9G,MACnB,GAAIqD,IAAUrF,GAASoF,GAAQC,EAAMD,KAAOpF,EAAQ,IAChD,OAAOqF,EACX,GAAIrF,GAASoF,EACT,OAAO,MAGnB,UAAU6U,EAAK6sB,EAASC,GACpB,OAAOxnC,KAAKynC,iBAAiB/sB,EAAK,EAAG6sB,IACjCvnC,KAAKynC,iBAAiB/sB,EAAK8sB,EAAO9sB,EAAI/Z,QAE9C,eAAeiD,GACX,OAAO5D,KAAKwQ,KAAKsiB,QAAQA,QAAQ,eAAgB,CAAC1C,EAAGjwB,IAAW,KAALA,EAAW,IAC3D,KAALA,EAAWyD,EAAOyK,MAAM,GACf,KAALlO,IAAaA,EAAIyD,EAAOyK,MAAM1N,OAASiD,EAAOyK,MAAMlO,GAChDiwB,GAElB,SAAS1V,EAAKitB,GACV,IAAIp+B,EAASvJ,KAAKuJ,OAAOmR,GAAMrV,EAAS,GACxC,OAAQkE,EAAOrH,OAAOiN,KAAM,CACxB,GAAI9J,EAAO1E,QAAUgnC,EACjB,OAAO,KACXtiC,EAAO3E,KAAK6I,EAAO9G,OAEvB,OAAO4C,EAEX,UAAUqV,EAAK7U,EAAME,EAAI4Y,GACrB,IAAIpV,EAASvJ,KAAKuJ,OAAOmR,EAAK3T,KAAKC,IAAI,EAAGnB,EAAO,KAA4BkB,KAAKE,IAAIlB,EAAK,IAA2B2U,EAAI/Z,SAC1H,OAAQ4I,EAAOrH,OAAOiN,KAClBwP,EAAIpV,EAAO9G,MAAMoD,KAAM0D,EAAO9G,MAAMsD,KAMhD,MAAM6hC,GAA8B,OAAYp2B,SAC1Cq2B,GAA2B,OAAYr2B,SACvCs2B,GAA2B,OAAWt2B,OAAO,CAC/C,OAAOjS,GACH,OAAO,IAAIwoC,GAAYC,GAAazoC,GAAOqQ,SAAUq4B,KAEzD,OAAOxlC,EAAO+U,GACV,IAAK,IAAIwnB,KAAUxnB,EAAGyC,QACd+kB,EAAO1d,GAAGsmB,IACVnlC,EAAQ,IAAIslC,GAAY/I,EAAOv8B,MAAMmN,SAAUnN,EAAMi+B,OAChD1B,EAAO1d,GAAGumB,MACfplC,EAAQ,IAAIslC,GAAYtlC,EAAM0/B,MAAOnD,EAAOv8B,MAAQwlC,GAAoB,OAEhF,OAAOxlC,GAEXwqB,QAAShS,GAAK6lB,GAAUj7B,KAAKoV,EAAGuS,GAAOA,EAAIkT,SAS/C,MAAMqH,GACF,YAAY5F,EAAOzB,GACf1gC,KAAKmiC,MAAQA,EACbniC,KAAK0gC,MAAQA,GAGrB,MAAMwH,GAAyB,OAAWlU,KAAK,CAAEnL,MAAO,mBAAqBsf,GAAiC,OAAWnU,KAAK,CAAEnL,MAAO,2CACjIuf,GAAiC,OAAWrmB,UAAU,MACxD,YAAY3I,GACRpZ,KAAKoZ,KAAOA,EACZpZ,KAAK2xB,YAAc3xB,KAAKqoC,UAAUjvB,EAAK7Z,MAAMua,MAAMguB,KAEvD,OAAOprB,GACH,IAAInd,EAAQmd,EAAOnd,MAAMua,MAAMguB,KAC3BvoC,GAASmd,EAAOtE,WAAW0B,MAAMguB,KAAgBprB,EAAO7E,YAAc6E,EAAOmpB,gBAC7E7lC,KAAK2xB,YAAc3xB,KAAKqoC,UAAU9oC,IAE1C,WAAU,MAAE4iC,EAAK,MAAEzB,IACf,IAAKA,IAAUyB,EAAM3xB,KAAKy2B,MACtB,OAAO,OAAWzsB,KACtB,IAAI,KAAEpB,GAASpZ,KACX+zB,EAAU,IAAI,QAClB,IAAK,IAAI5zB,EAAI,EAAGkF,EAAS+T,EAAK8sB,cAAejV,EAAI5rB,EAAO1E,OAAQR,EAAI8wB,EAAG9wB,IAAK,CACxE,IAAI,KAAE0F,EAAI,GAAEE,GAAOV,EAAOlF,GAC1B,MAAOA,EAAI8wB,EAAI,GAAKlrB,EAAKV,EAAOlF,EAAI,GAAG0F,KAAO,IAC1CE,EAAKV,IAASlF,GAAG4F,GACrBo8B,EAAMkG,UAAUjvB,EAAK7Z,MAAMmb,IAAK7U,EAAME,EAAI,CAACF,EAAME,KAC7C,IAAIuiC,EAAWlvB,EAAK7Z,MAAMqY,UAAUvS,OAAO3B,KAAKoD,GAAKA,EAAEjB,MAAQA,GAAQiB,EAAEf,IAAMA,GAC/EguB,EAAQpV,IAAI9Y,EAAME,EAAIuiC,EAAWH,GAAoBD,MAG7D,OAAOnU,EAAQrH,WAEpB,CACCiF,YAAahuB,GAAKA,EAAEguB,cAExB,SAAS4W,GAActtB,GACnB,OAAO7B,IACH,IAAI7Z,EAAQ6Z,EAAK7Z,MAAMua,MAAMguB,IAAa,GAC1C,OAAOvoC,GAASA,EAAM4iC,MAAM3xB,KAAKy2B,MAAQhsB,EAAE7B,EAAM7Z,GAASipC,GAAgBpvB,IASlF,MAAMqvB,GAAwBF,GAAc,CAACnvB,GAAQ+oB,YACjD,IAAI,KAAEt8B,EAAI,GAAEE,GAAOqT,EAAK7Z,MAAMqY,UAAUvM,KACpCnJ,EAAOigC,EAAMuG,UAAUtvB,EAAK7Z,MAAMmb,IAAK7U,EAAME,GACjD,SAAK7D,GAAQA,EAAK2D,MAAQA,GAAQ3D,EAAK6D,IAAMA,KAE7CqT,EAAKO,SAAS,CACV/B,UAAW,CAAEwhB,OAAQl3B,EAAK2D,KAAMwhB,KAAMnlB,EAAK6D,IAC3C6W,gBAAgB,EAChB3C,QAAS0uB,GAAcvvB,EAAMlX,GAC7B0W,UAAW,mBAER,KAOLgwB,GAA4BL,GAAc,CAACnvB,GAAQ+oB,YACrD,IAAI,MAAE5iC,GAAU6Z,GAAM,KAAEvT,EAAI,GAAEE,GAAOxG,EAAMqY,UAAUvM,KACjDvF,EAAQq8B,EAAM0G,UAAUtpC,EAAMmb,IAAK7U,EAAME,GAC7C,QAAKD,IAELsT,EAAKO,SAAS,CACV/B,UAAW,CAAEwhB,OAAQtzB,EAAMD,KAAMwhB,KAAMvhB,EAAMC,IAC7C6W,gBAAgB,EAChB3C,QAAS0uB,GAAcvvB,EAAMtT,GAC7B8S,UAAW,mBAER,KAKLkwB,GAA6BP,GAAc,CAACnvB,GAAQ+oB,YACtD,IAAI98B,EAAS88B,EAAM4G,SAAS3vB,EAAK7Z,MAAMmb,IAAK,KAC5C,SAAKrV,IAAWA,EAAO1E,UAEvByY,EAAKO,SAAS,CACV/B,UAAW,OAAgBhI,OAAOvK,EAAO8F,IAAIrE,GAAK,OAAgBhB,MAAMgB,EAAEjB,KAAMiB,EAAEf,MAClF6S,UAAW,2BAER,KAKLowB,GAAyB,EAAGzpC,QAAOoa,eACrC,IAAI2c,EAAM/2B,EAAMqY,UAChB,GAAI0e,EAAIjxB,OAAO1E,OAAS,GAAK21B,EAAIjrB,KAAKkM,MAClC,OAAO,EACX,IAAI,KAAE1R,EAAI,GAAEE,GAAOuwB,EAAIjrB,KACnBhG,EAAS,GAAIgG,EAAO,EACxB,IAAK,IAAItJ,EAAM,IAAI,GAAaxC,EAAMmb,IAAKnb,EAAMw2B,SAASlwB,EAAME,KAAOhE,EAAIG,OAAOiN,MAAO,CACrF,GAAI9J,EAAO1E,OAAS,IAChB,OAAO,EACPoB,EAAIU,MAAMoD,MAAQA,IAClBwF,EAAOhG,EAAO1E,QAClB0E,EAAO3E,KAAK,OAAgBoF,MAAM/D,EAAIU,MAAMoD,KAAM9D,EAAIU,MAAMsD,KAMhE,OAJA4T,EAASpa,EAAMmd,OAAO,CAClB9E,UAAW,OAAgBhI,OAAOvK,EAAQgG,GAC1CuN,UAAW,4BAER,GAKLqwB,GAA2BV,GAAc,CAACnvB,GAAQ+oB,YACpD,IAAI,MAAE5iC,GAAU6Z,GAAM,KAAEvT,EAAI,GAAEE,GAAOxG,EAAMqY,UAAUvM,KACrD,GAAI9L,EAAMqa,SACN,OAAO,EACX,IAAI1X,EAAOigC,EAAMuG,UAAUnpC,EAAMmb,IAAK7U,EAAMA,GAC5C,IAAK3D,EACD,OAAO,EACX,IAAkB0V,EAAWsxB,EAAzB/xB,EAAU,GAMd,GALIjV,EAAK2D,MAAQA,GAAQ3D,EAAK6D,IAAMA,IAChCmjC,EAAc3pC,EAAM4pC,OAAOhH,EAAMiH,eAAelnC,IAChDiV,EAAQzW,KAAK,CAAEmF,KAAM3D,EAAK2D,KAAME,GAAI7D,EAAK6D,GAAIwJ,OAAQ25B,IACrDhnC,EAAOigC,EAAMuG,UAAUnpC,EAAMmb,IAAKxY,EAAK2D,KAAM3D,EAAK6D,KAElD7D,EAAM,CACN,IAAIc,EAAwB,GAAlBmU,EAAQxW,QAAewW,EAAQ,GAAGtR,MAAQ3D,EAAK6D,GAAK,EAAI7D,EAAK6D,GAAK7D,EAAK2D,KAAOqjC,EAAYvoC,OACpGiX,EAAY,CAAEwhB,OAAQl3B,EAAK2D,KAAO7C,EAAKqkB,KAAMnlB,EAAK6D,GAAK/C,GAQ3D,OANAoW,EAAKO,SAAS,CACVxC,UAASS,YACTgF,iBAAkBhF,EAClBqC,QAAS/X,EAAOymC,GAAcvvB,EAAMlX,QAAQuP,EAC5CmH,UAAW,mBAER,IAMLywB,GAA0Bd,GAAc,CAACnvB,GAAQ+oB,YACnD,GAAI/oB,EAAK7Z,MAAMqa,SACX,OAAO,EACX,IAAIzC,EAAUgrB,EAAM4G,SAAS3vB,EAAK7Z,MAAMmb,IAAK,KAAKvP,IAAIkD,IAClD,IAAI,KAAExI,EAAI,GAAEE,GAAOsI,EACnB,MAAO,CAAExI,OAAME,KAAIwJ,OAAQ4yB,EAAMiH,eAAe/6B,MAEpD,QAAK8I,EAAQxW,SAEbyY,EAAKO,SAAS,CACVxC,UACAyB,UAAW,uBAER,KAEX,SAASqvB,GAAkB7uB,GACvB,OAAOA,EAAK7Z,MAAMkY,MAAMkvB,IAAmBG,YAAY1tB,GAE3D,SAAS4uB,GAAazoC,EAAOgI,GACzB,IAAI+S,EACJ,IAAIgc,EAAM/2B,EAAMqY,UAAUvM,KACtBi+B,EAAUhT,EAAI/e,OAAS+e,EAAIvwB,GAAKuwB,EAAIzwB,KAAO,IAAM,GAAKtG,EAAMw2B,SAASO,EAAIzwB,KAAMywB,EAAIvwB,IACnF6gC,EAAsG,QAArFtsB,EAAkB,OAAb/S,QAAkC,IAAbA,OAAsB,EAASA,EAASq/B,qBAAkC,IAAPtsB,EAAgBA,EAAK/a,EAAMkY,MAAMkvB,IAAmBC,cACtK,OAAOr/B,IAAa+hC,EAAU/hC,EAAW,IAAIw/B,GAAY,CAAEriB,OAAQ4kB,EAAQxW,QAAQ,MAAO,OAAQ8T,kBAKtG,MAAM4B,GAAkBpvB,IACpB,IAAI7Z,EAAQ6Z,EAAK7Z,MAAMua,MAAMguB,IAAa,GAC1C,GAAIvoC,GAASA,EAAMmhC,MAAO,CACtB,IAAIA,EAAQD,GAASrnB,EAAM6uB,IAC3B,IAAKvH,EACD,OAAO,EACX,IAAI6I,EAAc7I,EAAMvY,IAAI4c,cAAc,iBAC1C,GAAIwE,GAAenwB,EAAKowB,KAAKC,cAAe,CACxC,IAAItH,EAAQ6F,GAAa5uB,EAAK7Z,MAAOA,EAAM4iC,MAAM3xB,MAC7C2xB,EAAM8E,OACN7tB,EAAKO,SAAS,CAAEM,QAAS2tB,GAAe1uB,GAAGipB,KAC/CoH,EAAYrF,QACZqF,EAAYG,eAIhBtwB,EAAKO,SAAS,CAAEM,QAAS,CACjB4tB,GAAY3uB,IAAG,GACf3Z,EAAQqoC,GAAe1uB,GAAG8uB,GAAa5uB,EAAK7Z,MAAOA,EAAM4iC,MAAM3xB,OAAS,OAAYqhB,aAAa3Y,GAAGywB,OAGhH,OAAO,GAKLC,GAAmBxwB,IACrB,IAAI7Z,EAAQ6Z,EAAK7Z,MAAMua,MAAMguB,IAAa,GAC1C,IAAKvoC,IAAUA,EAAMmhC,MACjB,OAAO,EACX,IAAIA,EAAQD,GAASrnB,EAAM6uB,IAI3B,OAHIvH,GAASA,EAAMvY,IAAI0hB,SAASzwB,EAAKowB,KAAKC,gBACtCrwB,EAAK8qB,QACT9qB,EAAKO,SAAS,CAAEM,QAAS4tB,GAAY3uB,IAAG,MACjC,GAWL4wB,GAAe,CACjB,CAAEhtB,IAAK,QAASC,IAAKyrB,GAAiBuB,MAAO,uBAC7C,CAAEjtB,IAAK,KAAMC,IAAK0rB,GAAUjmC,MAAOomC,GAAcmB,MAAO,sBAAuBtwB,gBAAgB,GAC/F,CAAEqD,IAAK,QAASC,IAAK0rB,GAAUjmC,MAAOomC,GAAcmB,MAAO,sBAAuBtwB,gBAAgB,GAClG,CAAEqD,IAAK,SAAUC,IAAK6sB,GAAkBG,MAAO,uBAC/C,CAAEjtB,IAAK,cAAeC,IAAKisB,IAC3B,CAAElsB,IAAK,QAASC,IAAK8nB,IACrB,CAAE/nB,IAAK,QAASC,IAAKypB,GAAsB/sB,gBAAgB,IAE/D,MAAM,GACF,YAAYL,GACRpZ,KAAKoZ,KAAOA,EACZ,IAAI+oB,EAAQniC,KAAKmiC,MAAQ/oB,EAAK7Z,MAAMua,MAAMguB,IAAa3F,MAAM3xB,KAgC7D,SAASw5B,EAAOz4B,EAAMyhB,EAASiX,GAC3B,OAAO,GAAI,SAAU,CAAEphB,MAAO,YAAatX,OAAMyhB,UAASlyB,KAAM,UAAYmpC,GAhChFjqC,KAAKkqC,OAASlqC,KAAKkqC,OAAO9nB,KAAKpiB,MAC/BA,KAAKmqC,YAAc,GAAI,QAAS,CAC5B1nC,MAAO0/B,EAAMzd,OACb0lB,YAAa9X,GAAOlZ,EAAM,QAC1B,aAAckZ,GAAOlZ,EAAM,QAC3ByP,MAAO,eACPtX,KAAM,SACN84B,SAAUrqC,KAAKkqC,OACfI,QAAStqC,KAAKkqC,SAElBlqC,KAAKuqC,aAAe,GAAI,QAAS,CAC7B9nC,MAAO0/B,EAAMrP,QACbsX,YAAa9X,GAAOlZ,EAAM,WAC1B,aAAckZ,GAAOlZ,EAAM,WAC3ByP,MAAO,eACPtX,KAAM,UACN84B,SAAUrqC,KAAKkqC,OACfI,QAAStqC,KAAKkqC,SAElBlqC,KAAKwqC,UAAY,GAAI,QAAS,CAC1B1pC,KAAM,WACNyQ,KAAM,OACNk5B,QAAStI,EAAMyE,cACfyD,SAAUrqC,KAAKkqC,SAEnBlqC,KAAK0qC,QAAU,GAAI,QAAS,CACxB5pC,KAAM,WACNyQ,KAAM,KACNk5B,QAAStI,EAAM6E,OACfqD,SAAUrqC,KAAKkqC,SAKnBlqC,KAAKmoB,IAAM,GAAI,MAAO,CAAE4b,UAAYjrB,GAAM9Y,KAAK2qC,QAAQ7xB,GAAI+P,MAAO,aAAe,CAC7E7oB,KAAKmqC,YACLH,EAAO,OAAQ,IAAMvB,GAASrvB,GAAO,CAACkZ,GAAOlZ,EAAM,UACnD4wB,EAAO,OAAQ,IAAMpB,GAAaxvB,GAAO,CAACkZ,GAAOlZ,EAAM,cACvD4wB,EAAO,SAAU,IAAMlB,GAAc1vB,GAAO,CAACkZ,GAAOlZ,EAAM,SAC1D,GAAI,QAAS,KAAM,CAACpZ,KAAKwqC,UAAWlY,GAAOlZ,EAAM,gBACjD,GAAI,QAAS,KAAM,CAACpZ,KAAK0qC,QAASpY,GAAOlZ,EAAM,eAC5CA,EAAK7Z,MAAMqa,SAAW,GAAK,CAC1B,GAAI,MACJ5Z,KAAKuqC,aACLP,EAAO,UAAW,IAAMf,GAAY7vB,GAAO,CAACkZ,GAAOlZ,EAAM,aACzD4wB,EAAO,aAAc,IAAMX,GAAWjwB,GAAO,CAACkZ,GAAOlZ,EAAM,iBAC3D,GAAI,SAAU,CACV7H,KAAM,QACNyhB,QAAS,IAAM4W,GAAiBxwB,GAChC,aAAckZ,GAAOlZ,EAAM,SAC3BtY,KAAM,UACP,CAAC,SAIhB,SACI,IAAIqhC,EAAQ,IAAI4E,GAAY,CACxBriB,OAAQ1kB,KAAKmqC,YAAY1nC,MACzBmkC,cAAe5mC,KAAKwqC,UAAUC,QAC9BzD,OAAQhnC,KAAK0qC,QAAQD,QACrB3X,QAAS9yB,KAAKuqC,aAAa9nC,QAE1B0/B,EAAM1mB,GAAGzb,KAAKmiC,SACfniC,KAAKmiC,MAAQA,EACbniC,KAAKoZ,KAAKO,SAAS,CAAEM,QAAS2tB,GAAe1uB,GAAGipB,MAGxD,QAAQrpB,GACA,eAAiB9Y,KAAKoZ,KAAMN,EAAG,gBAC/BA,EAAEW,iBAEgB,IAAbX,EAAEkrB,SAAiBlrB,EAAE/U,QAAU/D,KAAKmqC,aACzCrxB,EAAEW,kBACDX,EAAE8xB,SAAWhC,GAAeH,IAAUzoC,KAAKoZ,OAE1B,IAAbN,EAAEkrB,SAAiBlrB,EAAE/U,QAAU/D,KAAKuqC,eACzCzxB,EAAEW,iBACFwvB,GAAYjpC,KAAKoZ,OAGzB,OAAOsD,GACH,IAAK,IAAIlF,KAAMkF,EAAOmuB,aAClB,IAAK,IAAI7L,KAAUxnB,EAAGyC,QACd+kB,EAAO1d,GAAGsmB,MAAoB5I,EAAOv8B,MAAMgZ,GAAGzb,KAAKmiC,QACnDniC,KAAK8qC,SAAS9L,EAAOv8B,OAGrC,SAAS0/B,GACLniC,KAAKmiC,MAAQA,EACbniC,KAAKmqC,YAAY1nC,MAAQ0/B,EAAMzd,OAC/B1kB,KAAKuqC,aAAa9nC,MAAQ0/B,EAAMrP,QAChC9yB,KAAKwqC,UAAUC,QAAUtI,EAAMyE,cAC/B5mC,KAAK0qC,QAAQD,QAAUtI,EAAM6E,OAEjC,QACIhnC,KAAKmqC,YAAYT,SAErB,UAAY,OAAO,GACnB,UAAY,OAAO1pC,KAAKoZ,KAAK7Z,MAAMkY,MAAMkvB,IAAmB3kC,KAEhE,SAASswB,GAAOlZ,EAAMkZ,GAAU,OAAOlZ,EAAK7Z,MAAM+yB,OAAOA,GACzD,MAAMyY,GAAiB,GACjBC,GAAQ,cACd,SAASrC,GAAcvvB,GAAM,KAAEvT,EAAI,GAAEE,IACjC,IAAIyhB,EAAYpO,EAAK7Z,MAAMmb,IAAIyJ,OAAOte,GAAMA,KAAMsgB,EAAU/M,EAAK7Z,MAAMmb,IAAIyJ,OAAOpe,GAAIA,GAClFtF,EAAQsG,KAAKC,IAAIwgB,EAAW3hB,EAAOklC,IAAiBnpC,EAAMmF,KAAKE,IAAIkf,EAASpgB,EAAKglC,IACjF1mB,EAAOjL,EAAK7Z,MAAMw2B,SAASt1B,EAAOmB,GACtC,GAAInB,GAAS+mB,EACT,IAAK,IAAIrnB,EAAI,EAAGA,EAAI4qC,GAAgB5qC,IAChC,IAAK6qC,GAAMjiC,KAAKsb,EAAKlkB,EAAI,KAAO6qC,GAAMjiC,KAAKsb,EAAKlkB,IAAK,CACjDkkB,EAAOA,EAAKphB,MAAM9C,GAClB,MAGZ,GAAIyB,GAAOukB,EACP,IAAK,IAAIhmB,EAAIkkB,EAAK1jB,OAAS,EAAGR,EAAIkkB,EAAK1jB,OAASoqC,GAAgB5qC,IAC5D,IAAK6qC,GAAMjiC,KAAKsb,EAAKlkB,EAAI,KAAO6qC,GAAMjiC,KAAKsb,EAAKlkB,IAAK,CACjDkkB,EAAOA,EAAKphB,MAAM,EAAG9C,GACrB,MAGZ,OAAO,OAAWkyB,SAASnZ,GAAG,GAAGE,EAAK7Z,MAAM+yB,OAAO,qBAAqBjO,KAAQjL,EAAK7Z,MAAM+yB,OAAO,cAAclZ,EAAK7Z,MAAMmb,IAAIyJ,OAAOte,GAAMkqB,UAEhJ,MAAM,GAAyB,OAAWxG,UAAU,CAChD,sBAAuB,CACnBa,QAAS,cACTkB,SAAU,WACV,iBAAkB,CACdA,SAAU,WACVtpB,IAAK,IACLsrB,MAAO,MACPzD,gBAAiB,UACjBsK,OAAQ,OACR8W,KAAM,UACN7gB,QAAS,EACTiK,OAAQ,GAEZ,6BAA8B,CAC1BA,OAAQ,oBAEZ,yBAA0B,CACtB6W,YAAa,QAEjB,UAAW,CACPlG,SAAU,MACVza,WAAY,QAGpB,yBAA0B,CAAEV,gBAAiB,aAC7C,wBAAyB,CAAEA,gBAAiB,aAC5C,kCAAmC,CAAEA,gBAAiB,aACtD,iCAAkC,CAAEA,gBAAiB,eAEnD8f,GAAmB,CACrB7B,GACa,OAAKqD,OAAO/C,IACzB,I,iBCpjCJ,MAAM,GAMF,YAIA7oC,EAIAE,EAOA2rC,GACIprC,KAAKT,MAAQA,EACbS,KAAKP,IAAMA,EACXO,KAAKorC,SAAWA,EAIhBprC,KAAKqrC,eAAiB,GAM1B,YAAY/8B,GACR,IAAI5I,EAAQ+X,EAAWzd,KAAKT,OAAOwlB,aAAa/kB,KAAKP,KAAM,GAC3D,MAAOiG,GAAS4I,EAAMqD,QAAQjM,EAAM6L,MAAQ,EACxC7L,EAAQA,EAAM3F,OAClB,OAAO2F,EAAQ,CAAEG,KAAMH,EAAMG,KAAME,GAAI/F,KAAKP,IACxC4kB,KAAMrkB,KAAKT,MAAMw2B,SAASrwB,EAAMG,KAAM7F,KAAKP,KAC3CqB,KAAM4E,EAAM5E,MAAS,KAM7B,YAAYwqC,GACR,IAAIpnB,EAAOlkB,KAAKT,MAAMmb,IAAIyJ,OAAOnkB,KAAKP,KAClCgB,EAAQsG,KAAKC,IAAIkd,EAAKre,KAAM7F,KAAKP,IAAM,KACvC+iC,EAAMte,EAAKG,KAAKphB,MAAMxC,EAAQyjB,EAAKre,KAAM7F,KAAKP,IAAMykB,EAAKre,MACzD8N,EAAQ6uB,EAAI9d,OAAO6mB,GAAaD,GAAM,IAC1C,OAAO33B,EAAQ,EAAI,KAAO,CAAE9N,KAAMpF,EAAQkT,EAAO5N,GAAI/F,KAAKP,IAAK4kB,KAAMme,EAAIv/B,MAAM0Q,IAMnF,cAAgB,OAA8B,MAAvB3T,KAAKqrC,eAM5B,iBAAiBvqC,EAAM0qC,GACP,SAAR1qC,GAAmBd,KAAKqrC,gBACxBrrC,KAAKqrC,eAAe3qC,KAAK8qC,IAGrC,SAASC,GAAMC,GACX,IAAI/H,EAAO5yB,OAAOC,KAAK06B,GAAOC,KAAK,IAC/BC,EAAQ,KAAK7iC,KAAK46B,GAGtB,OAFIiI,IACAjI,EAAOA,EAAK7Q,QAAQ,MAAO,KACxB,IAAI8Y,EAAQ,MAAQ,KAAKjI,EAAK7Q,QAAQ,WAAY,WAE7D,SAAS+Y,GAAYnkC,GACjB,IAAI0d,EAAQrU,OAAOnB,OAAO,MAAOyI,EAAOtH,OAAOnB,OAAO,MACtD,IAAK,IAAI,MAAEk8B,KAAWpkC,EAAS,CAC3B0d,EAAM0mB,EAAM,KAAM,EAClB,IAAK,IAAI3rC,EAAI,EAAGA,EAAI2rC,EAAMnrC,OAAQR,IAC9BkY,EAAKyzB,EAAM3rC,KAAM,EAEzB,IAAIkQ,EAASo7B,GAAMrmB,GAASqmB,GAAMpzB,GAAQ,KAC1C,MAAO,CAAC,IAAI6qB,OAAO,IAAM7yB,GAAS,IAAI6yB,OAAO7yB,IAMjD,SAAS07B,GAAiBC,GACtB,IAAItkC,EAAUskC,EAAK7gC,IAAI8gC,GAAiB,iBAALA,EAAgB,CAAEH,MAAOG,GAAMA,IAC7DxY,EAAMplB,GAAS3G,EAAQwkC,MAAMD,GAAK,QAAQljC,KAAKkjC,EAAEH,QAAU,CAAC,OAAQ,QAAUD,GAAYnkC,GAC/F,OAAQnH,IACJ,IAAImF,EAAQnF,EAAQ4rC,YAAY99B,GAChC,OAAO3I,GAASnF,EAAQ6qC,SAAW,CAAEvlC,KAAMH,EAAQA,EAAMG,KAAOtF,EAAQd,IAAKiI,UAAS+rB,QAAS,MA2BvG,MAAM2Y,GACF,YAAYC,EAAYh8B,EAAQhC,GAC5BrO,KAAKqsC,WAAaA,EAClBrsC,KAAKqQ,OAASA,EACdrQ,KAAKqO,MAAQA,GAGrB,SAAS,GAAI9O,GAAS,OAAOA,EAAMqY,UAAUvM,KAAKgc,KAGlD,SAASkkB,GAAaD,EAAM7qC,GACxB,IAAI6Z,EACJ,IAAI,OAAEjK,GAAWi7B,EACbgB,EAAW7rC,GAAsB,KAAb4P,EAAO,GAAWk8B,EAAsC,KAA7Bl8B,EAAOA,EAAO1P,OAAS,GAC1E,OAAK2rC,GAAaC,EAEX,IAAIrJ,OAAO,GAAGoJ,EAAW,IAAM,QAAQj8B,KAAUk8B,EAAS,IAAM,KAA4B,QAArBjyB,EAAKgxB,EAAKjnC,aAA0B,IAAPiW,EAAgBA,EAAMgxB,EAAKnI,WAAa,IAAM,IAD9ImI,EAOf,MAAMkB,GAAgC,OAAWh7B,SACjD,SAASi7B,GAAgBrzB,EAAMszB,GAC3B,IAAI79B,EAAQ69B,EAAOL,WAAWx9B,OAAS69B,EAAOL,WAAWP,MACrDloC,EAAS8oC,EAAOr8B,OACA,iBAATxB,EACPuK,EAAKO,SAAS,CACVxC,QAAS,CAAEtR,KAAMjC,EAAOiC,KAAME,GAAInC,EAAOmC,GAAIwJ,OAAQV,GACrD+I,UAAW,CAAEwhB,OAAQx1B,EAAOiC,KAAOgJ,EAAMlO,QACzCiY,UAAW,iBACX+D,YAAa6vB,GAAiBtzB,GAAGwzB,EAAOL,cAI5Cx9B,EAAMuK,EAAMszB,EAAOL,WAAYzoC,EAAOiC,KAAMjC,EAAOmC,IAG3D,MAAM4mC,GAA2B,IAAI38B,QACrC,SAAS48B,GAASv8B,GACd,IAAKkE,MAAMgY,QAAQlc,GACf,OAAOA,EACX,IAAIyc,EAAQ6f,GAAY18B,IAAII,GAG5B,OAFKyc,GACD6f,GAAY7gC,IAAIuE,EAAQyc,EAAQif,GAAiB17B,IAC9Cyc,EAMX,MAAM,GACF,YAAY+f,GACR7sC,KAAK6sC,QAAUA,EACf7sC,KAAK0rC,MAAQ,GACb1rC,KAAKoxB,OAAS,GAGdpxB,KAAK8sC,IAAM,GACX9sC,KAAK+sC,QAAU,GACf/sC,KAAKgtC,OAAS,GACd,IAAK,IAAI3tC,EAAI,EAAGA,EAAIwtC,EAAQlsC,QAAS,CACjC,IAAIssC,EAAO,eAAYJ,EAASxtC,GAAIwC,EAAO,eAAcorC,GACzDjtC,KAAK0rC,MAAMhrC,KAAKusC,GAChB,IAAIh5B,EAAO44B,EAAQ5pC,MAAM5D,EAAGA,EAAIwC,GAAOqrC,EAAQj5B,EAAKk5B,cACpDntC,KAAKoxB,OAAO1wB,KAAK,eAAYwsC,GAASj5B,EAAOA,EAAKqzB,cAAgB4F,EAAO,IACzE7tC,GAAKwC,EAET7B,KAAKotC,OAASP,EAAQlsC,QAAUX,KAAK0rC,MAAM/qC,OAS/C,MAAMolC,GACF,GAA2B,GAAvB/lC,KAAK6sC,QAAQlsC,OACb,MAAO,CAAC,GACZ,GAAIolC,EAAKplC,OAASX,KAAK6sC,QAAQlsC,OAC3B,OAAO,KACX,IAAI,MAAE+qC,EAAK,OAAEta,EAAM,IAAE0b,EAAG,QAAEC,EAAO,OAAEC,GAAWhtC,KAG9C,GAAoB,GAAhB0rC,EAAM/qC,OAAa,CACnB,IAAIykB,EAAQ,eAAY2gB,EAAM,GAC9B,OAAO3gB,GAASsmB,EAAM,GAAK,CAAC,EAAG,EAAG,eAActmB,IAC1CA,GAASgM,EAAO,GAAK,EAAE,IAAoB,EAAG,eAAchM,IAAU,KAEhF,IAAIioB,EAAStH,EAAKp0B,QAAQ3R,KAAK6sC,SAC/B,GAAc,GAAVQ,EACA,MAAO,CAAC,EAAG,EAAGrtC,KAAK6sC,QAAQlsC,QAC/B,IAAI62B,EAAMkU,EAAM/qC,OAAQ2sC,EAAQ,EAChC,GAAID,EAAS,EAAG,CACZ,IAAK,IAAIltC,EAAI,EAAG2Y,EAAI/R,KAAKE,IAAI8+B,EAAKplC,OAAQ,KAAMR,EAAI2Y,GAAKw0B,EAAQ9V,GAAM,CACnE,IAAIt1B,EAAO,eAAY6jC,EAAM5lC,GACzB+B,GAAQwpC,EAAM4B,IAAUprC,GAAQkvB,EAAOkc,KACvCR,EAAIQ,KAAWntC,GACnBA,GAAK,eAAc+B,GAGvB,GAAIorC,EAAQ9V,EACR,OAAO,KAIf,IAAI+V,EAAY,EAIZC,EAAW,EAAGC,GAAe,EAE7BC,EAAa,EAAGC,GAAiB,EAAGC,GAAe,EACnDC,EAAW,QAAQ9kC,KAAKg9B,GAAO+H,GAAe,EAElD,IAAK,IAAI3tC,EAAI,EAAG2Y,EAAI/R,KAAKE,IAAI8+B,EAAKplC,OAAQ,KAAMotC,EAAW,EAAiB5tC,EAAI2Y,GAAK00B,EAAWhW,GAAM,CAClG,IAAIt1B,EAAO,eAAY6jC,EAAM5lC,GACzBktC,EAAS,IACLE,EAAY/V,GAAOt1B,GAAQwpC,EAAM6B,KACjCR,EAAQQ,KAAeptC,GACvButC,EAAalW,IACTt1B,GAAQwpC,EAAMgC,IAAexrC,GAAQkvB,EAAOsc,IAC1B,GAAdA,IACAC,EAAgBxtC,GACpBytC,EAAcztC,EAAI,EAClButC,KAGAA,EAAa,IAIzB,IAAItvB,EAAItd,EAAOoB,EAAO,IACfA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAM,EAAgBA,GAAQ,IAAMA,GAAQ,GAAK,EAAgB,GAClHkc,EAAK,eAAclc,KAAUkc,EAAGkpB,cAAgB,EAAgBlpB,GAAMA,EAAG+uB,cAAgB,EAAgB,IAC5GhtC,GAAa,GAARW,GAAyB+sC,GAAwB,GAAZE,GAAuC,GAARjtC,KACtE4qC,EAAM8B,IAAatrC,GAASkvB,EAAOoc,IAAatrC,IAASurC,GAAe,GACxET,EAAOQ,KAAcrtC,EAChB6sC,EAAOrsC,SACZmtC,GAAe,IAEvBC,EAAWjtC,EACXX,GAAK,eAAc+B,GAEvB,OAAIsrC,GAAYhW,GAAoB,GAAbwV,EAAO,IAAWc,EAC9B9tC,KAAK4D,QAA4B6pC,GAAgB,IAAqB,GAAzD,IAA6DT,EAAQjH,GACzF2H,GAAclW,GAAwB,GAAjBmW,EACd,EAAE,IAAqB5H,EAAKplC,OAAQ,EAAGitC,GAC9CP,GAAU,EACH,EAAE,IAAqBtH,EAAKplC,OAAQ0sC,EAAQA,EAASrtC,KAAK6sC,QAAQlsC,QACzE+sC,GAAclW,EACP,EAAC,IAA4CuO,EAAKplC,OAAQgtC,EAAeC,GAChFJ,GAAYhW,EACLx3B,KAAK4D,QAA4B6pC,GAAgB,IAAqB,GAAzD,IAA+D,KAC9EK,EAAe,GAAK,MAAiBd,EAAQjH,GAC/B,GAAhB2F,EAAM/qC,OAAc,KAAOX,KAAK4D,QAAQkpC,EAAI,IAAM,IAAqB,GAAM,IAAsB,KAAgBA,EAAK/G,GAEnI,OAAOrmC,EAAOkL,EAAWm7B,GACrB,IAAIniC,EAAS,CAAClE,EAAQqmC,EAAKplC,QAASR,EAAI,EACxC,IAAK,IAAIV,KAAOmL,EAAW,CACvB,IAAI7E,EAAKtG,GAAOO,KAAKotC,OAAS,eAAc,eAAYrH,EAAMtmC,IAAQ,GAClEU,EAAI,GAAKyD,EAAOzD,EAAI,IAAMV,EAC1BmE,EAAOzD,EAAI,GAAK4F,GAEhBnC,EAAOzD,KAAOV,EACdmE,EAAOzD,KAAO4F,GAGtB,OAAOnC,GAIf,MAAMoqC,GAAgC,OAAMx8B,OAAO,CAC/C,QAAQuF,GACJ,OAAO,eAAcA,EAAS,CAC1Bk3B,kBAAkB,EAClBzpB,SAAU,KACV0pB,mBAAoB,IACpB1P,eAAe,EACf2P,YAAa,IAAM,GACnBC,aAAa,EACbC,OAAO,EACPC,aAAc,IACf,CACC9P,cAAe,CAAC9wB,EAAGC,IAAMD,GAAKC,EAC9B0gC,MAAO,CAAC3gC,EAAGC,IAAMD,GAAKC,EACtBwgC,YAAa,CAACzgC,EAAGC,IAAM6hB,GAAK+e,GAAU7gC,EAAE8hB,GAAI7hB,EAAE6hB,IAC9C8e,aAAc,CAAC5gC,EAAGC,IAAMD,EAAEtN,OAAOuN,QAI7C,SAAS4gC,GAAU7gC,EAAGC,GAClB,OAAOD,EAAIC,EAAID,EAAI,IAAMC,EAAID,EAAIC,EAGrC,SAAS6gC,GAAcl7B,GACnB,IAAI22B,EAAU32B,EAAOg7B,aAAarrC,QA2ClC,OA1CIqQ,EAAO+6B,OACPpE,EAAQvpC,KAAK,CACT,OAAO2rC,GACH,IAAIoC,EAAO5jB,SAASC,cAAc,OAKlC,OAJA2jB,EAAKxN,UAAUtiB,IAAI,qBACf0tB,EAAWvrC,MACX2tC,EAAKxN,UAAUtiB,OAAO0tB,EAAWvrC,KAAK+C,MAAM,QAAQsH,IAAI8jB,GAAO,qBAAuBA,IAC1Fwf,EAAKzjB,aAAa,cAAe,QAC1ByjB,GAEXnjB,SAAU,KAElB2e,EAAQvpC,KAAK,CACT,OAAO2rC,EAAYqC,EAAIrgC,GACnB,IAAIsgC,EAAW9jB,SAASC,cAAc,QACtC6jB,EAAS5jB,UAAY,qBACrB,IAAI,MAAE+gB,GAAUO,EAAYrpC,EAAM,EAClC,IAAK,IAAI6K,EAAI,EAAGA,EAAIQ,EAAM1N,QAAS,CAC/B,IAAIkF,EAAOwI,EAAMR,KAAM9H,EAAKsI,EAAMR,KAC9BhI,EAAO7C,GACP2rC,EAAStjB,YAAYR,SAASmF,eAAe8b,EAAM7oC,MAAMD,EAAK6C,KAClE,IAAI4tB,EAAOkb,EAAStjB,YAAYR,SAASC,cAAc,SACvD2I,EAAKpI,YAAYR,SAASmF,eAAe8b,EAAM7oC,MAAM4C,EAAME,KAC3D0tB,EAAK1I,UAAY,2BACjB/nB,EAAM+C,EAIV,OAFI/C,EAAM8oC,EAAMnrC,QACZguC,EAAStjB,YAAYR,SAASmF,eAAe8b,EAAM7oC,MAAMD,KACtD2rC,GAEXrjB,SAAU,IACX,CACC,OAAO+gB,GACH,IAAKA,EAAWuC,OACZ,OAAO,KACX,IAAIC,EAAYhkB,SAASC,cAAc,QAGvC,OAFA+jB,EAAU9jB,UAAY,sBACtB8jB,EAAU1b,YAAckZ,EAAWuC,OAC5BC,GAEXvjB,SAAU,KAEP2e,EAAQx8B,KAAK,CAACC,EAAGC,IAAMD,EAAE4d,SAAW3d,EAAE2d,UAAUngB,IAAIuC,GAAKA,EAAEwI,QAEtE,SAAS44B,GAAiBpC,EAAQtzB,GAC9B,IAAI+O,EAAM0C,SAASC,cAAc,OACjC3C,EAAI4C,UAAY,+BAChB,IAAI,KAAEtX,GAASi5B,EAAOL,WACtB,GAAmB,iBAAR54B,EACP0U,EAAIgL,YAAc1f,MAEjB,CACD,IAAIw2B,EAAUx2B,EAAKi5B,EAAOL,YACtBpC,EAAQrnB,KACRqnB,EAAQrnB,KAAKtE,GAAQ6J,EAAIkD,YAAY/M,GAAOxF,GAAK,eAAaM,EAAK7Z,MAAOuZ,EAAG,oBAE7EqP,EAAIkD,YAAY4e,GAExB,OAAO9hB,EAEX,SAAS4mB,GAAoBC,EAAO1G,EAAUthC,GAC1C,GAAIgoC,GAAShoC,EACT,MAAO,CAAEnB,KAAM,EAAGE,GAAIipC,GAC1B,GAAI1G,GAAa0G,GAAS,EAAI,CAC1B,IAAIhsC,EAAM+D,KAAKkoC,MAAM3G,EAAWthC,GAChC,MAAO,CAAEnB,KAAM7C,EAAMgE,EAAKjB,IAAK/C,EAAM,GAAKgE,GAE9C,IAAIhE,EAAM+D,KAAKkoC,OAAOD,EAAQ1G,GAAYthC,GAC1C,MAAO,CAAEnB,KAAMmpC,GAAShsC,EAAM,GAAKgE,EAAKjB,GAAIipC,EAAQhsC,EAAMgE,GAE9D,MAAM,GACF,YAAYoS,EAAM81B,GACdlvC,KAAKoZ,KAAOA,EACZpZ,KAAKkvC,WAAaA,EAClBlvC,KAAKyT,KAAO,KACZzT,KAAKmvC,UAAY,CACbtoC,KAAM,IAAM7G,KAAKovC,cACjBC,MAAQ5vC,GAAQO,KAAKsvC,aAAa7vC,GAClCqd,IAAK9c,MAET,IAAIuvC,EAASn2B,EAAK7Z,MAAMua,MAAMo1B,IAC1B,QAAExnC,EAAO,SAAE4gC,GAAaiH,EAAO/b,KAC/BlgB,EAAS8F,EAAK7Z,MAAMkY,MAAMu2B,IAC9BhuC,KAAKwuC,cAAgBA,GAAcl7B,GACnCtT,KAAKmuC,YAAc76B,EAAO66B,YAC1BnuC,KAAK8F,MAAQipC,GAAoBrnC,EAAQ/G,OAAQ2nC,EAAUh1B,EAAO46B,oBAClEluC,KAAKmoB,IAAM0C,SAASC,cAAc,OAClC9qB,KAAKmoB,IAAI4C,UAAY,0BACrB/qB,KAAKmoB,IAAIkG,iBAAiB,YAAcvV,IACpC,IAAK,IAAoBzK,EAAhB8Z,EAAMrP,EAAE/U,OAAeokB,GAAOA,GAAOnoB,KAAKmoB,IAAKA,EAAMA,EAAIqZ,WAC9D,GAAoB,MAAhBrZ,EAAIqnB,WAAqBnhC,EAAQ,UAAUqZ,KAAKS,EAAIhhB,OAASkH,EAAM,GAAK3G,EAAQ/G,OAGhF,OAFA8rC,GAAgBrzB,EAAM1R,GAAS2G,EAAM,UACrCyK,EAAEW,mBAKdzZ,KAAKgsC,KAAOhsC,KAAKmoB,IAAIkD,YAAYrrB,KAAKyvC,cAAc/nC,EAAS6nC,EAAOpoC,GAAInH,KAAK8F,QAC7E9F,KAAKgsC,KAAK3d,iBAAiB,SAAU,KAC7BruB,KAAKyT,MACLzT,KAAKoZ,KAAKs2B,eAAe1vC,KAAKmvC,aAG1C,QAAUnvC,KAAKq2B,YACf,OAAO3Z,GACCA,EAAOnd,MAAMua,MAAM9Z,KAAKkvC,aAAexyB,EAAOtE,WAAW0B,MAAM9Z,KAAKkvC,aACpElvC,KAAKq2B,YAEb,aACQr2B,KAAKyT,MACLzT,KAAKoZ,KAAKs2B,eAAe1vC,KAAKmvC,WAEtC,YACI,IAAII,EAASvvC,KAAKoZ,KAAK7Z,MAAMua,MAAM9Z,KAAKkvC,YAAa1b,EAAO+b,EAAO/b,KAUnE,IATIA,EAAK8U,SAAWtoC,KAAK8F,MAAMD,MAAQ2tB,EAAK8U,UAAYtoC,KAAK8F,MAAMC,MAC/D/F,KAAK8F,MAAQipC,GAAoBvb,EAAK9rB,QAAQ/G,OAAQ6yB,EAAK8U,SAAUtoC,KAAKoZ,KAAK7Z,MAAMkY,MAAMu2B,IAAkBE,oBAC7GluC,KAAKgsC,KAAK/f,SACVjsB,KAAKgsC,KAAOhsC,KAAKmoB,IAAIkD,YAAYrrB,KAAKyvC,cAAcjc,EAAK9rB,QAAS6nC,EAAOpoC,GAAInH,KAAK8F,QAClF9F,KAAKgsC,KAAK3d,iBAAiB,SAAU,KAC7BruB,KAAKyT,MACLzT,KAAKoZ,KAAKs2B,eAAe1vC,KAAKmvC,cAGtCnvC,KAAK2vC,qBAAqBnc,EAAK8U,UAAW,CACtCtoC,KAAKyT,OACLzT,KAAKyT,KAAKwY,SACVjsB,KAAKyT,KAAO,MAEhB,IAAIi5B,EAASlZ,EAAK9rB,QAAQ8rB,EAAK8U,UAC3BoE,EAAOL,WAAW54B,OAClBzT,KAAKyT,KAAOzT,KAAKmoB,IAAIkD,YAAYyjB,GAAiBpC,EAAQ1sC,KAAKoZ,OAC/DpZ,KAAKoZ,KAAKs2B,eAAe1vC,KAAKmvC,aAI1C,qBAAqB7G,GACjB,IAAIx8B,EAAM,KACV,IAAK,IAAI8jC,EAAM5vC,KAAKgsC,KAAK3mB,WAAYllB,EAAIH,KAAK8F,MAAMD,KAAM+pC,EAAKA,EAAMA,EAAI9lC,YAAa3J,IAC9EA,GAAKmoC,EACAsH,EAAIC,aAAa,mBAClBD,EAAI5kB,aAAa,gBAAiB,QAClClf,EAAM8jC,GAINA,EAAIC,aAAa,kBACjBD,EAAIE,gBAAgB,iBAKhC,OAFIhkC,GACA8Q,GAAe5c,KAAKgsC,KAAMlgC,GACvBA,EAEX,cACI,IAAIwqB,EAAMt2B,KAAKmoB,IAAI4c,cAAc,mBACjC,IAAKzO,IAAQt2B,KAAKyT,KACd,OAAO,KACX,IAAIs8B,EAAW/vC,KAAKmoB,IAAIsQ,wBACpBuX,EAAWhwC,KAAKyT,KAAKglB,wBACrBwX,EAAU3Z,EAAImC,wBAClB,GAAIwX,EAAQjuC,IAAM+E,KAAKE,IAAIy6B,YAAaqO,EAAS7hB,QAAU,IAAM+hB,EAAQ/hB,OAASnnB,KAAKC,IAAI,EAAG+oC,EAAS/tC,KAAO,GAC1G,OAAO,KACX,IAAIA,EAAM+E,KAAKC,IAAI,EAAGD,KAAKE,IAAIgpC,EAAQjuC,IAAK0/B,YAAcsO,EAASvmB,SAAWsmB,EAAS/tC,IACnF2nB,EAAO3pB,KAAKoZ,KAAK+T,eAAiB,OAAU+iB,IAC5CC,EAAYJ,EAASpmB,KAAMymB,EAAaC,WAAaN,EAASziB,MAKlE,OAJI3D,GAAQwmB,EAAYppC,KAAKE,IAAI+oC,EAASM,MAAOF,GAC7CzmB,GAAO,GACDA,GAAQymB,EAAarpC,KAAKE,IAAI+oC,EAASM,MAAOH,KACpDxmB,GAAO,GACJ,CAAE3nB,MAAK2nB,QAElB,aAAalqB,GACLO,KAAKyT,OACLzT,KAAKyT,KAAKwX,MAAMjpB,KAAOvC,EAAMA,EAAIuC,KAAO,KAAO,KAC3CvC,IACAO,KAAKyT,KAAKwtB,UAAUsP,OAAO,yBAA0B9wC,EAAIkqB,MACzD3pB,KAAKyT,KAAKwtB,UAAUsP,OAAO,2BAA4B9wC,EAAIkqB,QAIvE,cAAcjiB,EAASP,EAAIrB,GACvB,MAAM0qC,EAAK3lB,SAASC,cAAc,MAClC0lB,EAAGrpC,GAAKA,EACRqpC,EAAGxlB,aAAa,OAAQ,WACxB,IAAK,IAAI7qB,EAAI2F,EAAMD,KAAM1F,EAAI2F,EAAMC,GAAI5F,IAAK,CACxC,IAAI,WAAEksC,EAAU,MAAEh+B,GAAU3G,EAAQvH,GACpC,MAAMswC,EAAKD,EAAGnlB,YAAYR,SAASC,cAAc,OACjD2lB,EAAGtpC,GAAKA,EAAK,IAAMhH,EACnBswC,EAAGzlB,aAAa,OAAQ,UACxB,IAAIiE,EAAMjvB,KAAKmuC,YAAY9B,GACvBpd,IACAwhB,EAAG1lB,UAAYkE,GACnB,IAAK,IAAI5e,KAAUrQ,KAAKwuC,cAAe,CACnC,IAAIlwB,EAAOjO,EAAOg8B,EAAYrsC,KAAKoZ,KAAK7Z,MAAO8O,GAC3CiQ,GACAmyB,EAAGplB,YAAY/M,IAO3B,OAJIxY,EAAMD,MACN2qC,EAAGvP,UAAUtiB,IAAI,kCACjB7Y,EAAMC,GAAK2B,EAAQ/G,QACnB6vC,EAAGvP,UAAUtiB,IAAI,qCACd6xB,GAKf,SAASE,GAAkBxB,GACvB,OAAQ91B,GAAS,IAAI,GAAkBA,EAAM81B,GAEjD,SAAStyB,GAAeskB,EAAWhO,GAC/B,IAAInzB,EAASmhC,EAAUzI,wBACnBkY,EAAOzd,EAAQuF,wBACfkY,EAAK3uC,IAAMjC,EAAOiC,IAClBk/B,EAAU0P,WAAa7wC,EAAOiC,IAAM2uC,EAAK3uC,IACpC2uC,EAAKziB,OAASnuB,EAAOmuB,SAC1BgT,EAAU0P,WAAaD,EAAKziB,OAASnuB,EAAOmuB,QAGpD,MAAM2iB,GAAa,IAGnB,SAAS,GAAMnE,GACX,OAA6B,KAArBA,EAAOoE,OAAS,IAAYpE,EAAO79B,MAAQ,GAAK,IAAM69B,EAAOj5B,KAAO,EAAI,IAC3Ei5B,EAAO5rC,KAAO,EAAI,GAE3B,SAASiwC,GAAYC,EAAQzxC,GACzB,IAAImI,EAAU,GAAIvH,EAAI,EACtB,IAAK,IAAIuN,KAAKsjC,EACV,GAAItjC,EAAEujC,YACF,IAAwB,IAApBvjC,EAAE9J,OAAO3D,OACT,IAAK,IAAIysC,KAAUh/B,EAAE9J,OAAO8D,QACxBA,EAAQhH,KAAK,IAAI0rC,GAAOM,EAAQh/B,EAAG,CAAC,IAAMvN,WAE7C,CACD,IAA8DkO,EAA1D6iC,EAAU,IAAI,GAAa3xC,EAAMw2B,SAASroB,EAAE7H,KAAM6H,EAAE3H,KACxD,IAAK,IAAI2mC,KAAUh/B,EAAE9J,OAAO8D,SACpB2G,EAAQ6iC,EAAQ7iC,MAAMq+B,EAAOZ,UACT,MAAhBY,EAAOoE,QACPziC,EAAM,IAAMq+B,EAAOoE,OACvBppC,EAAQhH,KAAK,IAAI0rC,GAAOM,EAAQh/B,EAAGW,KAIvD3G,EAAQ+F,KAAK0jC,IACb,IAAIvtC,EAAS,GAAIuP,EAAO,KACxB,IAAK,IAAIy8B,KAAOloC,EAAQ+F,KAAK0jC,IAAY,CACrC,GAAIvtC,EAAOjD,QAAUkwC,GACjB,MACC19B,GAAQA,EAAK24B,OAAS8D,EAAIvD,WAAWP,OAAS34B,EAAKy7B,QAAUgB,EAAIvD,WAAWuC,QAC7Ez7B,EAAKrS,MAAQ8uC,EAAIvD,WAAWvrC,MAAQqS,EAAKtE,OAAS+gC,EAAIvD,WAAWx9B,MAE5D,GAAM+gC,EAAIvD,YAAc,GAAMl5B,KACnCvP,EAAOA,EAAOjD,OAAS,GAAKivC,GAF5BhsC,EAAOlD,KAAKkvC,GAGhBz8B,EAAOy8B,EAAIvD,WAEf,OAAOzoC,EAEX,MAAMwtC,GACF,YAAY1pC,EAAS2pC,EAAOC,EAASC,EAAWjJ,GAC5CtoC,KAAK0H,QAAUA,EACf1H,KAAKqxC,MAAQA,EACbrxC,KAAKsxC,QAAUA,EACftxC,KAAKuxC,UAAYA,EACjBvxC,KAAKsoC,SAAWA,EAEpB,YAAYA,EAAUnhC,GAClB,OAAOmhC,GAAYtoC,KAAKsoC,UAAYA,GAAYtoC,KAAK0H,QAAQ/G,OAASX,KAChE,IAAIoxC,GAAiBpxC,KAAK0H,QAAS8pC,GAAUrqC,EAAImhC,GAAWtoC,KAAKsxC,QAAStxC,KAAKuxC,UAAWjJ,GAEpG,aAAa0I,EAAQzxC,EAAO4H,EAAIgM,EAAMgY,GAClC,IAAIzjB,EAAUqpC,GAAYC,EAAQzxC,GAClC,IAAKmI,EAAQ/G,OACT,OAAO,KACX,IAAI2nC,EAAW,EACf,GAAIn1B,GAAQA,EAAKm1B,SAAU,CACvB,IAAImJ,EAAgBt+B,EAAKzL,QAAQyL,EAAKm1B,UAAU+D,WAChD,IAAK,IAAIlsC,EAAI,EAAGA,EAAIuH,EAAQ/G,SAAW2nC,EAAUnoC,IACzCuH,EAAQvH,GAAGksC,YAAcoF,IACzBnJ,EAAWnoC,GAGvB,OAAO,IAAIixC,GAAiB1pC,EAAS8pC,GAAUrqC,EAAImhC,GAAW,CAC1D7oC,IAAKuxC,EAAOzuC,OAAO,CAACmL,EAAGC,IAAMA,EAAEsjC,YAAclqC,KAAKE,IAAIyG,EAAGC,EAAE9H,MAAQ6H,EAAG,KACtEkC,OAAQ8gC,GAAkBgB,IAC1B5jB,MAAO3C,EAAKijB,aACbj7B,EAAOA,EAAKo+B,UAAYxxB,KAAKC,MAAOsoB,GAE3C,IAAInxB,GACA,OAAO,IAAIi6B,GAAiBpxC,KAAK0H,QAAS1H,KAAKqxC,MAAOtgC,OAAOyC,OAAOzC,OAAOyC,OAAO,GAAIxT,KAAKsxC,SAAU,CAAE7xC,IAAK0X,EAAQyJ,OAAO5gB,KAAKsxC,QAAQ7xC,OAASO,KAAKuxC,UAAWvxC,KAAKsoC,WAG9K,MAAMqJ,GACF,YAAYX,EAAQ7pC,EAAIqsB,GACpBxzB,KAAKgxC,OAASA,EACdhxC,KAAKmH,GAAKA,EACVnH,KAAKwzB,KAAOA,EAEhB,eACI,OAAO,IAAIme,GAAgB,GAAM,SAAW5qC,KAAKkoC,MAAsB,IAAhBloC,KAAK6qC,UAAgBC,SAAS,IAAK,MAE9F,OAAOr6B,GACH,IAAI,MAAEjY,GAAUiY,EAAI2T,EAAO5rB,EAAMkY,MAAMu2B,IACnC8D,EAAU3mB,EAAK3G,UACfjlB,EAAM6nB,eAAe,eAAgB,GAAI7nB,IAAQ4L,IAAIyhC,IACrDoE,EAASc,EAAQ3mC,IAAIkF,IACrB,IAAI5N,EAAQzC,KAAKgxC,OAAOp9B,KAAKnQ,GAAKA,EAAE4M,QAAUA,IAC1C,IAAI0hC,GAAa1hC,EAAQrQ,KAAKgxC,OAAOttC,KAAKgK,GAAgB,GAAXA,EAAEnO,OAA6B,EAAkB,GACpG,OAAOkD,EAAMia,OAAOlF,EAAI2T,KAExB6lB,EAAOrwC,QAAUX,KAAKgxC,OAAOrwC,QAAUqwC,EAAO9E,MAAM,CAACx+B,EAAGvN,IAAMuN,GAAK1N,KAAKgxC,OAAO7wC,MAC/E6wC,EAAShxC,KAAKgxC,QAClB,IAAIxd,EAAOhc,EAAGI,WAAao5B,EAAOttC,KAAKgK,GAAKA,EAAEujC,aAAez5B,EAAGL,QAAQ66B,aAAatkC,EAAE7H,KAAM6H,EAAE3H,OAC1FksC,GAAYjB,EAAQhxC,KAAKgxC,QAAUI,GAAiBzhC,MAAMqhC,EAAQzxC,EAAOS,KAAKmH,GAAInH,KAAKwzB,KAAMrI,GAC5FnrB,KAAKwzB,MAAQhc,EAAGK,WAAa7X,KAAKwzB,KAAKroB,IAAIqM,EAAGL,SAAWnX,KAAKwzB,MAC/DA,GAAQwd,EAAO9E,MAAMx+B,GAAgB,GAAXA,EAAEnO,QAA6ByxC,EAAOttC,KAAKgK,GAAKA,EAAEujC,eAC7ED,EAASA,EAAO7lC,IAAIuC,GAAKA,EAAEujC,YAAc,IAAIc,GAAarkC,EAAE2C,OAAQ,GAAoB3C,IAC5F,IAAK,IAAIsxB,KAAUxnB,EAAGyC,QACd+kB,EAAO1d,GAAG4wB,MACV1e,EAAOA,GAAQA,EAAK2e,YAAYnT,EAAOv8B,MAAOzC,KAAKmH,KAC3D,OAAO6pC,GAAUhxC,KAAKgxC,QAAUxd,GAAQxzB,KAAKwzB,KAAOxzB,KAAO,IAAI2xC,GAAgBX,EAAQhxC,KAAKmH,GAAIqsB,GAEpG,cAAgB,OAAOxzB,KAAKwzB,KAAOxzB,KAAKwzB,KAAK8d,QAAU,KACvD,YAAc,OAAOtxC,KAAKwzB,KAAOxzB,KAAKwzB,KAAK6d,MAAQe,IAEvD,SAASH,GAAYvkC,EAAGC,GACpB,GAAID,GAAKC,EACL,OAAO,EACX,IAAK,IAAI0kC,EAAK,EAAGC,EAAK,IAAK,CACvB,MAAOD,EAAK3kC,EAAE/M,SAAW+M,EAAE2kC,GAAIpB,UAC3BoB,IACJ,MAAOC,EAAK3kC,EAAEhN,SAAWgN,EAAE2kC,GAAIrB,UAC3BqB,IACJ,IAAIC,EAAOF,GAAM3kC,EAAE/M,OAAQ6xC,EAAOF,GAAM3kC,EAAEhN,OAC1C,GAAI4xC,GAAQC,EACR,OAAOD,GAAQC,EACnB,GAAI9kC,EAAE2kC,KAAMzuC,QAAU+J,EAAE2kC,KAAM1uC,OAC1B,OAAO,GAGnB,MAAMwuC,GAAY,CACd,oBAAqB,OACrB,gBAAiB,SAErB,SAASZ,GAAUrqC,EAAImhC,GACnB,MAAO,CACH,oBAAqB,OACrB,gBAAiB,OACjB,wBAAyBnhC,EAAK,IAAMmhC,EACpC,gBAAiBnhC,GAGzB,MAAM,GAAO,GACb,SAASgqC,GAAUzjC,EAAGC,GAClB,IAAI8kC,EAAS9kC,EAAEU,MAAM,GAAKX,EAAEW,MAAM,GAClC,OAAIokC,GAEG/kC,EAAE2+B,WAAWP,MAAM4G,cAAc/kC,EAAE0+B,WAAWP,OAEzD,SAAS6G,GAAan7B,GAClB,OAAOA,EAAG0P,YAAY,cAAgB,QAAU1P,EAAG0P,YAAY,mBAAqB,SAAW,KAEnG,MAAM6qB,GACF,YAAY1hC,EAAQ9Q,EAAOqzC,GAAc,GACrC5yC,KAAKqQ,OAASA,EACdrQ,KAAKT,MAAQA,EACbS,KAAK4yC,YAAcA,EAEvB,YAAc,OAAO,EACrB,OAAOp7B,EAAI2T,GACP,IAAIzS,EAAQi6B,GAAan7B,GAAK/U,EAAQzC,KAClC0Y,EACAjW,EAAQA,EAAMowC,gBAAgBr7B,EAAIkB,EAAOyS,GACpC3T,EAAGK,WACRpV,EAAQA,EAAMqwC,aAAat7B,GACtBA,EAAGI,WAA4B,GAAfnV,EAAMlD,QAC3BkD,EAAQ,IAAIsvC,GAAatvC,EAAM4N,OAAQ,IAC3C,IAAK,IAAI2uB,KAAUxnB,EAAGyC,QAClB,GAAI+kB,EAAO1d,GAAGyxB,IACVtwC,EAAQ,IAAIsvC,GAAatvC,EAAM4N,OAAQ,EAAiB2uB,EAAOv8B,MAAQ,GAAI+U,EAAGjY,QAAU,QACvF,GAAIy/B,EAAO1d,GAAG0xB,IACfvwC,EAAQ,IAAIsvC,GAAatvC,EAAM4N,OAAQ,QACtC,GAAI2uB,EAAO1d,GAAG2xB,IACf,IAAK,IAAIjC,KAAUhS,EAAOv8B,MAClBuuC,EAAO3gC,QAAU5N,EAAM4N,SACvB5N,EAAQuuC,GAExB,OAAOvuC,EAEX,gBAAgB+U,EAAI1W,EAAMqqB,GACtB,MAAe,UAARrqB,GAAqBqqB,EAAK8iB,iBAA0C,IAAI8D,GAAa/xC,KAAKqQ,OAAQ,GAArDrQ,KAAKmL,IAAIqM,EAAGL,SAEpE,aAAaK,GACT,OAAOA,EAAGL,QAAQ66B,aAAa,GAAIx6B,EAAGY,aAAe,IAAI25B,GAAa/xC,KAAKqQ,OAAQ,GAAoBrQ,KAAKmL,IAAIqM,EAAGL,SAEvH,IAAIA,GACA,OAAOA,EAAQI,OAASvX,KAAK4yC,YAAc,EAAI5yC,KAAO,IAAI+xC,GAAa/xC,KAAKqQ,OAAQrQ,KAAKT,MAAO4X,EAAQyJ,OAAO5gB,KAAK4yC,eAG5H,MAAMM,WAAqBnB,GACvB,YAAY1hC,EAAQuiC,EAAahvC,EAAQiC,EAAME,EAAI0tB,GAC/ChjB,MAAMJ,EAAQ,EAAgBuiC,GAC9B5yC,KAAK4D,OAASA,EACd5D,KAAK6F,KAAOA,EACZ7F,KAAK+F,GAAKA,EACV/F,KAAKyzB,KAAOA,EAEhB,YAAc,OAAO,EACrB,gBAAgBjc,EAAI1W,EAAMqqB,GACtB,IAAItlB,EAAO2R,EAAGL,QAAQyJ,OAAO5gB,KAAK6F,MAAOE,EAAKyR,EAAGL,QAAQyJ,OAAO5gB,KAAK+F,GAAI,GACrEtG,EAAM,GAAI+X,EAAGjY,OACjB,IAAKS,KAAK4yC,aAAe,EAAInzC,EAAMoG,EAAOpG,GAAOoG,IAASpG,EAAMsG,EAC5D,OAAO,IAAIgsC,GAAa/xC,KAAKqQ,OAAgB,SAARvP,GAAmBqqB,EAAK8iB,iBAAmB,EAAkB,GACtG,IAAI2E,EAAc5yC,KAAK4yC,YAAc,GAAK,EAAIp7B,EAAGL,QAAQyJ,OAAO5gB,KAAK4yC,aACrE,OAAI5yC,KAAKyzB,OAAS5tB,GAAQE,GAAM/F,KAAKyzB,KAAK1qB,KAAKyO,EAAGjY,MAAMw2B,SAASlwB,EAAME,KAC5D,IAAImtC,GAAalzC,KAAKqQ,OAAQuiC,EAAa5yC,KAAK4D,OAAQiC,EAAME,EAAI/F,KAAKyzB,MAC3E,IAAIse,GAAa/xC,KAAKqQ,OAAQ,EAAiBuiC,GAE1D,aAAap7B,GACT,OAAOA,EAAGL,QAAQ66B,aAAahyC,KAAK6F,KAAM7F,KAAK+F,IAAM,IAAIgsC,GAAa/xC,KAAKqQ,OAAQ,GAAoBrQ,KAAKmL,IAAIqM,EAAGL,SAEvH,IAAI0E,GACA,OAAOA,EAAQtE,MAAQvX,KACnB,IAAIkzC,GAAalzC,KAAKqQ,OAAQrQ,KAAK4yC,YAAc,GAAK,EAAI/2B,EAAQ+E,OAAO5gB,KAAK4yC,aAAc5yC,KAAK4D,OAAQiY,EAAQ+E,OAAO5gB,KAAK6F,MAAOgW,EAAQ+E,OAAO5gB,KAAK+F,GAAI,GAAI/F,KAAKyzB,OAGjL,MAAMsf,GAAqC,OAAYvhC,SACjDwhC,GAAqC,OAAYxhC,SACjDyhC,GAA+B,OAAYzhC,OAAO,CACpD,IAAIsgC,EAASj2B,GAAW,OAAOi2B,EAAQ3mC,IAAI1H,GAAKA,EAAE0H,IAAI0Q,OAEpDq2B,GAAiC,OAAY1gC,SAC7CkgC,GAA+B,OAAWlgC,OAAO,CACnD,SAAW,OAAOmgC,GAAgBlxC,SAClC,OAAOgC,EAAO+U,GAAM,OAAO/U,EAAMia,OAAOlF,IACxCyV,QAAShS,GAAK,CACV,QAAYpV,KAAKoV,EAAGuS,GAAOA,EAAI8jB,SAC/B,OAAW6B,kBAAkBttC,KAAKoV,EAAG1b,GAASA,EAAM8xC,UAItD+B,GAA2B,GAKjC,SAASC,GAAwBxc,EAASN,EAAK,UAC3C,OAAQnd,IACJ,IAAIm2B,EAASn2B,EAAK7Z,MAAMua,MAAM43B,IAAiB,GAC/C,IAAKnC,IAAWA,EAAO/b,MAAQzT,KAAKC,MAAQuvB,EAAO/b,KAAK+d,UAAY6B,GAChE,OAAO,EACX,IAAc9B,EAAVgC,EAAO,EACD,QAAN/c,IAAiB+a,EAAU,gBAAWl4B,EAAMm2B,EAAO/b,KAAK8d,YACxDgC,EAAOvsC,KAAKC,IAAI,EAAGD,KAAKkoC,MAAMqC,EAAQnpB,IAAIorB,aACtCjC,EAAQnpB,IAAI4c,cAAc,MAAMwO,cAAgB,IACxD,IAAIjL,EAAWiH,EAAO/b,KAAK8U,SAAWgL,GAAQzc,EAAU,GAAK,IAAI,OAAEl2B,GAAW4uC,EAAO/b,KAAK9rB,QAM1F,OALI4gC,EAAW,EACXA,EAAiB,QAAN/R,EAAe,EAAI51B,EAAS,EAClC2nC,GAAY3nC,IACjB2nC,EAAiB,QAAN/R,EAAe51B,EAAS,EAAI,GAC3CyY,EAAKO,SAAS,CAAEM,QAASi4B,GAAkBh5B,GAAGovB,MACvC,GAMf,MAAMkL,GAAoBp6B,IACtB,IAAIm2B,EAASn2B,EAAK7Z,MAAMua,MAAM43B,IAAiB,GAC/C,QAAIt4B,EAAK7Z,MAAMqa,WAAa21B,IAAWA,EAAO/b,MAAQzT,KAAKC,MAAQuvB,EAAO/b,KAAK+d,UAAY6B,MAE3F3G,GAAgBrzB,EAAMm2B,EAAO/b,KAAK9rB,QAAQ6nC,EAAO/b,KAAK8U,YAC/C,IAKLmL,GAAmBr6B,IACrB,IAAIm2B,EAASn2B,EAAK7Z,MAAMua,MAAM43B,IAAiB,GAC/C,QAAKnC,IAELn2B,EAAKO,SAAS,CAAEM,QAAS84B,GAAsB75B,IAAG,MAC3C,IAKLw6B,GAAmBt6B,IACrB,IAAIm2B,EAASn2B,EAAK7Z,MAAMua,MAAM43B,IAAiB,GAC/C,SAAKnC,IAAWA,EAAOyB,OAAOttC,KAAKgK,GAAgB,GAAXA,EAAEnO,UAE1C6Z,EAAKO,SAAS,CAAEM,QAAS+4B,GAAsB95B,GAAG,SAC3C,IAEX,MAAMy6B,GACF,YAAY3C,EAAQzwC,GAChBP,KAAKgxC,OAASA,EACdhxC,KAAKO,QAAUA,EACfP,KAAK2Y,KAAOoH,KAAKC,MACjBhgB,KAAK4zC,QAAU,GAGf5zC,KAAKmP,UAAOsC,GAGpB,MAAMoiC,GAAe,GAAIC,GAAiB,GAAIC,GAAe,IACvDC,GAAgC,OAAWjyB,UAAU,MACvD,YAAY3I,GACRpZ,KAAKoZ,KAAOA,EACZpZ,KAAKi0C,gBAAkB,EACvBj0C,KAAKk0C,QAAU,GACfl0C,KAAKm0C,gBAAkB,EACvBn0C,KAAKs/B,UAAY,EACjB,IAAK,IAAI0R,KAAU53B,EAAK7Z,MAAMua,MAAM43B,IAAiBV,OAC7B,GAAhBA,EAAOzxC,OACPS,KAAKo0C,WAAWpD,GAE5B,OAAOt0B,GACH,IAAI6yB,EAAS7yB,EAAOnd,MAAMua,MAAM43B,IAChC,IAAKh1B,EAAOmpB,eAAiBnpB,EAAO7E,YAAc6E,EAAOtE,WAAW0B,MAAM43B,KAAoBnC,EAC1F,OACJ,IAAI8E,EAAY33B,EAAOmuB,aAAannC,KAAK8T,IAC7BA,EAAGI,WAAaJ,EAAGK,cAAgB86B,GAAan7B,IAE5D,IAAK,IAAIrX,EAAI,EAAGA,EAAIH,KAAKk0C,QAAQvzC,OAAQR,IAAK,CAC1C,IAAIgiC,EAAQniC,KAAKk0C,QAAQ/zC,GACzB,GAAIk0C,GACAlS,EAAMyR,QAAQjzC,OAAS+b,EAAOmuB,aAAalqC,OAASmzC,IAAkB3R,EAAMxpB,KAAOoH,KAAKC,MAAQ+zB,GAAc,CAC9G,IAAK,IAAIO,KAAWnS,EAAM5hC,QAAQ8qC,eAC9B,IACIiJ,IAEJ,MAAOx7B,GACH,eAAa9Y,KAAKoZ,KAAK7Z,MAAOuZ,GAGtCqpB,EAAM5hC,QAAQ8qC,eAAiB,KAC/BrrC,KAAKk0C,QAAQnmC,OAAO5N,IAAK,QAGzBgiC,EAAMyR,QAAQlzC,QAAQgc,EAAOmuB,cAOrC,GAJI7qC,KAAKi0C,gBAAkB,GACvBvyB,aAAa1hB,KAAKi0C,gBACtBj0C,KAAKi0C,eAAiB1E,EAAOyB,OAAOttC,KAAKgK,GAAgB,GAAXA,EAAEnO,QAA6BS,KAAKk0C,QAAQxwC,KAAK6wC,GAAKA,EAAEvD,OAAO3gC,QAAU3C,EAAE2C,SACnHqE,WAAW,IAAM1U,KAAKw0C,cAAeX,KAAiB,EACtC,GAAlB7zC,KAAKs/B,UACL,IAAK,IAAI9nB,KAAMkF,EAAOmuB,aACM,SAApB8H,GAAan7B,GACbxX,KAAKs/B,UAAY,EACM,GAAlBt/B,KAAKs/B,WAAgC9nB,EAAGI,YAC7C5X,KAAKs/B,UAAY,GAGjC,cACIt/B,KAAKi0C,gBAAkB,EACvB,IAAI,MAAE10C,GAAUS,KAAKoZ,KAAMm2B,EAAShwC,EAAMua,MAAM43B,IAChD,IAAK,IAAIV,KAAUzB,EAAOyB,OACF,GAAhBA,EAAOzxC,OAA6BS,KAAKk0C,QAAQxwC,KAAKoD,GAAKA,EAAEkqC,OAAO3gC,QAAU2gC,EAAO3gC,SACrFrQ,KAAKo0C,WAAWpD,GAG5B,WAAWA,GACP,IAAI,MAAEzxC,GAAUS,KAAKoZ,KAAM3Z,EAAM,GAAIF,GACjCgB,EAAU,IAAI,GAAkBhB,EAAOE,EAAKuxC,EAAO4B,aAAenzC,GAClEg1C,EAAU,IAAId,GAAa3C,EAAQzwC,GACvCP,KAAKk0C,QAAQxzC,KAAK+zC,GAClB1zB,QAAQtL,QAAQu7B,EAAO3gC,OAAO9P,IAAUqiB,KAAKhf,IACpC6wC,EAAQl0C,QAAQm0C,UACjBD,EAAQtlC,KAAOvL,GAAU,KACzB5D,KAAK20C,mBAEV7xB,IACC9iB,KAAKoZ,KAAKO,SAAS,CAAEM,QAAS+4B,GAAsB95B,GAAG,QACvD,eAAalZ,KAAKoZ,KAAK7Z,MAAOujB,KAGtC,iBACQ9iB,KAAKk0C,QAAQhI,MAAMqI,QAAgB9iC,IAAX8iC,EAAEplC,MAC1BnP,KAAK40C,SACA50C,KAAKm0C,eAAiB,IAC3Bn0C,KAAKm0C,eAAiBz/B,WAAW,IAAM1U,KAAK40C,SAAUf,KAI9D,SACI,IAAIv5B,EACAta,KAAKm0C,gBAAkB,GACvBzyB,aAAa1hB,KAAKm0C,gBACtBn0C,KAAKm0C,gBAAkB,EACvB,IAAIxlB,EAAU,GACVxD,EAAOnrB,KAAKoZ,KAAK7Z,MAAMkY,MAAMu2B,IACjC,IAAK,IAAI7tC,EAAI,EAAGA,EAAIH,KAAKk0C,QAAQvzC,OAAQR,IAAK,CAC1C,IAAIgiC,EAAQniC,KAAKk0C,QAAQ/zC,GACzB,QAAmBsR,IAAf0wB,EAAMhzB,KACN,SAEJ,GADAnP,KAAKk0C,QAAQnmC,OAAO5N,IAAK,GACrBgiC,EAAMhzB,KAAM,CACZ,IAAI6hC,EAAS,IAAIkC,GAAa/Q,EAAM6O,OAAO3gC,OAAQ8xB,EAAM6O,OAAO4B,YAAazQ,EAAMhzB,KAAMgzB,EAAMhzB,KAAKtJ,KAA+B,QAAxByU,EAAK6nB,EAAMhzB,KAAKpJ,UAAuB,IAAPuU,EAAgBA,EAAK,GAAI6nB,EAAMyR,QAAQjzC,OAASwhC,EAAMyR,QAAQ,GAAGx7B,WAAapY,KAAKoZ,KAAK7Z,OAAQ4iC,EAAMhzB,KAAKskB,OAA8B,IAAtB0O,EAAMhzB,KAAKlP,OAAmBsrC,GAAapJ,EAAMhzB,KAAKskB,MAAM,GAAQ,MAGlU,IAAK,IAAIjc,KAAM2qB,EAAMyR,QACjB5C,EAASA,EAAOt0B,OAAOlF,EAAI2T,GAC/B,GAAI6lB,EAAOC,YAAa,CACpBtiB,EAAQjuB,KAAKswC,GACb,UAGR,IAAI6D,EAAU70C,KAAKoZ,KAAK7Z,MAAMua,MAAM43B,IAAiBV,OAAOp9B,KAAKlG,GAAKA,EAAE2C,QAAU8xB,EAAM6O,OAAO3gC,QAC/F,GAAIwkC,GAA4B,GAAjBA,EAAQt1C,MACnB,GAAkB,MAAd4iC,EAAMhzB,KAAc,CAGpB,IAAI6hC,EAAS,IAAIe,GAAa5P,EAAM6O,OAAO3gC,OAAQ,GACnD,IAAK,IAAImH,KAAM2qB,EAAMyR,QACjB5C,EAASA,EAAOt0B,OAAOlF,EAAI2T,GACX,GAAhB6lB,EAAOzxC,OACPovB,EAAQjuB,KAAKswC,QAIjBhxC,KAAKo0C,WAAWS,GAIxBlmB,EAAQhuB,QACRX,KAAKoZ,KAAKO,SAAS,CAAEM,QAASg5B,GAAgB/5B,GAAGyV,OAE1D,CACC5L,cAAe,CACX,mBACI/iB,KAAKs/B,UAAY,GAErB,iBAC0B,GAAlBt/B,KAAKs/B,WAGL5qB,WAAW,IAAM1U,KAAKoZ,KAAKO,SAAS,CAAEM,QAAS84B,GAAsB75B,IAAG,KAAW,IAEvFlZ,KAAKs/B,UAAY,MAKvB,GAAyB,OAAW/V,UAAU,CAChD,sCAAuC,CACnC,SAAU,CACNurB,WAAY,YACZvqB,WAAY,SACZJ,SAAU,cACV4qB,kBAAmB,QACnBC,SAAU,mBACV3qB,SAAU,QACV4qB,UAAW,OACXC,UAAW,OACX7gB,OAAQ,EACRjK,QAAS,EACT,SAAU,CACN+qB,UAAW,SACXC,aAAc,WACd7rC,OAAQ,UACR6gB,QAAS,UACTirB,WAAY,OAIxB,uDAAwD,CACpDC,WAAY,OACZxrB,MAAO,SAEX,sDAAuD,CACnDwrB,WAAY,OACZxrB,MAAO,SAEX,mFAAoF,CAChFmgB,QAAS,QACTsL,QAAS,GACT/rB,QAAS,QACTc,UAAW,UAEf,gCAAiC,CAC7BgB,SAAU,WACVlB,QAAS,UACTkmB,MAAO,cACP0E,SAAU,SAEd,4CAA6C,CAAE1nB,MAAO,QACtD,6CAA8C,CAAE3D,KAAM,QACtD,0BAA2B,CAAEE,gBAAiB,aAC9C,yBAA0B,CAAEA,gBAAiB,aAC7C,2BAA4B,CACxB2rB,cAAe,WACflF,MAAO,EACP7mB,OAAQ,SACR4K,OAAQ,iBACRohB,WAAY,qBAEhB,4BAA6B,CACzBC,eAAgB,aAEpB,uBAAwB,CACpBC,WAAY,QACZC,UAAW,UAEf,qBAAsB,CAClB5Q,SAAU,MACVsL,MAAO,OACP9mB,QAAS,eACTc,UAAW,SACXurB,aAAc,OACdN,QAAS,OAEb,yDAA0D,CACtD,UAAW,CAAEtL,QAAS,QAE1B,2BAA4B,CACxB,UAAW,CAAEA,QAAS,QAE1B,+BAAgC,CAC5B,UAAW,CAAEA,QAAS,QAE1B,8BAA+B,CAC3B,UAAW,CAAEA,QAAS,SAE1B,8BAA+B,CAC3B,UAAW,CAAEA,QAAS,SAE1B,0BAA2B,CACvB,UAAW,CAAEA,QAAS,SAE1B,0BAA2B,CACvB,UAAW,CAAEA,QAAS,QAE1B,8BAA+B,CAC3B,UAAW,CAAEA,QAAS,QAE1B,6BAA8B,CAC1B,UAAW,CAAEA,QAAS,UAE1B,+BAAgC,CAC5B,UAAW,CAAEA,QAAS,QAE1B,0BAA2B,CACvB,UAAW,CAAEA,QAAS,QAASjF,SAAU,MAAOwQ,cAAe,aAqTvE,SAASM,GAAexiC,EAAS,IAC7B,MAAO,CACHo+B,GACA1D,GAAiB90B,GAAG5F,GACpB0gC,GACA+B,GACA,IAcR,MAAMC,GAAmB,CACrB,CAAEl5B,IAAK,aAAcC,IAAK02B,IAC1B,CAAE32B,IAAK,SAAUC,IAAK22B,IACtB,CAAE52B,IAAK,YAAaC,IAAkBs2B,IAAwB,IAC9D,CAAEv2B,IAAK,UAAWC,IAAkBs2B,IAAwB,IAC5D,CAAEv2B,IAAK,WAAYC,IAAkBs2B,IAAwB,EAAM,SACnE,CAAEv2B,IAAK,SAAUC,IAAkBs2B,IAAwB,EAAO,SAClE,CAAEv2B,IAAK,QAASC,IAAKy2B,KAEnBuC,GAAmC,OAAKE,QAAqB,OAAOC,SAAS,CAAClI,IAAmBzuC,GAASA,EAAMkY,MAAMu2B,IAAkBxP,cAAgB,CAACwX,IAAoB,KC53CnL,MAAMG,GAAgBpyC,IAClB,IAAIuP,EAAS8iC,GAAUryC,EAAOxE,OAC9B,OAAO+T,EAAO4Q,KAAOmyB,GAAkBtyC,KAAUuP,EAAO0pB,OAAQsZ,GAAmBvyC,IAEvF,SAASsV,GAAQ4B,EAAGyxB,GAChB,MAAO,EAAGntC,QAAOoa,eACb,IAAInC,EAAKyD,EAAEyxB,EAAQntC,EAAMqY,UAAUvS,OAAQ9F,GAC3C,QAAKiY,IAELmC,EAASpa,EAAMmd,OAAOlF,KACf,IASf,MAAM6+B,GAAiCh9B,GAAQk9B,GAAmB,GAe5DD,GAAkCj9B,GAAQm9B,GAAoB,GAe9DC,GAAgB,CAClB,CAAE35B,IAAK,QAASC,IAAKo5B,IACrB,CAAEr5B,IAAK,QAASC,IAAKu5B,KAEzB,SAASF,GAAU72C,EAAOE,EAAMF,EAAMqY,UAAUvM,KAAKgc,MACjD,IAAIpjB,EAAO1E,EAAM6nB,eAAe,gBAAiB3nB,GACjD,OAAOwE,EAAKtD,OAASsD,EAAK,GAAK,GAEnC,MAAMyyC,GAAe,GAKrB,SAASC,GAAiBp3C,GAAO,KAAEi0B,EAAI,MAAE9jB,GAAS7J,EAAME,GACpD,IASI6wC,EAAWC,EATXC,EAAav3C,EAAMw2B,SAASlwB,EAAO6wC,GAAc7wC,GACjD6gB,EAAYnnB,EAAMw2B,SAAShwB,EAAIA,EAAK2wC,IACpCK,EAAc,OAAOrvB,KAAKovB,GAAY,GAAGn2C,OAAQq2C,EAAa,OAAOtvB,KAAKhB,GAAW,GAAG/lB,OACxFs2C,EAAYH,EAAWn2C,OAASo2C,EACpC,GAAID,EAAW7zC,MAAMg0C,EAAYzjB,EAAK7yB,OAAQs2C,IAAczjB,GACxD9M,EAAUzjB,MAAM+zC,EAAYA,EAAatnC,EAAM/O,SAAW+O,EAC1D,MAAO,CAAE8jB,KAAM,CAAE/zB,IAAKoG,EAAOkxC,EAAa1iB,OAAQ0iB,GAAe,GAC7DrnC,MAAO,CAAEjQ,IAAKsG,EAAKixC,EAAY3iB,OAAQ2iB,GAAc,IAGzDjxC,EAAKF,GAAQ,EAAI6wC,GACjBE,EAAYC,EAAUt3C,EAAMw2B,SAASlwB,EAAME,IAG3C6wC,EAAYr3C,EAAMw2B,SAASlwB,EAAMA,EAAO6wC,IACxCG,EAAUt3C,EAAMw2B,SAAShwB,EAAK2wC,GAAc3wC,IAEhD,IAAImxC,EAAa,OAAOxvB,KAAKkvB,GAAW,GAAGj2C,OAAQw2C,EAAW,OAAOzvB,KAAKmvB,GAAS,GAAGl2C,OAClFy2C,EAASP,EAAQl2C,OAASw2C,EAAWznC,EAAM/O,OAC/C,OAAIi2C,EAAU3zC,MAAMi0C,EAAYA,EAAa1jB,EAAK7yB,SAAW6yB,GACzDqjB,EAAQ5zC,MAAMm0C,EAAQA,EAAS1nC,EAAM/O,SAAW+O,EACzC,CAAE8jB,KAAM,CAAE/zB,IAAKoG,EAAOqxC,EAAa1jB,EAAK7yB,OACvC0zB,OAAQ,KAAKtrB,KAAK6tC,EAAUvX,OAAO6X,EAAa1jB,EAAK7yB,SAAW,EAAI,GACxE+O,MAAO,CAAEjQ,IAAKsG,EAAKoxC,EAAWznC,EAAM/O,OAChC0zB,OAAQ,KAAKtrB,KAAK8tC,EAAQxX,OAAO+X,EAAS,IAAM,EAAI,IAEzD,KAIX,SAASZ,GAAmB9J,EAAQrnC,EAAQ9F,GACxC,IAAIwL,EAAS1F,EAAO8F,IAAIrE,GAAKsvC,GAAU72C,EAAOuH,EAAEjB,MAAMm3B,OACtD,IAAKjyB,EAAOmhC,MAAM1c,GAAKA,GACnB,OAAO,KACX,IAAI6nB,EAAWhyC,EAAO8F,IAAI,CAACrE,EAAG3G,IAAMw2C,GAAiBp3C,EAAOwL,EAAO5K,GAAI2G,EAAEjB,KAAMiB,EAAEf,KACjF,GAAc,GAAV2mC,IAAgC2K,EAASnL,MAAM1c,GAAKA,GAAI,CACxD,IAAIvtB,EAAQ,EACZ,OAAO1C,EAAM67B,cAAct1B,IACvB,IAAI,KAAE0tB,EAAI,MAAE9jB,GAAU3E,EAAO9I,KAC7B,GAAIo1C,EAASp1C,GACT,MAAO,CAAE6D,SACb,IAAItD,EAAQgxB,EAAK7yB,OAAS,EAC1B,MAAO,CACHwW,QAAS,CAAC,CAAEtR,KAAMC,EAAMD,KAAM0J,OAAQikB,EAAO,KAAO,CAAE3tB,KAAMC,EAAMC,GAAIwJ,OAAQ,IAAMG,IACpF5J,MAAO,OAAgBA,MAAMA,EAAMszB,OAAS52B,EAAOsD,EAAMuhB,KAAO7kB,MAIvE,GAAc,GAAVkqC,GAA6B2K,EAAS3zC,KAAK8rB,GAAKA,GAAI,CACzD,IAAIrY,EAAU,GACd,IAAK,IAAWmgC,EAAPn3C,EAAI,EAAYA,EAAIk3C,EAAS12C,OAAQR,IAC1C,GAAIm3C,EAAUD,EAASl3C,GAAI,CACvB,IAAIuF,EAAQqF,EAAO5K,IAAI,KAAEqzB,EAAI,MAAE9jB,GAAU4nC,EACzCngC,EAAQzW,KAAK,CAAEmF,KAAM2tB,EAAK/zB,IAAMiG,EAAM8tB,KAAK7yB,OAAQoF,GAAIytB,EAAK/zB,IAAM+zB,EAAKa,QAAU,CAAExuB,KAAM6J,EAAMjQ,IAAMiQ,EAAM2kB,OAAQtuB,GAAI2J,EAAMjQ,IAAMiG,EAAMgK,MAAM/O,SAEvJ,MAAO,CAAEwW,WAEb,OAAO,KAGX,SAASo/B,GAAkB7J,EAAQrnC,EAAQ9F,GACvC,IAAI+wB,EAAQ,GACRinB,GAAY,EAChB,IAAK,IAAI,KAAE1xC,EAAI,GAAEE,KAAQV,EAAQ,CAC7B,IAAImyC,EAASlnB,EAAM3vB,OAAQ82C,EAAY,IACvC,IAAK,IAAIh4C,EAAMoG,EAAMpG,GAAOsG,GAAK,CAC7B,IAAIme,EAAO3kB,EAAMmb,IAAIyJ,OAAO1kB,GAC5B,GAAIykB,EAAKre,KAAO0xC,IAAa1xC,GAAQE,GAAMA,EAAKme,EAAKre,MAAO,CACxD0xC,EAAWrzB,EAAKre,KAChB,IAAIH,EAAQ0wC,GAAU72C,EAAOE,GAAKykB,KAClC,IAAKxe,EACD,SACJ,IAAI+hB,EAAS,OAAOC,KAAKxD,EAAKG,MAAM,GAAG1jB,OACnC4W,EAAQkQ,GAAUvD,EAAKvjB,OACvB22C,EAAUpzB,EAAKG,KAAKphB,MAAMwkB,EAAQA,EAAS/hB,EAAM/E,SAAW+E,EAAQ+hB,GAAU,EAC9EA,EAASvD,EAAKG,KAAK1jB,QAAU8mB,EAASgwB,IACtCA,EAAYhwB,GAChB6I,EAAM5vB,KAAK,CAAEwjB,OAAMozB,UAAS5xC,QAAO+hB,SAAQlQ,QAAOO,QAAQ,IAE9DrY,EAAMykB,EAAKne,GAAK,EAEpB,GAAI0xC,EAAY,IACZ,IAAK,IAAIt3C,EAAIq3C,EAAQr3C,EAAImwB,EAAM3vB,OAAQR,IAC/BmwB,EAAMnwB,GAAGsnB,OAAS6I,EAAMnwB,GAAG+jB,KAAKG,KAAK1jB,SACrC2vB,EAAMnwB,GAAGsnB,OAASgwB,GAC1BnnB,EAAM3vB,QAAU62C,EAAS,IACzBlnB,EAAMknB,GAAQ1/B,QAAS,GAE/B,GAAc,GAAV40B,GAA+Bpc,EAAM5sB,KAAKutB,GAAKA,EAAEqmB,QAAU,KAAOrmB,EAAE1Z,OAAS0Z,EAAEnZ,SAAU,CACzF,IAAIX,EAAU,GACd,IAAK,IAAI,KAAE+M,EAAI,MAAExe,EAAK,OAAE+hB,EAAM,MAAElQ,EAAK,OAAEO,KAAYwY,GAC3CxY,GAAWP,GACXJ,EAAQzW,KAAK,CAAEmF,KAAMqe,EAAKre,KAAO4hB,EAAQlY,OAAQ7J,EAAQ,MACjE,IAAIu4B,EAAY1+B,EAAM4X,QAAQA,GAC9B,MAAO,CAAEA,QAAS8mB,EAAWrmB,UAAWrY,EAAMqY,UAAUzM,IAAI8yB,EAAW,IAEtE,GAAc,GAAVyO,GAA6Bpc,EAAM5sB,KAAKutB,GAAKA,EAAEqmB,SAAW,GAAI,CACnE,IAAIngC,EAAU,GACd,IAAK,IAAI,KAAE+M,EAAI,QAAEozB,EAAO,MAAE5xC,KAAW4qB,EACjC,GAAIgnB,GAAW,EAAG,CACd,IAAIzxC,EAAOqe,EAAKre,KAAOyxC,EAASvxC,EAAKF,EAAOH,EAAM/E,OACjB,KAA7BujB,EAAKG,KAAKte,EAAKme,EAAKre,OACpBE,IACJoR,EAAQzW,KAAK,CAAEmF,OAAME,OAE7B,MAAO,CAAEoR,WAEb,OAAO,KC1KX,MAAMugC,GAAS,IACf,SAASC,GAAap4C,EAAOmO,EAAGC,GAC5B,IAAIkvB,EAAY91B,KAAKE,IAAIyG,EAAEwW,KAAMvW,EAAEuW,MAAO4Y,EAAU/1B,KAAKC,IAAI0G,EAAEwW,KAAMvW,EAAEuW,MACnE7e,EAAS,GACb,GAAIqI,EAAE1K,IAAM00C,IAAU/pC,EAAE3K,IAAM00C,IAAUhqC,EAAEiuB,IAAM,GAAKhuB,EAAEguB,IAAM,EAAG,CAC5D,IAAIic,EAAW7wC,KAAKE,IAAIyG,EAAE1K,IAAK2K,EAAE3K,KAAMo0C,EAASrwC,KAAKC,IAAI0G,EAAE1K,IAAK2K,EAAE3K,KAClE,IAAK,IAAI7C,EAAI08B,EAAW18B,GAAK28B,EAAS38B,IAAK,CACvC,IAAI+jB,EAAO3kB,EAAMmb,IAAIwJ,KAAK/jB,GACtB+jB,EAAKvjB,QAAUy2C,GACf/xC,EAAO3E,KAAK,OAAgBoF,MAAMoe,EAAKre,KAAO+xC,EAAU1zB,EAAKne,GAAKqxC,SAGzE,CACD,IAAIS,EAAW9wC,KAAKE,IAAIyG,EAAEiuB,IAAKhuB,EAAEguB,KAAMmc,EAAS/wC,KAAKC,IAAI0G,EAAEiuB,IAAKhuB,EAAEguB,KAClE,IAAK,IAAIx7B,EAAI08B,EAAW18B,GAAK28B,EAAS38B,IAAK,CACvC,IAAI+jB,EAAO3kB,EAAMmb,IAAIwJ,KAAK/jB,GACtBM,EAAQ,eAAWyjB,EAAKG,KAAMwzB,EAAUt4C,EAAMmkB,SAAS,GAC3D,GAAIjjB,GAAS,EAAG,CACZ,IAAImB,EAAM,eAAWsiB,EAAKG,KAAMyzB,EAAQv4C,EAAMmkB,SAC9Cre,EAAO3E,KAAK,OAAgBoF,MAAMoe,EAAKre,KAAOpF,EAAOyjB,EAAKre,KAAOjE,MAI7E,OAAOyD,EAEX,SAAS0yC,GAAe3+B,EAAMqR,GAC1B,IAAIjU,EAAM4C,EAAKmf,YAAYnf,EAAKkG,SAASzZ,MACzC,OAAO2Q,EAAMzP,KAAK29B,MAAM39B,KAAKixC,KAAKxhC,EAAImT,KAAOc,GAAKrR,EAAK6+B,yBAA2B,EAEtF,SAASC,GAAO9+B,EAAMV,GAClB,IAAIzS,EAASmT,EAAK++B,YAAY,CAAE1tB,EAAG/R,EAAM0/B,QAAS1f,EAAGhgB,EAAM6V,UAAW,GAClErK,EAAO9K,EAAK7Z,MAAMmb,IAAIyJ,OAAOle,GAASjD,EAAMiD,EAASie,EAAKre,KAC1D81B,EAAM34B,EAAM00C,IAAU,EACpB10C,GAAOkhB,EAAKvjB,OAASo3C,GAAe3+B,EAAMV,EAAM0/B,SAC5C,eAAYl0B,EAAKG,KAAMjL,EAAK7Z,MAAMmkB,QAASzd,EAASie,EAAKre,MACnE,MAAO,CAAEqe,KAAMA,EAAK6L,OAAQ4L,MAAK34B,OAErC,SAASq1C,GAAwBj/B,EAAMV,GACnC,IAAIjY,EAAQy3C,GAAO9+B,EAAMV,GAAQ4/B,EAAWl/B,EAAK7Z,MAAMqY,UACvD,OAAKnX,EAEE,CACH,OAAOic,GACH,GAAIA,EAAO7E,WAAY,CACnB,IAAI0gC,EAAW77B,EAAOvF,QAAQyJ,OAAOlE,EAAOtE,WAAWsC,IAAIwJ,KAAKzjB,EAAMyjB,MAAMre,MACxE2yC,EAAU97B,EAAOnd,MAAMmb,IAAIyJ,OAAOo0B,GACtC93C,EAAQ,CAAEyjB,KAAMs0B,EAAQzoB,OAAQ4L,IAAKl7B,EAAMk7B,IAAK34B,IAAK+D,KAAKE,IAAIxG,EAAMuC,IAAKw1C,EAAQ73C,SACjF23C,EAAWA,EAASntC,IAAIuR,EAAOvF,WAGvC,IAAIuB,EAAO+/B,EAASC,GAChB,IAAI32C,EAAMm2C,GAAO9+B,EAAMV,GACvB,IAAK3W,EACD,OAAOu2C,EACX,IAAIjzC,EAASsyC,GAAav+B,EAAK7Z,MAAOkB,EAAOsB,GAC7C,OAAKsD,EAAO1E,OAER+3C,EACO,OAAgB9oC,OAAOvK,EAAOjF,OAAOk4C,EAASjzC,SAE9C,OAAgBuK,OAAOvK,GAJvBizC,IAhBR,KA+Bf,SAASK,GAAqBjxC,GAC1B,IAAIzH,GAAsB,OAAZyH,QAAgC,IAAZA,OAAqB,EAASA,EAAQkxC,cAAgB,CAAC9/B,GAAKA,EAAE+/B,QAAsB,GAAZ//B,EAAEkxB,QAC5G,OAAO,OAAW8O,oBAAoB5/B,GAAG,CAACE,EAAMV,IAAUzY,EAAOyY,GAAS2/B,GAAwBj/B,EAAMV,GAAS,M,iBCxErH,IAAIqgC,GAAY,EAoBhB,MAAMC,GAIF,YAKAltC,EAKAxK,EAIA23C,GACIj5C,KAAK8L,IAAMA,EACX9L,KAAKsB,KAAOA,EACZtB,KAAKi5C,SAAWA,EAIhBj5C,KAAKmH,GAAK4xC,KASd,cAAch5C,GACV,GAAe,OAAXA,QAA8B,IAAXA,OAAoB,EAASA,EAAOuB,KACvD,MAAM,IAAI8T,MAAM,sCACpB,IAAI8jC,EAAM,IAAIF,GAAI,GAAI,KAAM,IAE5B,GADAE,EAAIptC,IAAIpL,KAAKw4C,GACTn5C,EACA,IAAK,IAAI2T,KAAK3T,EAAO+L,IACjBotC,EAAIptC,IAAIpL,KAAKgT,GACrB,OAAOwlC,EAcX,wBACI,IAAIC,EAAM,IAAIC,GACd,OAAQF,GACAA,EAAID,SAAStnC,QAAQwnC,IAAQ,EACtBD,EACJE,GAASnpC,IAAIipC,EAAI53C,MAAQ43C,EAAKA,EAAID,SAAS74C,OAAO+4C,GAAK1rC,KAAK,CAACC,EAAGC,IAAMD,EAAEvG,GAAKwG,EAAExG,MAIlG,IAAIkyC,GAAiB,EACrB,MAAMD,GACF,cACIp5C,KAAKs5C,UAAY,GACjBt5C,KAAKmH,GAAKkyC,KAEd,WAAW/3C,EAAMi4C,GACb,IAAKA,EAAK54C,OACN,OAAOW,EACX,IAAIuuB,EAAS0pB,EAAK,GAAGD,UAAU1lC,KAAKF,GAAKA,EAAEpS,MAAQA,GAAQk4C,GAAUD,EAAM7lC,EAAEulC,WAC7E,GAAIppB,EACA,OAAOA,EACX,IAAI/jB,EAAM,GAAIotC,EAAM,IAAIF,GAAIltC,EAAKxK,EAAMi4C,GACvC,IAAK,IAAInpB,KAAKmpB,EACVnpB,EAAEkpB,UAAU54C,KAAKw4C,GACrB,IAAIniC,EAAU0iC,GAAQF,GACtB,IAAK,IAAIx5C,KAAUuB,EAAKwK,IACpB,IAAK,IAAIwH,KAAUyD,EACfjL,EAAIpL,KAAK04C,GAASnpC,IAAIlQ,EAAQuT,IACtC,OAAO4lC,GAGf,SAASM,GAAU9rC,EAAGC,GAClB,OAAOD,EAAE/M,QAAUgN,EAAEhN,QAAU+M,EAAEw+B,MAAM,CAACzhB,EAAGtqB,IAAMsqB,GAAK9c,EAAExN,IAE5D,SAASs5C,GAAQhxC,GACb,IAAI7E,EAAS,CAAC6E,GACd,IAAK,IAAItI,EAAI,EAAGA,EAAIsI,EAAM9H,OAAQR,IAC9B,IAAK,IAAIuN,KAAK+rC,GAAQhxC,EAAMxF,MAAM,EAAG9C,GAAGC,OAAOqI,EAAMxF,MAAM9C,EAAI,KAC3DyD,EAAOlD,KAAKgN,GAEpB,OAAO9J,EAsDX,SAAS81C,GAAUlpC,GACf,IAAImpC,EAAS5oC,OAAOnB,OAAO,MAC3B,IAAK,IAAI/E,KAAQ2F,EAAM,CACnB,IAAIopC,EAAOppC,EAAK3F,GACX0J,MAAMgY,QAAQqtB,KACfA,EAAO,CAACA,IACZ,IAAK,IAAI3lC,KAAQpJ,EAAKhH,MAAM,KACxB,GAAIoQ,EAAM,CACN,IAAI4lC,EAAS,GAAIC,EAAO,EAAgBzhC,EAAOpE,EAC/C,IAAK,IAAIxU,EAAM,IAAK,CAChB,GAAY,OAAR4Y,GAAiB5Y,EAAM,GAAKA,EAAM,GAAKwU,EAAKtT,OAAQ,CACpDm5C,EAAO,EACP,MAEJ,IAAI1pB,EAAI,8BAA8B1I,KAAKrP,GAC3C,IAAK+X,EACD,MAAM,IAAI5pB,WAAW,iBAAmByN,GAG5C,GAFA4lC,EAAOn5C,KAAa,KAAR0vB,EAAE,GAAY,KAAkB,KAAXA,EAAE,GAAG,GAAY9M,KAAK3Q,MAAMyd,EAAE,IAAMA,EAAE,IACvE3wB,GAAO2wB,EAAE,GAAGzvB,OACRlB,GAAOwU,EAAKtT,OACZ,MACJ,IAAIuB,EAAO+R,EAAKxU,KAChB,GAAIA,GAAOwU,EAAKtT,QAAkB,KAARuB,EAAa,CACnC43C,EAAO,EACP,MAEJ,GAAY,KAAR53C,EACA,MAAM,IAAIsE,WAAW,iBAAmByN,GAC5CoE,EAAOpE,EAAKhR,MAAMxD,GAEtB,IAAI6E,EAAOu1C,EAAOl5C,OAAS,EAAG8N,EAAQorC,EAAOv1C,GAC7C,IAAKmK,EACD,MAAM,IAAIjI,WAAW,iBAAmByN,GAC5C,IAAI8lC,EAAO,IAAIC,GAAKJ,EAAME,EAAMx1C,EAAO,EAAIu1C,EAAO52C,MAAM,EAAGqB,GAAQ,MACnEq1C,EAAOlrC,GAASsrC,EAAKtsC,KAAKksC,EAAOlrC,KAG7C,OAAOwrC,GAAat7B,IAAIg7B,GAE5B,MAAMM,GAA4B,IAAI,OAChCC,GAA8B,OAAM1oC,OAAO,CAC7C,QAAQ2oC,GAAY,OAAOA,EAASx5C,OAAS,GAAey5C,cAAcD,GAAY,QAEpFE,GAAsC,OAAM7oC,OAAO,CACrD,QAAQwC,GAAU,OAAOA,EAAOrT,OAASqT,EAAO,GAAG3F,MAAQ,QAE/D,SAASisC,GAAkB/6C,GACvB,OAAOA,EAAMkY,MAAMyiC,KAAmB36C,EAAMkY,MAAM4iC,IAEtD,MAAML,GACF,YAAYJ,EAAME,EAAMv5C,EAAS2B,GAC7BlC,KAAK45C,KAAOA,EACZ55C,KAAK85C,KAAOA,EACZ95C,KAAKO,QAAUA,EACfP,KAAKkC,KAAOA,EAEhB,KAAKgC,GACD,OAAKA,GAASA,EAAMrD,MAAQb,KAAKa,OAC7Bb,KAAKkC,KAAOgC,EACLlE,OAEXkE,EAAMhC,KAAOlC,KAAKyN,KAAKvJ,EAAMhC,MACtBgC,GAEX,YAAc,OAAOlE,KAAKO,QAAUP,KAAKO,QAAQI,OAAS,GAM9D,MAAM,GACF,YAAY6P,EAAM9I,GAEd,IAAI6yC,EACJ,SAASC,EAAIhqC,GACT,IAAIye,EAAM,QAAYwrB,UAEtB,OADCF,IAAYA,EAAUxpC,OAAOnB,OAAO,QAAQ,IAAMqf,GAAOze,EACnDye,EALXjvB,KAAKmL,IAAM4F,OAAOnB,OAAO,MAOzB5P,KAAKghB,IAA4B,iBAAftZ,EAAQsZ,IAAkBtZ,EAAQsZ,IAAMtZ,EAAQsZ,IAAMw5B,EAAI9yC,EAAQsZ,KAAO,KAC3F,IAAK,IAAIiK,KAASza,EAAM,CACpB,IAAIye,GAAOhE,EAAMpC,OAAS2xB,EAAIzpC,OAAOyC,OAAO,GAAIyX,EAAO,CAAEiuB,IAAK,UACzDl5C,KAAKghB,IAAM,IAAMhhB,KAAKghB,IAAM,IAC7B44B,EAAO3uB,EAAMiuB,IACjB,GAAK3kC,MAAMgY,QAAQqtB,GAGf,IAAK,IAAIV,KAAOU,EACZ55C,KAAKmL,IAAI+tC,EAAI/xC,IAAM8nB,OAHvBjvB,KAAKmL,IAAIyuC,EAAKzyC,IAAM8nB,EAK5BjvB,KAAK06C,OAASH,EAAU,IAAI,QAAYA,GAAW,KACnDv6C,KAAK+pC,MAAQriC,EAAQqiC,OAAS,KAC9B/pC,KAAKqO,MAAQrO,KAAKqO,MAAM+T,KAAKpiB,MAC7B,IAAIulC,EAAM,CAACoV,IACP36C,KAAK06C,QACLnV,EAAI7kC,KAAK,OAAWk6C,YAAY1hC,GAAGlZ,KAAK06C,SAC5C16C,KAAK0d,UAAY6nB,EAAInlC,OAAO85C,GAAehhC,GAAGlZ,OAC9CA,KAAKuH,SAAWg+B,EAAInlC,OAAOi6C,GAAuBnhC,GAAGlZ,OAMzD,MAAMk5C,EAAKnP,GACP,GAAI/pC,KAAK+pC,OAASA,GAAS/pC,KAAK+pC,MAC5B,OAAO,KACX,IAAK,IAAIr2B,KAAKwlC,EAAIptC,IAAK,CACnB,IAAIuC,EAAQrO,KAAKmL,IAAIuI,EAAEvM,IACvB,QAAcsK,IAAVpD,EAGA,OAFIqF,GAAKwlC,IACLl5C,KAAKmL,IAAI+tC,EAAI/xC,IAAMkH,GAChBA,EAGf,OAAOrO,KAAKmL,IAAI+tC,EAAI/xC,IAAMnH,KAAKghB,IAOnC,qBAAqB65B,GACjB,GAAqB,GAAjBA,EAAOl6C,OACP,OAAOk6C,EAAO,GAAGxsC,MACrB,IAAIysC,EAAQD,EAAOn3C,KAAKD,GAAKA,EAAEsmC,YAASt4B,EAAYV,OAAOnB,OAAO,MAClE,MAAO,CAACspC,EAAKnP,KACT,IAAI57B,EAAS2sC,GAASA,EAAM5B,EAAI/xC,IAChC,QAAesK,IAAXtD,EACA,OAAOA,EACX,IAAIvK,EAAS,KACb,IAAK,IAAIqnB,KAAS4vB,EAAQ,CACtB,IAAIp4C,EAAQwoB,EAAM5c,MAAM6qC,EAAKnP,GACzBtnC,IACAmB,EAASA,EAASA,EAAS,IAAMnB,EAAQA,GAIjD,OAFIq4C,IACAA,EAAM5B,EAAI/xC,IAAMvD,GACbA,GAmBf,cAAcg9B,EAAOl5B,GACjB,OAAO,IAAI,GAAek5B,EAAOl5B,GAAW,IAQhD,WAAWnI,EAAO25C,EAAKnP,GACnB,IAAI9e,EAAQqvB,GAAkB/6C,GAC9B,OAAO0rB,GAASA,EAAMiuB,EAAKnP,GAAS,OAASvvB,OA8BrD,MAAM,GACF,YAAYpB,GACRpZ,KAAK+6C,UAAYhqC,OAAOnB,OAAO,MAC/B5P,KAAKqJ,KAAOoU,EAAWrE,EAAK7Z,OAC5BS,KAAK2xB,YAAc3xB,KAAKg7C,UAAU5hC,EAAMkhC,GAAkBlhC,EAAK7Z,QAEnE,OAAOmd,GACH,IAAIrT,EAAOoU,EAAWf,EAAOnd,OAAQ0rB,EAAQqvB,GAAkB59B,EAAOnd,OAClE07C,EAAchwB,GAASvO,EAAOtE,WAAWX,MAAMyiC,IAC/C7wC,EAAK1I,OAAS+b,EAAOtD,KAAKkG,SAASvZ,KAAOk1C,GAAe5xC,EAAKvI,MAAQd,KAAKqJ,KAAKvI,KAChFd,KAAK2xB,YAAc3xB,KAAK2xB,YAAYxmB,IAAIuR,EAAOvF,UAE1C9N,GAAQrJ,KAAKqJ,MAAQqT,EAAOmQ,iBAAmBouB,KACpDj7C,KAAKqJ,KAAOA,EACZrJ,KAAK2xB,YAAc3xB,KAAKg7C,UAAUt+B,EAAOtD,KAAM6R,IAGvD,UAAU7R,EAAM/K,GACZ,IAAKA,IAAUrO,KAAKqJ,KAAK1I,OACrB,OAAO,OAAW6Z,KACtB,IAAIuZ,EAAU,IAAI,QAClB,IAAK,IAAI,KAAEluB,EAAI,GAAEE,KAAQqT,EAAK8sB,cAC1BgV,GAAmBl7C,KAAKqJ,KAAMxD,EAAME,EAAIsI,EAAO,CAACxI,EAAME,EAAIklB,KACtD8I,EAAQpV,IAAI9Y,EAAME,EAAI/F,KAAK+6C,UAAU9vB,KAAWjrB,KAAK+6C,UAAU9vB,GAAS,OAAW+I,KAAK,CAAEnL,MAAOoC,QAGzG,OAAO8I,EAAQrH,UAKvB,MAAMiuB,GAA+B,OAAKxyC,KAAkB,OAAW4Z,UAAU,GAAiB,CAC9F4P,YAAahuB,GAAKA,EAAEguB,eAElBwpB,GAAY,CAAC,IACnB,MAAM,GACF,YAAYzjB,EAAIzM,EAAOwI,GACnBzzB,KAAK03B,GAAKA,EACV13B,KAAKirB,MAAQA,EACbjrB,KAAKyzB,KAAOA,EACZzzB,KAAK6oB,MAAQ,GAEjB,UAAU6O,EAAIzI,GACNA,GAAOjvB,KAAK6oB,QACZ7oB,KAAKo7C,MAAM1jB,GACPA,EAAK13B,KAAK03B,KACV13B,KAAK03B,GAAKA,GACd13B,KAAK6oB,MAAQoG,GAGrB,MAAMlpB,GACEA,EAAK/F,KAAK03B,IAAM13B,KAAK6oB,OACrB7oB,KAAKyzB,KAAKzzB,KAAK03B,GAAI3xB,EAAI/F,KAAK6oB,OAEpC,eAAetf,EAAQ1D,EAAME,EAAIs1C,EAAgBx6C,EAAOkpC,GACpD,IAAI,KAAEjpC,EAAM+E,KAAMpF,EAAOsF,GAAInE,GAAQ2H,EACrC,GAAI9I,GAASsF,GAAMnE,GAAOiE,EACtB,OACJs1C,GAAUt6C,GAASC,EAAKyQ,KACpBzQ,EAAK8d,QACLmrB,EAAQjpC,GACZ,IAAImuB,EAAMosB,EACNtB,EAAOj5C,EAAK+J,KAAKovC,IAAeqB,GAAS,EAC7C,MAAOvB,EAAM,CACT,IAAKA,EAAKx5C,SAAWg7C,GAAaxB,EAAKx5C,QAAS46C,GAAWt6C,GAAQ,CAC/D,IAAK,IAAIq4C,KAAOa,EAAKH,KAAM,CACvB,IAAI4B,EAAKx7C,KAAKirB,MAAMiuB,EAAKnP,GACrByR,IACIvsB,IACAA,GAAO,KACXA,GAAOusB,EACU,GAAbzB,EAAKD,KACLuB,IAAmBA,EAAiB,IAAM,IAAMG,EAC9B,GAAbzB,EAAKD,OACVwB,GAAS,IAGrB,MAEJvB,EAAOA,EAAK73C,KAGhB,GADAlC,KAAKy7C,UAAUlyC,EAAO1D,KAAMopB,GACxBqsB,EACA,OACJ,IAAIp9B,EAAU3U,EAAOF,MAAQE,EAAOF,KAAKwB,KAAK,OAASqT,SACvD,GAAIA,GAAWA,EAAQC,QAAS,CAC5B,IAAI1P,EAAQlF,EAAO+U,KAAKC,MAAML,EAAQC,QAAQ,GAAGtY,KAAOpF,EAAO,GAC3Di7C,EAAWnyC,EAAO8b,aACtB,IAAK,IAAIllB,EAAI,EAAGV,EAAMgB,GAAQN,IAAK,CAC/B,IAAI+B,EAAO/B,EAAI+d,EAAQC,QAAQxd,OAASud,EAAQC,QAAQhe,GAAK,KACzDw7C,EAAUz5C,EAAOA,EAAK2D,KAAOpF,EAAQmB,EACrCg6C,EAAY70C,KAAKC,IAAInB,EAAMpG,GAAMo8C,EAAU90C,KAAKE,IAAIlB,EAAI41C,GAC5D,GAAIC,EAAYC,GAAWH,EACvB,MAAOnyC,EAAO1D,KAAOg2C,EAGjB,GAFA77C,KAAK87C,eAAevyC,EAAQqyC,EAAWC,EAASR,EAAgBx6C,EAAQ,EAAGkpC,GAC3E/pC,KAAKy7C,UAAU10C,KAAKE,IAAIlB,EAAIwD,EAAOxD,IAAKkpB,GACpC1lB,EAAOxD,IAAM41C,IAAYpyC,EAAOO,cAChC,MAGZ,IAAK5H,GAAQy5C,EAAU51C,EACnB,MACJtG,EAAMyC,EAAK6D,GAAKtF,EACZhB,EAAMoG,IACN7F,KAAK87C,eAAertC,EAAMlF,OAAQxC,KAAKC,IAAInB,EAAM3D,EAAK2D,KAAOpF,GAAQsG,KAAKE,IAAIlB,EAAItG,GAAM47C,EAAgBx6C,EAAOqd,EAAQ7U,KAAKvI,MAC5Hd,KAAKy7C,UAAUh8C,EAAKwvB,IAGxBysB,GACAnyC,EAAOxJ,cAEV,GAAIwJ,EAAO8b,aAAc,CAC1B,GACI,KAAI9b,EAAOxD,IAAMF,GAAjB,CAEA,GAAI0D,EAAO1D,MAAQE,EACf,MACJ/F,KAAK87C,eAAevyC,EAAQ1D,EAAME,EAAIs1C,EAAgBx6C,EAAQ,EAAGkpC,GACjE/pC,KAAKy7C,UAAU10C,KAAKE,IAAIlB,EAAIwD,EAAOxD,IAAKkpB,UACnC1lB,EAAOO,eAChBP,EAAOxJ,WAInB,SAASm7C,GAAmB7xC,EAAMxD,EAAME,EAAIklB,EAAOwI,GAC/C,IAAIM,EAAU,IAAI,GAAiBluB,EAAMolB,EAAOwI,GAChDM,EAAQ+nB,eAAezyC,EAAKE,SAAU1D,EAAME,EAAI,GAAI,EAAGsD,EAAKvI,MAC5DizB,EAAQqnB,MAAMr1C,GAElB,SAASw1C,GAAah7C,EAASjB,EAAOuB,GAClC,GAAIN,EAAQI,OAASE,EAAQ,EACzB,OAAO,EACX,IAAK,IAAIk7C,EAAIl7C,EAAQ,EAAGV,EAAII,EAAQI,OAAS,EAAGR,GAAK,EAAGA,IAAK47C,IAAK,CAC9D,IAAIjW,EAAQvlC,EAAQJ,GACpB,GAAI2lC,GAASA,GAASxmC,EAAMy8C,GACxB,OAAO,EAEf,OAAO,EAEX,MAAMroC,GAAIslC,GAAIxnC,OACR8lC,GAAuB5jC,KAAK,GAAoBA,KAAKsoC,GAAwBtoC,GAAE,IAAOuoC,GAA4BvoC,GAAE,IAAOwoC,GAAuBxoC,KAAKqL,GAAsBrL,GAAEwoC,IAAUnsB,GAAsBrc,GAAEwoC,IAAU,GAAuBxoC,KAAKyoC,GAAuBzoC,GAAE,IAAU0oC,GAAuB1oC,KAAK2oC,GAAwB3oC,KAAK4oC,GAA2B5oC,KAAK,GAAuBA,GAAE4oC,IAAcC,GAAoB7oC,KAsB9akmC,GAAO,CAITtC,WAIAkF,YAA0B9oC,GAAE4jC,IAI5BmF,aAA2B/oC,GAAE4jC,IAI7BoF,WAAyBhpC,GAAE4jC,IAI3B/lC,KAAI,GAIJorC,aAA2BjpC,GAAE,IAI7BsoC,SAAUA,GAIVY,QAAsBlpC,GAAEsoC,IAIxBC,aAAcA,GAIdY,cAA4BnpC,GAAEuoC,IAI9BlxB,UAAwBrX,GAAE,IAI1BopC,UAAwBppC,GAAE,IAI1BqpC,UAAwBrpC,GAAE,IAI1BspC,UAAwBtpC,GAAE,IAI1BwoC,WAIAn9B,UAIAk+B,UAAwBvpC,GAAEqL,IAI1Bm+B,UAAwBxpC,GAAEqL,IAI1Bo+B,eAA6BzpC,GAAEqL,IAI/BgR,UAIAqtB,QAAsB1pC,GAAEqc,IAIxBstB,MAAoB3pC,GAAEqc,IAItButB,KAAmB5pC,GAAEwoC,IAIrBlV,OAAqBtzB,GAAEwoC,IAKvBqB,OAAqB7pC,GAAEwoC,IAIvBpyB,MAAoBpW,GAAEwoC,IAItBsB,IAAkB9pC,GAAEwoC,IAIpBE,WAKAzL,KAAmBj9B,GAAE0oC,IAIrBqB,KAAmB/pC,GAAE0oC,IAIrBsB,KAAmBhqC,GAAE0oC,IAIrB34B,KAAmB/P,GAAE0oC,IAIrBuB,SAAuBjqC,GAAE0oC,IAIzBwB,gBAA8BlqC,GAAE0oC,IAIhCyB,eAA6BnqC,GAAE0oC,IAI/B0B,kBAAgCpqC,GAAE0oC,IAKlC2B,cAA4BrqC,GAAE0oC,IAI9BC,YAIA2B,cAA4BtqC,GAAE2oC,IAI9B4B,mBAAiCvqC,GAAE2oC,IAInC6B,cAA4BxqC,GAAE2oC,IAI9B8B,gBAA8BzqC,GAAE2oC,IAIhC+B,gBAA8B1qC,GAAE2oC,IAIhCgC,eAA6B3qC,GAAE2oC,IAI/BiC,mBAAiC5qC,GAAE2oC,IAInCkC,aAA2B7qC,GAAE2oC,IAI7BmC,gBAA8B9qC,GAAE2oC,IAIhCC,eAKAmC,UAAwB/qC,GAAE4oC,IAI1BtmB,QAAO,GAKP0oB,aAA2BhrC,GAAE,IAK7BirC,cAA4BjrC,GAAE,IAK9BkrC,MAAoBlrC,GAAE,IAKtBmrC,MAAoBnrC,GAAE,IAItBu2B,QAAO,GAIPkS,WAIA2C,SAAuBprC,GAAEyoC,IAIzB4C,SAAuBrrC,GAAEyoC,IAIzB6C,SAAuBtrC,GAAEyoC,IAIzB8C,SAAuBvrC,GAAEyoC,IAIzB+C,SAAuBxrC,GAAEyoC,IAIzBgD,SAAuBzrC,GAAEyoC,IAIzBiD,iBAA+B1rC,GAAE,IAIjCs4B,KAAmBt4B,GAAE,IAIrB2rC,MAAoB3rC,GAAE,IAItB4rC,SAAuB5rC,GAAE,IAIzB6rC,OAAqB7rC,GAAE,IAIvB8rC,KAAmB9rC,GAAE,IAKrB+rC,UAAwB/rC,GAAE,IAK1BgsC,cAA4BhsC,GAAE,IAI9BisC,SAAuBjsC,KAIvBksC,QAAsBlsC,KAItBmsC,QAAsBnsC,KAItBosC,QAAsBpsC,KAItB6oC,QAKAwD,aAA2BrsC,GAAE6oC,IAK7B5kC,WAAyBjE,GAAE6oC,IAK3ByD,sBAAoCtsC,GAAE6oC,IAMtC0D,WAAyBjH,GAAIkH,iBAM7BC,SAAuBnH,GAAIkH,iBAO3BE,SAAuBpH,GAAIkH,iBAM3BG,SAAuBrH,GAAIkH,iBAK3BI,MAAoBtH,GAAIkH,iBASxBK,QAAsBvH,GAAIkH,kBAKxBM,GAAqC,GAAehvC,OAAO,CAC7D,CAAE0nC,IAAKU,GAAK4F,KACR9J,eAAgB,aACpB,CAAEwD,IAAKU,GAAKuC,QACRzG,eAAgB,YAChB+K,WAAY,QAChB,CAAEvH,IAAKU,GAAK0F,SACR1J,UAAW,UACf,CAAEsD,IAAKU,GAAK2F,OACRkB,WAAY,QAChB,CAAEvH,IAAKU,GAAK8F,cACRhK,eAAgB,gBACpB,CAAEwD,IAAKU,GAAKwC,QACRtyB,MAAO,QACX,CAAEovB,IAAK,CAACU,GAAK8D,KAAM9D,GAAK0D,KAAM1D,GAAK4D,IAAK5D,GAAKwF,iBAAkBxF,GAAKkD,WAChEhzB,MAAO,QACX,CAAEovB,IAAK,CAACU,GAAKsC,QAAStC,GAAK+F,UACvB71B,MAAO,QACX,CAAEovB,IAAK,CAACU,GAAK76B,OAAQ66B,GAAKgG,SACtB91B,MAAO,QACX,CAAEovB,IAAK,CAACU,GAAK5S,OAAQ4S,GAAK2D,OAAqB3D,GAAK2G,QAAQ3G,GAAK76B,SAC7D+K,MAAO,QACX,CAAEovB,IAAkBU,GAAKqG,WAAWrG,GAAK+C,cACrC7yB,MAAO,QACX,CAAEovB,IAAkBU,GAAK0G,MAAM1G,GAAK+C,cAChC7yB,MAAO,QACX,CAAEovB,IAAK,CAACU,GAAKoC,SAAUpC,GAAKmD,WACxBjzB,MAAO,QACX,CAAEovB,IAAKU,GAAK7uB,UACRjB,MAAO,QACX,CAAEovB,IAAK,CAAcU,GAAK2G,QAAQ3G,GAAK+C,cAAe/C,GAAKoD,WACvDlzB,MAAO,QACX,CAAEovB,IAAkBU,GAAKqG,WAAWrG,GAAKqC,cACrCnyB,MAAO,QACX,CAAEovB,IAAKU,GAAKtC,QACRxtB,MAAO,QACX,CAAEovB,IAAKU,GAAK2C,KACRzyB,MAAO,WACX,CAAEovB,IAAKU,GAAKkG,QACRh2B,MAAO,UAkDJ8vB,GAAK4F,KACL5F,GAAKuC,QACLvC,GAAK0F,SACL1F,GAAK2F,OACL3F,GAAKwC,QACLxC,GAAK8D,KACL9D,GAAK0D,KACL1D,GAAK4D,IACL5D,GAAKkD,UACLlD,GAAK+F,SACL/F,GAAKgG,QACLhG,GAAKsC,QACLtC,GAAK76B,OACL66B,GAAK7pB,OACJ6pB,GAAK5S,OAAQ4S,GAAK2D,OAAkC3D,GAAK76B,OAC1D66B,GAAK+C,aACmB/C,GAAK+C,aACA/C,GAAK+C,aACR/C,GAAK+C,aACF/C,GAAKqC,aAClCrC,GAAKoC,SACLpC,GAAKmD,UACLnD,GAAK7uB,UACL6uB,GAAKoD,UACLpD,GAAKqC,aACLrC,GAAKyC,SACLzC,GAAKtC,QACLsC,GAAK2C,KACL3C,GAAKkG,QACLlG,GAAK0C,YCv/BhB,MAAMoE,GACF,YAAY76C,EAAME,EAAI46C,GAClB3gD,KAAK6F,KAAOA,EACZ7F,KAAK+F,GAAKA,EACV/F,KAAK2gD,WAAaA,GAG1B,MAAM,GACF,YAAYC,EAAalgB,EAAO4H,GAC5BtoC,KAAK4gD,YAAcA,EACnB5gD,KAAK0gC,MAAQA,EACb1gC,KAAKsoC,SAAWA,EAEpB,YAAYsY,EAAalgB,EAAOnhC,GAC5B,IAAI8F,EAAS,OAAWyG,IAAI80C,EAAYz1C,IAAK4wC,GAElCA,EAAEl2C,MAAQk2C,EAAEh2C,IAAOg2C,EAAEl2C,MAAQk2C,EAAEh2C,GAAK,GAAKxG,EAAMmb,IAAIyJ,OAAO43B,EAAEl2C,MAAME,IAAMg2C,EAAEl2C,KAC3E,OAAWktB,OAAO,CAChBA,OAAQ,IAAI,GAAiBgpB,GAC7B4E,WAAY5E,IACbj2C,MAAMi2C,EAAEl2C,MACT,OAAWmuB,KAAK,CACd6sB,WAAY,CAAEh4B,MAAO,6BAA+BkzB,EAAE+E,UACtDH,WAAY5E,IACbj2C,MAAMi2C,EAAEl2C,KAAMk2C,EAAEh2C,MACvB,GACJ,OAAO,IAAI,GAAUV,EAAQq7B,EAAOqgB,GAAe17C,KAG3D,SAAS07C,GAAeH,EAAaD,EAAa,KAAMtmC,EAAQ,GAC5D,IAAI1G,EAAQ,KAOZ,OANAitC,EAAYlvB,QAAQrX,EAAO,IAAK,CAACxU,EAAME,GAAMyK,WACzC,IAAImwC,GAAcnwC,EAAKmwC,YAAcA,EAGrC,OADAhtC,EAAQ,IAAI+sC,GAAmB76C,EAAME,EAAIyK,EAAKmwC,aACvC,IAEJhtC,EAEX,SAASqtC,GAAgBzhD,EAAO0a,GAC5B,OAAO1a,EAAMua,MAAMmnC,IAAW,GAAShnC,EAAUA,EAAQ7Z,OAAO,OAAYyxB,aAAa3Y,GAAG,CACxF+nC,GACA,OAAWtvB,YAAYzB,QAAQ,CAAC+wB,IAAY1hD,IACxC,IAAI,SAAE+oC,EAAQ,MAAE5H,GAAUnhC,EAAMua,MAAMmnC,IACtC,OAAQ3Y,GAAa5H,GAAS4H,EAASziC,MAAQyiC,EAASviC,GAAuB,OAAW+F,IAAI,CAC1Fo1C,GAAWp7C,MAAMwiC,EAASziC,KAAMyiC,EAASviC,MADgB,OAAWyU,OAI5E,gBAAa2mC,IACb,MAiBR,MAAMC,GAAoC,OAAY5vC,SAChD,GAA2B,OAAYA,SACvC6vC,GAAkC,OAAY7vC,SAC9CyvC,GAAyB,OAAWzvC,OAAO,CAC7C,SACI,OAAO,IAAI,GAAU,OAAWgJ,KAAM,KAAM,OAEhD,OAAO/X,EAAO+U,GACV,GAAIA,EAAGK,WAAY,CACf,IAAIqC,EAASzX,EAAMm+C,YAAYz1C,IAAIqM,EAAGL,SAAUmxB,EAAW,KAC3D,GAAI7lC,EAAM6lC,SAAU,CAChB,IAAIgZ,EAAS9pC,EAAGL,QAAQyJ,OAAOne,EAAM6lC,SAASziC,KAAM,GACpDyiC,EAAWyY,GAAe7mC,EAAQzX,EAAM6lC,SAASqY,WAAYW,IAAWP,GAAe7mC,EAAQ,KAAMonC,GAEzG7+C,EAAQ,IAAI,GAAUyX,EAAQzX,EAAMi+B,MAAO4H,GAE/C,IAAK,IAAItJ,KAAUxnB,EAAGyC,QACd+kB,EAAO1d,GAAG8/B,IACV3+C,EAAQ,GAAU4e,KAAK2d,EAAOv8B,MAAOA,EAAMi+B,MAAOlpB,EAAGjY,OAEhDy/B,EAAO1d,GAAG,IACf7e,EAAQ,IAAI,GAAUA,EAAMm+C,YAAa5hB,EAAOv8B,MAAQ,GAAU+wB,KAAO,KAAM/wB,EAAM6lC,UAEhFtJ,EAAO1d,GAAG+/B,MACf5+C,EAAQ,IAAI,GAAUA,EAAMm+C,YAAan+C,EAAMi+B,MAAO1B,EAAOv8B,QAGrE,OAAOA,GAEXwqB,QAAShS,GAAK,CAAC6lB,GAAUj7B,KAAKoV,EAAGuS,GAAOA,EAAIkT,OACxC,OAAW/O,YAAY9rB,KAAKoV,EAAGxX,GAAKA,EAAEm9C,gBAS9C,MAAMM,GAA0B,OAAWltB,KAAK,CAAEnL,MAAO,qCACzD,SAASs4B,GAAY/nC,EAAM3Z,EAAK6J,GAC5B,IAAI,YAAEs3C,GAAgBxnC,EAAK7Z,MAAMua,MAAMmnC,IACnCttC,EAAQ,GAAI4tC,EAAa,IAAKC,EAAW,EAS7C,OARAZ,EAAYlvB,QAAQjyB,GAAO6J,EAAO,EAAI,EAAI,GAAI7J,GAAO6J,EAAO,EAAI,EAAI,GAAI,CAACzD,EAAME,GAAMyK,WAC7E/Q,GAAOoG,GAAQpG,GAAOsG,IACrBF,GAAQE,IAAQtG,EAAMoG,GAAQyD,EAAO,KAAO7J,EAAMsG,GAAMuD,EAAO,MAChEqK,EAAMjT,KAAK8P,EAAKmwC,YAChBY,EAAax6C,KAAKE,IAAIpB,EAAM07C,GAC5BC,EAAWz6C,KAAKC,IAAIjB,EAAIy7C,MAG3B7tC,EAAMhT,OAEJ,CACHlB,IAAK8hD,EACL3/C,IAAK4/C,EACL1zB,MAAO1U,EAAK7Z,MAAMmb,IAAIyJ,OAAOo9B,GAAYx7C,GAAKy7C,EAC9C,SACI,MAAO,CAAEr5B,IAAKs5B,GAAmBroC,EAAMzF,MANpC,KAUf,SAAS8tC,GAAmBroC,EAAMwnC,GAC9B,OAAO,GAAI,KAAM,CAAE/3B,MAAO,mBAAqB+3B,EAAYz1C,IAAI4wC,GAAK2F,GAAiBtoC,EAAM2iC,GAAG,KAKlG,MAAM4F,GAAiBvoC,IACnB,IAAIU,EAAQV,EAAK7Z,MAAMua,MAAMmnC,IAAW,GACnCnnC,GAAUA,EAAM4mB,OACjBtnB,EAAKO,SAAS,CAAEM,QAAS+mC,GAAgB5nC,EAAK7Z,MAAO,CAAC,GAAY2Z,IAAG,OACzE,IAAIwnB,EAAQD,GAASrnB,EAAM,GAAUoa,MAGrC,OAFIkN,GACAA,EAAMvY,IAAI4c,cAAc,qBAAqBb,SAC1C,GAKL0d,GAAkBxoC,IACpB,IAAIU,EAAQV,EAAK7Z,MAAMua,MAAMmnC,IAAW,GACxC,SAAKnnC,IAAUA,EAAM4mB,SAErBtnB,EAAKO,SAAS,CAAEM,QAAS,GAAYf,IAAG,MACjC,IAKL2oC,GAAkBzoC,IACpB,IAAIU,EAAQV,EAAK7Z,MAAMua,MAAMmnC,IAAW,GACxC,IAAKnnC,EACD,OAAO,EACX,IAAIwc,EAAMld,EAAK7Z,MAAMqY,UAAUvM,KAAMnJ,EAAO4X,EAAM8mC,YAAY5hC,KAAKsX,EAAIvwB,GAAK,GAC5E,SAAK7D,EAAKO,QACNP,EAAO4X,EAAM8mC,YAAY5hC,KAAK,IACzB9c,EAAKO,OAASP,EAAK2D,MAAQywB,EAAIzwB,MAAQ3D,EAAK6D,IAAMuwB,EAAIvwB,OAG/DqT,EAAKO,SAAS,CAAE/B,UAAW,CAAEwhB,OAAQl3B,EAAK2D,KAAMwhB,KAAMnlB,EAAK6D,IAAM6W,gBAAgB,KAC1E,IAQLklC,GAAa,CACf,CAAEhlC,IAAK,cAAeC,IAAK4kC,IAC3B,CAAE7kC,IAAK,KAAMC,IAAK8kC,KAyEtB,SAASE,GAAW92C,GAChB,IAAI+2C,EAAW,GACf,GAAI/2C,EACAA,EAAS,IAAK,IAAI,KAAEsG,KAAUtG,EAAS,CACnC,IAAK,IAAI9K,EAAI,EAAGA,EAAIoR,EAAK5Q,OAAQR,IAAK,CAClC,IAAIie,EAAK7M,EAAKpR,GACd,GAAI,WAAW4I,KAAKqV,KAAQ4jC,EAASt+C,KAAK8rB,GAAKA,EAAE8X,eAAiBlpB,EAAGkpB,eAAgB,CACjF0a,EAASthD,KAAK0d,GACd,SAASnT,GAGjB+2C,EAASthD,KAAK,IAEtB,OAAOshD,EAEX,SAASN,GAAiBtoC,EAAMunC,EAAYsB,GACxC,IAAI3nC,EACJ,IAAItJ,EAAOixC,EAAUF,GAAWpB,EAAW11C,SAAW,GACtD,OAAO,GAAI,KAAM,CAAE4d,MAAO,+BAAiC83B,EAAWG,UAAY,GAAI,OAAQ,CAAEj4B,MAAO,qBAAuB83B,EAAWuB,SAAwC,QAA7B5nC,EAAKqmC,EAAW11C,eAA4B,IAAPqP,OAAgB,EAASA,EAAGnP,IAAI,CAACvK,EAAQT,KAC9N,IAAI+zB,EAASpb,IACTA,EAAEW,iBACF,IAAI9F,EAAQotC,GAAe3nC,EAAK7Z,MAAMua,MAAMmnC,IAAWL,YAAaD,GAChEhtC,GACA/S,EAAOiO,MAAMuK,EAAMzF,EAAM9N,KAAM8N,EAAM5N,MAEzC,KAAEwL,GAAS3Q,EAAQuhD,EAAWnxC,EAAK7Q,GAAKoR,EAAKI,QAAQX,EAAK7Q,KAAO,EACjEiiD,EAAUD,EAAW,EAAI5wC,EAAO,CAACA,EAAKtO,MAAM,EAAGk/C,GAC/C,GAAI,IAAK5wC,EAAKtO,MAAMk/C,EAAUA,EAAW,IACzC5wC,EAAKtO,MAAMk/C,EAAW,IAC1B,OAAO,GAAI,SAAU,CACjBrhD,KAAM,SACN+nB,MAAO,sBACPmK,QAASkB,EACTmuB,YAAanuB,EACb,aAAc,YAAY3iB,IAAO4wC,EAAW,EAAI,GAAK,iBAAiBnxC,EAAK7Q,WAC5EiiD,KACHzB,EAAWtwC,QAAU,GAAI,MAAO,CAAEwY,MAAO,uBAAyB83B,EAAWtwC,SAErF,MAAM,WAAyB,OAC3B,YAAYswC,GACRlwC,QACAzQ,KAAK2gD,WAAaA,EAEtB,GAAGz8C,GAAS,OAAOA,EAAMy8C,YAAc3gD,KAAK2gD,WAC5C,QACI,OAAO,GAAI,OAAQ,CAAE93B,MAAO,6BAA+B7oB,KAAK2gD,WAAWG,YAGnF,MAAMwB,GACF,YAAYlpC,EAAMunC,GACd3gD,KAAK2gD,WAAaA,EAClB3gD,KAAKmH,GAAK,QAAUJ,KAAKkoC,MAAsB,WAAhBloC,KAAK6qC,UAAuBC,SAAS,IACpE7xC,KAAKmoB,IAAMu5B,GAAiBtoC,EAAMunC,GAAY,GAC9C3gD,KAAKmoB,IAAIhhB,GAAKnH,KAAKmH,GACnBnH,KAAKmoB,IAAI6C,aAAa,OAAQ,WAGtC,MAAM,GACF,YAAY5R,GACRpZ,KAAKoZ,KAAOA,EACZpZ,KAAKuiD,MAAQ,GACb,IAAIxe,EAAarrB,IACb,GAAqB,IAAjBA,EAAMsrB,QACN4d,GAAe5hD,KAAKoZ,MACpBpZ,KAAKoZ,KAAK8qB,aAET,GAAqB,IAAjBxrB,EAAMsrB,SAAkC,IAAjBtrB,EAAMsrB,QAClChkC,KAAKwiD,eAAexiD,KAAKyiD,cAAgB,EAAIziD,KAAKuiD,MAAM5hD,QAAUX,KAAKuiD,MAAM5hD,aAE5E,GAAqB,IAAjB+X,EAAMsrB,SAAkC,IAAjBtrB,EAAMsrB,QAClChkC,KAAKwiD,eAAexiD,KAAKyiD,cAAgB,GAAKziD,KAAKuiD,MAAM5hD,aAExD,GAAqB,IAAjB+X,EAAMsrB,QACXhkC,KAAKwiD,cAAc,QAElB,GAAqB,IAAjB9pC,EAAMsrB,QACXhkC,KAAKwiD,cAAcxiD,KAAKuiD,MAAM5hD,OAAS,QAEtC,GAAqB,IAAjB+X,EAAMsrB,QACXhkC,KAAKoZ,KAAK8qB,YAET,MAAIxrB,EAAMsrB,SAAW,IAAMtrB,EAAMsrB,SAAW,IAAMhkC,KAAKyiD,eAAiB,GAUzE,OAV4E,CAC5E,IAAI,WAAE9B,GAAe3gD,KAAKuiD,MAAMviD,KAAKyiD,eAAgBzxC,EAAO+wC,GAAWpB,EAAW11C,SAClF,IAAK,IAAI9K,EAAI,EAAGA,EAAI6Q,EAAKrQ,OAAQR,IAC7B,GAAI6Q,EAAK7Q,GAAGgtC,cAAc/mC,WAAW,IAAMsS,EAAMsrB,QAAS,CACtD,IAAIrwB,EAAQotC,GAAe/gD,KAAKoZ,KAAK7Z,MAAMua,MAAMmnC,IAAWL,YAAaD,GACrEhtC,GACAgtC,EAAW11C,QAAQ9K,GAAG0O,MAAMuK,EAAMzF,EAAM9N,KAAM8N,EAAM5N,MAMpE2S,EAAMe,kBAENuZ,EAAWta,IACX,IAAK,IAAIvY,EAAI,EAAGA,EAAIH,KAAKuiD,MAAM5hD,OAAQR,IAC/BH,KAAKuiD,MAAMpiD,GAAGgoB,IAAI0hB,SAASnxB,EAAM3U,SACjC/D,KAAKwiD,cAAcriD,IAG/BH,KAAKgsC,KAAO,GAAI,KAAM,CAClB0W,SAAU,EACVC,KAAM,UACN,aAAc3iD,KAAKoZ,KAAK7Z,MAAM+yB,OAAO,eACrCyR,YACA/Q,YAEJhzB,KAAKmoB,IAAM,GAAI,MAAO,CAAEU,MAAO,iBAAmB7oB,KAAKgsC,KAAM,GAAI,SAAU,CACvElrC,KAAM,SACNyQ,KAAM,QACN,aAAcvR,KAAKoZ,KAAK7Z,MAAM+yB,OAAO,SACrCU,QAAS,IAAM4uB,GAAe5hD,KAAKoZ,OACpC,MACHpZ,KAAK0c,SAET,oBACI,IAAI4rB,EAAWtoC,KAAKoZ,KAAK7Z,MAAMua,MAAMmnC,IAAW3Y,SAChD,IAAKA,EACD,OAAQ,EACZ,IAAK,IAAInoC,EAAI,EAAGA,EAAIH,KAAKuiD,MAAM5hD,OAAQR,IACnC,GAAIH,KAAKuiD,MAAMpiD,GAAGwgD,YAAcrY,EAASqY,WACrC,OAAOxgD,EACf,OAAQ,EAEZ,SACI,IAAI,YAAEygD,EAAW,SAAEtY,GAAatoC,KAAKoZ,KAAK7Z,MAAMua,MAAMmnC,IAClD9gD,EAAI,EAAGyiD,GAAY,EAAOC,EAAkB,KAChDjC,EAAYlvB,QAAQ,EAAG1xB,KAAKoZ,KAAK7Z,MAAMmb,IAAI/Z,OAAQ,CAACmiD,EAAQC,GAAQvyC,WAChE,IAAgBuH,EAAZpE,GAAS,EACb,IAAK,IAAI9F,EAAI1N,EAAG0N,EAAI7N,KAAKuiD,MAAM5hD,OAAQkN,IACnC,GAAI7N,KAAKuiD,MAAM10C,GAAG8yC,YAAcnwC,EAAKmwC,WAAY,CAC7ChtC,EAAQ9F,EACR,MAEJ8F,EAAQ,GACRoE,EAAO,IAAIuqC,GAAUtiD,KAAKoZ,KAAM5I,EAAKmwC,YACrC3gD,KAAKuiD,MAAMx0C,OAAO5N,EAAG,EAAG4X,GACxB6qC,GAAY,IAGZ7qC,EAAO/X,KAAKuiD,MAAM5uC,GACdA,EAAQxT,IACRH,KAAKuiD,MAAMx0C,OAAO5N,EAAGwT,EAAQxT,GAC7ByiD,GAAY,IAGhBta,GAAYvwB,EAAK4oC,YAAcrY,EAASqY,WACnC5oC,EAAKoQ,IAAI0nB,aAAa,mBACvB93B,EAAKoQ,IAAI6C,aAAa,gBAAiB,QACvC63B,EAAkB9qC,GAGjBA,EAAKoQ,IAAI0nB,aAAa,kBAC3B93B,EAAKoQ,IAAI2nB,gBAAgB,iBAE7B3vC,MAEJ,MAAOA,EAAIH,KAAKuiD,MAAM5hD,UAAiC,GAArBX,KAAKuiD,MAAM5hD,QAAeX,KAAKuiD,MAAM,GAAG5B,WAAW96C,KAAO,GACxF+8C,GAAY,EACZ5iD,KAAKuiD,MAAM7gD,MAEU,GAArB1B,KAAKuiD,MAAM5hD,SACXX,KAAKuiD,MAAM7hD,KAAK,IAAI4hD,GAAUtiD,KAAKoZ,KAAM,CACrCvT,MAAO,EAAGE,IAAK,EACf+6C,SAAU,OACVoB,QAASliD,KAAKoZ,KAAK7Z,MAAM+yB,OAAO,qBAEpCswB,GAAY,GAEZC,GACA7iD,KAAKgsC,KAAKhhB,aAAa,wBAAyB63B,EAAgB17C,IAChEnH,KAAKoZ,KAAKs2B,eAAe,CACrB5yB,IAAK9c,KACL6G,KAAM,KAAM,CAAGyvB,IAAKusB,EAAgB16B,IAAIsQ,wBAAyBiI,MAAO1gC,KAAKgsC,KAAKvT,0BAClF4W,MAAO,EAAG/Y,MAAKoK,YACPpK,EAAIt0B,IAAM0+B,EAAM1+B,IAChBhC,KAAKgsC,KAAK4E,WAAalQ,EAAM1+B,IAAMs0B,EAAIt0B,IAClCs0B,EAAIpI,OAASwS,EAAMxS,SACxBluB,KAAKgsC,KAAK4E,WAAata,EAAIpI,OAASwS,EAAMxS,YAIjDluB,KAAKyiD,cAAgB,GAC1BziD,KAAKgsC,KAAK8D,gBAAgB,yBAE1B8S,GACA5iD,KAAKghC,OAEb,OACI,IAAI9R,EAASlvB,KAAKgsC,KAAK3mB,WACvB,SAASoc,IACL,IAAItuB,EAAO+b,EACXA,EAAS/b,EAAKrJ,YACdqJ,EAAK8Y,SAET,IAAK,IAAIlU,KAAQ/X,KAAKuiD,MAClB,GAAIxqC,EAAKoQ,IAAIqZ,YAAcxhC,KAAKgsC,KAAM,CAClC,MAAO9c,GAAUnX,EAAKoQ,IAClBsZ,IACJvS,EAASnX,EAAKoQ,IAAIre,iBAGlB9J,KAAKgsC,KAAKvgB,aAAa1T,EAAKoQ,IAAK+G,GAGzC,MAAOA,EACHuS,IAER,cAAcghB,GACV,GAAIziD,KAAKyiD,cAAgB,EACrB,OACJ,IAAI3oC,EAAQ9Z,KAAKoZ,KAAK7Z,MAAMua,MAAMmnC,IAC9BrpC,EAAYmpC,GAAejnC,EAAM8mC,YAAa5gD,KAAKuiD,MAAME,GAAe9B,YACvE/oC,GAEL5X,KAAKoZ,KAAKO,SAAS,CACf/B,UAAW,CAAEwhB,OAAQxhB,EAAU/R,KAAMwhB,KAAMzP,EAAU7R,IACrD6W,gBAAgB,EAChB3C,QAASonC,GAAmBnoC,GAAGtB,KAGvC,YAAYwB,GAAQ,OAAO,IAAI,GAAUA,IAE7C,SAAS4pC,GAAI/Y,EAASoH,EAAQ,uBAC1B,MAAO,mEAAmEA,KAAS4R,mBAAmBhZ,aAE1G,SAASiZ,GAAUp5B,GACf,OAAOk5B,GAAI,qDAAqDl5B,qCAA0C,wBAE9G,MAAM,GAAyB,OAAWP,UAAU,CAChD,iBAAkB,CACda,QAAS,kBACTurB,WAAY,OACZnsB,QAAS,QACTe,WAAY,YAEhB,uBAAwB,CAAEkrB,WAAY,kBACtC,yBAA0B,CAAEA,WAAY,oBACxC,sBAAuB,CAAEA,WAAY,kBACrC,uBAAwB,CACpBxK,KAAM,UACN9W,OAAQ,OACR/J,QAAS,UACTP,gBAAiB,OACjBC,MAAO,QACPsK,aAAc,MACduhB,WAAY,OAEhB,uBAAwB,CACpB3Q,SAAU,MACVuQ,QAAS,IAEb,gBAAiB,CACb4N,mBAAoB,cACpBC,iBAAkB,WAClBC,cAAe,SAEnB,sBAAuB,CAAEC,gBAA8BJ,GAAU,SACjE,wBAAyB,CAAEI,gBAA8BJ,GAAU,WACnE,qBAAsB,CAAEI,gBAA8BJ,GAAU,SAChE,uBAAwB,CAAEr5B,gBAAiB,aAC3C,mBAAoB,CAChBO,QAAS,EACTiK,OAAQ,GAEZ,gBAAiB,CACb/I,SAAU,WACV,UAAW,CACP2e,QAAS,KACT3e,SAAU,WACV4C,OAAQ,EACRvE,KAAM,OACN8rB,WAAY,wBACZ1rB,YAAa,wBACb6X,aAAc,mBAGtB,wBAAyB,CACrB,UAAW,CAAE2hB,kBAAmB,WAEpC,qBAAsB,CAClB,UAAW,CAAEA,kBAAmB,SAEpC,0BAA2B,CACvBj4B,SAAU,WACV,OAAQ,CACJ2pB,UAAW,QACXuO,UAAW,OACX,oBAAqB,CACjB35B,gBAAiB,OACjB,MAAO,CAAE6rB,eAAgB,cAE7B,0BAA2B,CACvB+N,oBAAqB,OACrB55B,gBAAiB,YACjB65B,eAAgB,QAChB55B,MAAO,iBAEX,MAAO,CAAE4rB,eAAgB,QACzBtrB,QAAS,EACTiK,OAAQ,GAEZ,iBAAkB,CACd/I,SAAU,WACVtpB,IAAK,IACLsrB,MAAO,MACPgoB,WAAY,UACZnhB,OAAQ,OACR8W,KAAM,UACN7gB,QAAS,EACTiK,OAAQ,MCjgBpB,MAAMsvB,GAAa,CACFpzB,KACAK,KACA,iBACA,IACA8C,KACA,iBACA,iBACA,OAAYkwB,wBAAwB1qC,IAAG,GACvC8N,KACbw5B,GAAsBj5C,SACT2tB,KACA+J,KACA6W,KACA6C,KACA,iBACArT,KACA,OAAOpsB,GAAG,IAChBymB,MACAnB,MACAsL,MACAjtB,KACA4V,MACAgkB,MACAT,MACA8L,M,iBC5EX,MAAM+B,GAAY,GAChBC,GAAe,GACfC,GAAM,GAEFC,GAAU,GAAIC,GAAiB,GAAI,GAAQ,GAAIC,GAAM,EAAG3/C,GAAO,GAG/D4/C,GAAW,IAAI,QAAkB,CAAC/+C,EAAO9F,KAC7C,GAAI8F,EAAMlD,KAAO,EACfkD,EAAM6C,YAAY87C,SACb,GAAI3+C,EAAMlD,OAAS8hD,IAAW5+C,EAAMlD,OAAS+hD,SAAuB,GAAI3kD,EAAMiB,QAAQM,MAAQ,OAAU,CAC7GuE,EAAMiD,UACN,IAAI+7C,EAAS,EACb,MAAOh/C,EAAMlD,OAAS,IAASkD,EAAMlD,OAASgiD,GAAO9+C,EAAMiD,UAAW+7C,IACtE,IAAI7sC,EAAQnS,EAAMlD,OAAS8hD,IAAW5+C,EAAMlD,OAAS+hD,IAAkB7+C,EAAMlD,OAASqC,GACtFa,EAAM6C,YAAYsP,EAAQusC,GAAeD,IAAYO,KAEtD,CAAC98C,YAAY,EAAMC,UAAU,IAG1B,GAAS,QAAS8J,YAAY,CAClCV,QAAS,GACTsB,OAAQ,0iBACRE,UAAW,qaACXvN,KAAM,qJACNgM,UAAW,yNACXwB,QAAS,GACTN,aAAc,CAAC,EAAE,GACjBjB,gBAAiB,EACjBmB,UAAW,w0CACX9G,WAAY,CAAC,EAAG,EAAG,EAAGi5C,IACtBlzC,SAAU,CAAC,QAAU,CAAC,EAAE,IACxBuB,UAAW,MAGP6xC,GAA0B5lC,EAAWjN,OAAO,CAC9ClR,OAAQ,GAAOoe,UAAU,CACrBhN,MAAO,CACHkT,GAAejG,IAAI,CACf2lC,wBAAyBj+B,GAAgB,CAAEC,QAAS,IAAKC,OAAO,MAEpEuB,GAAanJ,IAAI,CACb2lC,wBAAyBv8B,KAE7B2xB,GAAU,CACN6K,cAAe3K,GAAK+C,aACpBzsC,OAAQ0pC,GAAK76B,OACbylC,WAAY5K,GAAKwE,gBACjBqG,YAAa7K,GAAKgE,gBAClB8G,OAAQ9K,GAAK7pB,OACb40B,SAAU/K,GAAKwG,SAASxG,GAAK+C,cAC7B,MAAO/C,GAAKgF,MACZ,MAAOhF,GAAK+E,cACZ,IAAO/E,GAAKgE,gBACZgH,QAAShL,GAAK4C,YACdqI,UAAWjL,GAAK76B,YAI5BnB,aAAc,CACVqhB,cAAe,CACXvK,SAAU,CAAC,IAAK,IAAK,IAAK,MAE9BowB,cAAe,CACX5gC,KAAM,SAIlB,SAAS6gC,KACL,OAAO,IAAI7hC,GAAgBmhC,ICtE/B,MAAMW,GAAS,UAAWC,GAAQ,UAAWC,GAAO,UAAWpF,GAAU,UAAWqF,GAAQ,UAAWC,GAAQ,UAC/GC,GAAS,UAAWC,GAAO,UAAWC,GAAU,UAAWC,GAAS,UAAWC,GAAiB,UAAWC,GAAsB,UAAWpQ,GAAa,UAAWqQ,GAAoB,UAAW,GAAY,UAAW,GAAS,UAI7NC,GAA4B,OAAWC,MAAM,CAC/C,IAAK,CACD/7B,MAAOq7B,GACPt7B,gBAAiByrB,IAErB,cAAe,CACXwQ,WAAY,IAEhB,0BAA2B,CAAEC,gBAAiB,IAC9C,yFAA0F,CAAEl8B,gBAAiB,IAC7G,aAAc,CAAEA,gBAAiB47B,GAAgB37B,MAAOq7B,IACxD,2BAA4B,CAAEvjB,aAAc,mBAC5C,8BAA+B,CAAEC,UAAW,mBAC5C,kBAAmB,CACfhY,gBAAiB,YACjBm8B,QAAS,qBAEb,0CAA2C,CACvCn8B,gBAAiB,aAErB,iBAAkB,CAAEA,gBAAiB67B,IACrC,qBAAsB,CAAE77B,gBAAiB,aACzC,wEAAyE,CACrEA,gBAAiB,YACjBm8B,QAAS,qBAEb,cAAe,CACXn8B,gBAAiByrB,GACjBxrB,MAAOs7B,GACPjxB,OAAQ,QAEZ,uBAAwB,CACpBtK,gBAAiB67B,IAErB,sBAAuB,CACnB77B,gBAAiB,cACjBsK,OAAQ,OACRrK,MAAO,QAEX,cAAe,CACXqK,OAAQ,OACRtK,gBAAiB87B,IAErB,uCAAwC,CACpCM,eAAgB,cAChB1C,kBAAmB,eAEvB,sCAAuC,CACnC0C,eAAgBN,GAChBpC,kBAAmBoC,IAEvB,2BAA4B,CACxB,6BAA8B,CAC1B97B,gBAAiB67B,GACjB57B,MAAOq7B,MAGhB,CAAEe,MAAM,IAILC,GAAqC,GAAe30C,OAAO,CAC7D,CAAE0nC,IAAKU,GAAKwC,QACRtyB,MAAO07B,IACX,CAAEtM,IAAK,CAACU,GAAKroC,KAAMqoC,GAAKgG,QAAShG,GAAKsD,UAAWtD,GAAKqC,aAAcrC,GAAKoD,WACrElzB,MAAOm7B,IACX,CAAE/L,IAAK,CAAcU,GAAKwG,SAASxG,GAAK+C,cAAe/C,GAAKkD,WACxDhzB,MAAOu7B,IACX,CAAEnM,IAAK,CAACU,GAAK9vB,MAAoB8vB,GAAKuG,SAASvG,GAAKroC,MAAoBqoC,GAAKyG,SAASzG,GAAKroC,OACvFuY,MAAOy7B,IACX,CAAErM,IAAK,CAAcU,GAAKqG,WAAWrG,GAAKroC,MAAOqoC,GAAK6E,WAClD30B,MAAOq7B,IACX,CAAEjM,IAAK,CAACU,GAAKoC,SAAUpC,GAAK7uB,UAAW6uB,GAAK7pB,OAAQ6pB,GAAKiG,QAASjG,GAAKjiC,WAAYiiC,GAAK+D,SAAU/D,GAAKjJ,KAAMiJ,GAAKmD,WAC9GjzB,MAAOk7B,IACX,CAAE9L,IAAK,CAACU,GAAKyC,SAAUzC,GAAKgE,gBAAiBhE,GAAK4D,IAAK5D,GAAK2D,OAAQ3D,GAAK5S,OAAQ4S,GAAK4F,KAAmB5F,GAAK2G,QAAQ3G,GAAK76B,SACvH+K,MAAOo7B,IACX,CAAEhM,IAAK,CAACU,GAAK2C,KAAM3C,GAAKtC,SACpBxtB,MAAOs7B,IACX,CAAElM,IAAKU,GAAK2F,OACRkB,WAAY,QAChB,CAAEvH,IAAKU,GAAK0F,SACR1J,UAAW,UACf,CAAEsD,IAAKU,GAAK8F,cACRhK,eAAgB,gBACpB,CAAEwD,IAAKU,GAAK4F,KACR11B,MAAOs7B,GACP1P,eAAgB,aACpB,CAAEwD,IAAKU,GAAKuC,QACRsE,WAAY,OACZ32B,MAAOm7B,IACX,CAAE/L,IAAK,CAACU,GAAK8D,KAAM9D,GAAK0D,KAAmB1D,GAAK2G,QAAQ3G,GAAK+C,eACzD7yB,MAAOy7B,IACX,CAAErM,IAAK,CAACU,GAAKoG,sBAAuBpG,GAAK76B,OAAQ66B,GAAK+F,UAClD71B,MAAOw7B,IACX,CAAEpM,IAAKU,GAAKkG,QACRh2B,MAAOg2B,MAMTsG,GAAU,CAACR,GAAcO,I,2CCxFzBE,GAAe,IAAI,OAUJ,GAArB,0WAKE,SAAYjtC,GACNA,EAAKvB,YACP7X,KAAKsmD,MAAM,QAASltC,EAAK7Z,MAAMw2B,cAPrC,qBAWE,WAAO,WACCwwB,EAAS,OAAY32C,OAAO,CAChC8K,IAAK1a,KAAKwmD,OAAO/jD,OAAS,GAC1BgkD,WAAY,CACV9C,GACA7N,GAAe,CACbtxB,SAAU,CACR,iBAAqB,SAAC/gB,GAAD,OAAe,EAAKijD,OAAOnnD,MAAMonD,UAAY,gBAAwBljD,GAAKA,KAC/F,iBAAkB,SAACA,GAAD,OAAe,EAAKijD,OAAOnnD,MAAMonD,UAAY,gBAAWljD,GAAKA,KAC/E,gBAA2B,SACzB,kBAAM,EAAKijD,OAAOnnD,MAAMqnD,eACxB,gBAAYn1C,GACZ,SAAChO,GAAD,OAAe,EAAKijD,OAAOnnD,MAAMonD,UAAY,gBAAWljD,GAAKA,KAE/D,gBAA2B,SACzB,kBAAM,EAAKijD,OAAOnnD,MAAMsnD,kBACxB,gBAAYp1C,GACZ,SAAChO,GAAD,OAAe,EAAKijD,OAAOnnD,MAAMonD,UAAY,gBAAwBljD,GAAKA,KAE5E,WAGJ,QACA2iD,GACA,OAAOltC,GAAG,CAACulB,KACX4nB,GAAantC,GAAG6rC,MAChB,OAAW+B,eAAe5tC,GAAGlZ,KAAK+mD,gBAItC/mD,KAAKoZ,KAAO,IAAI,OAAW,CACzB7Z,MAAOgnD,EACPxmD,OAAQC,KAAKgnD,MAAMC,aAGrBjnD,KAAK0mD,OAAOxc,OAAO,0BAA2BlqC,KAAKoZ,QA9CvD,uBAiDE,WACEpZ,KAAK0mD,OAAOxc,OAAO,+BAA2Bz4B,OAlDlD,GAAwC,SAAnB,GAAU,gBAR9B,gBAAU,CACTC,MAAO,CACLjP,MAAO,CACL3B,KAAMoP,OACNg3C,QAAS,QAIM,cChCgX,M,aCOjYC,GAAY,gBACd,GACAjxC,EACAQ,GACA,EACA,KACA,KACA,MAIa,aAAAywC,G,2CClBf,8OAGA,MAAMC,EAAsB,KAC5B,IAAIC,EAAa,EACjB,MAAMC,EACF,YAAYzhD,EAAME,GACd/F,KAAK6F,KAAOA,EACZ7F,KAAK+F,GAAKA,GAMlB,MAAMwhD,EAEF,YAAYj0C,EAAS,IACjBtT,KAAKmH,GAAKkgD,IACVrnD,KAAKwnD,UAAYl0C,EAAOk0C,QACxBxnD,KAAKqR,YAAciC,EAAOjC,aAAe,MACrC,MAAM,IAAI+D,MAAM,0DAUxB,IAAI/G,GACA,GAAIrO,KAAKwnD,QACL,MAAM,IAAIhhD,WAAW,0CAGzB,MAFoB,mBAAT6H,IACPA,EAAQo5C,EAASp5C,MAAMA,IACnBvN,IACJ,IAAI8C,EAASyK,EAAMvN,GACnB,YAAkB2Q,IAAX7N,EAAuB,KAAO,CAAC5D,KAAM4D,KAQxD2jD,EAASjiC,SAAW,IAAIiiC,EAAS,CAAEl2C,YAAamxB,GAAOA,EAAI3+B,MAAM,OAIjE0jD,EAASlyB,SAAW,IAAIkyB,EAAS,CAAEl2C,YAAamxB,GAAOA,EAAI3+B,MAAM,OAIjE0jD,EAAS5/C,MAAQ,IAAI4/C,EAAS,CAAEl2C,YAAamxB,GAAOA,EAAI3+B,MAAM,OAI9D0jD,EAASh5C,YAAc,IAAIg5C,EAAS,CAAEC,SAAS,IAK/CD,EAASznD,UAAY,IAAIynD,EAAS,CAAEC,SAAS,IAI7CD,EAASrpC,QAAU,IAAIqpC,EAAS,CAAEC,SAAS,IAuB3C,MAAME,EAAU32C,OAAOnB,OAAO,MAE9B,MAAM63C,EAEF,YAKAl2C,EAEAG,EAGAvK,EAEA9C,EAAQ,GACJrE,KAAKuR,KAAOA,EACZvR,KAAK0R,MAAQA,EACb1R,KAAKmH,GAAKA,EACVnH,KAAKqE,MAAQA,EAEjB,cAAcmM,GACV,IAAIkB,EAAQlB,EAAKkB,OAASlB,EAAKkB,MAAM/Q,OAASoQ,OAAOnB,OAAO,MAAQ83C,EAChErjD,GAASmM,EAAKxO,IAAM,EAAc,IAAMwO,EAAKqB,QAAU,EAAkB,IACxErB,EAAKoB,MAAQ,EAAgB,IAAmB,MAAbpB,EAAKe,KAAe,EAAoB,GAC5EzQ,EAAO,IAAI2mD,EAASj3C,EAAKe,MAAQ,GAAIG,EAAOlB,EAAKrJ,GAAI9C,GACzD,GAAImM,EAAKkB,MACL,IAAK,IAAIi2C,KAAOn3C,EAAKkB,MAGjB,GAFK6C,MAAMgY,QAAQo7B,KACfA,EAAMA,EAAI7mD,IACV6mD,EAAK,CACL,GAAIA,EAAI,GAAGH,QACP,MAAM,IAAIhhD,WAAW,8CACzBkL,EAAMi2C,EAAI,GAAGxgD,IAAMwgD,EAAI,GAGnC,OAAO7mD,EAIX,KAAK+J,GAAQ,OAAO7K,KAAK0R,MAAM7G,EAAK1D,IAEpC,YAAc,OAAqB,EAAbnH,KAAKqE,OAAuB,EAElD,gBAAkB,OAAqB,EAAbrE,KAAKqE,OAA2B,EAE1D,cAAgB,OAAqB,EAAbrE,KAAKqE,OAAyB,EAGtD,kBAAoB,OAAqB,EAAbrE,KAAKqE,OAA6B,EAG9D,GAAGkN,GACC,GAAmB,iBAARA,EAAkB,CACzB,GAAIvR,KAAKuR,MAAQA,EACb,OAAO,EACX,IAAI5J,EAAQ3H,KAAK6K,KAAK08C,EAAS5/C,OAC/B,QAAOA,GAAQA,EAAMgK,QAAQJ,IAAS,EAE1C,OAAOvR,KAAKmH,IAAMoK,EAQtB,aAAapG,GACT,IAAIkiC,EAASt8B,OAAOnB,OAAO,MAC3B,IAAK,IAAI/E,KAAQM,EACb,IAAK,IAAIoG,KAAQ1G,EAAKhH,MAAM,KACxBwpC,EAAO97B,GAAQpG,EAAIN,GAC3B,OAAQyT,IACJ,IAAK,IAAIspC,EAAStpC,EAAKzT,KAAK08C,EAAS5/C,OAAQxH,GAAK,EAAGA,GAAKynD,EAASA,EAAOjnD,OAAS,GAAIR,IAAK,CACxF,IAAIwT,EAAQ05B,EAAOltC,EAAI,EAAIme,EAAK/M,KAAOq2C,EAAOznD,IAC9C,GAAIwT,EACA,OAAOA,KAM3B8zC,EAASjtC,KAAO,IAAIitC,EAAS,GAAI12C,OAAOnB,OAAO,MAAO,EAAG,GAQzD,MAAMi4C,EAGF,YAEAv5C,GACItO,KAAKsO,MAAQA,EACb,IAAK,IAAInO,EAAI,EAAGA,EAAImO,EAAM3N,OAAQR,IAC9B,GAAImO,EAAMnO,GAAGgH,IAAMhH,EACf,MAAM,IAAIqG,WAAW,+EAKjC,UAAUkL,GACN,IAAIo2C,EAAW,GACf,IAAK,IAAIhnD,KAAQd,KAAKsO,MAAO,CACzB,IAAIy5C,EAAW,KACf,IAAK,IAAI13C,KAAUqB,EAAO,CACtB,IAAIiN,EAAMtO,EAAOvP,GACb6d,IACKopC,IACDA,EAAWh3C,OAAOyC,OAAO,GAAI1S,EAAK4Q,QACtCq2C,EAASppC,EAAI,GAAGxX,IAAMwX,EAAI,IAGlCmpC,EAASpnD,KAAKqnD,EAAW,IAAIN,EAAS3mD,EAAKyQ,KAAMw2C,EAAUjnD,EAAKqG,GAAIrG,EAAKuD,OAASvD,GAEtF,OAAO,IAAI+mD,EAAQC,IAG3B,MAAME,EAAa,IAAIh4C,QAAWi4C,EAAkB,IAAIj4C,QAexD,MAAMk4C,EAEF,YAEApnD,EAEA6J,EAGAC,EAEAjK,EAEA+Q,GAOI,GANA1R,KAAKc,KAAOA,EACZd,KAAK2K,SAAWA,EAChB3K,KAAK4K,UAAYA,EACjB5K,KAAKW,OAASA,EAEdX,KAAK0R,MAAQ,KACTA,GAASA,EAAM/Q,OAAQ,CACvBX,KAAK0R,MAAQX,OAAOnB,OAAO,MAC3B,IAAK,IAAK/E,EAAMpI,KAAUiP,EACtB1R,KAAK0R,MAAqB,iBAAR7G,EAAmBA,EAAOA,EAAK1D,IAAM1E,GAInE,WACI,IAAIyb,EAAUle,KAAK6K,KAAK08C,EAASrpC,SACjC,GAAIA,IAAYA,EAAQC,QACpB,OAAOD,EAAQ7U,KAAKwoC,WACxB,IAAIlnC,EAAW,GACf,IAAK,IAAIyT,KAAMpe,KAAK2K,SAAU,CAC1B,IAAI63B,EAAMpkB,EAAGyzB,WACTrP,IACI73B,IACAA,GAAY,KAChBA,GAAY63B,GAGpB,OAAQxiC,KAAKc,KAAKyQ,MACb,KAAKxI,KAAK/I,KAAKc,KAAKyQ,QAAUvR,KAAKc,KAAK8I,QAAU0Z,KAAKC,UAAUvjB,KAAKc,KAAKyQ,MAAQvR,KAAKc,KAAKyQ,OACzF5G,EAAShK,OAAS,IAAMgK,EAAW,IAAM,IAFzBA,EAO7B,OAAOlL,EAAK6J,EAAO,GACf,IAAIygC,EAAgB,MAAPtqC,GAAeuoD,EAAW/3C,IAAIjQ,OAAUA,KAAKqd,QACtD9T,EAAS,IAAI4+C,EAAWpe,GAK5B,OAJW,MAAPtqC,IACA8J,EAAOE,OAAOhK,EAAK6J,GACnB0+C,EAAWl8C,IAAI9L,KAAMuJ,EAAO6+C,QAEzB7+C,EAMX,aACI,OAAO,IAAI4+C,EAAWnoD,KAAKqd,QAAS,GAIxC,cACI,OAAO,IAAIgrC,EAASroD,KAAM,EAAG,EAAG,MAOpC,QAAQP,EAAK6J,EAAO,GAChB,IAAIgV,EAAOgqC,EAAYN,EAAW/3C,IAAIjQ,OAASA,KAAKqd,QAAS5d,EAAK6J,GAAM,GAExE,OADA0+C,EAAWl8C,IAAI9L,KAAMse,GACdA,EAOX,aAAa7e,EAAK6J,EAAO,GACrB,IAAIgV,EAAOgqC,EAAYL,EAAgBh4C,IAAIjQ,OAASA,KAAKqd,QAAS5d,EAAK6J,GAAM,GAE7E,OADA2+C,EAAgBn8C,IAAI9L,KAAMse,GACnBA,EAOX,QAAQ9N,GACJ,IAAI,MAAE+N,EAAK,MAAEgqC,EAAK,KAAE1iD,EAAO,EAAC,GAAEE,EAAK/F,KAAKW,QAAW6P,EACnD,IAAK,IAAIgf,EAAIxvB,KAAKuJ,SAAU0G,EAAM,IAAMuf,EAAElR,OAAQ,CAC9C,IAAIkqC,GAAY,EAChB,GAAIh5B,EAAE3pB,MAAQE,GAAMypB,EAAEzpB,IAAMF,IAAS2pB,EAAE1uB,KAAK2nD,cAAoD,IAArClqC,EAAMiR,EAAE1uB,KAAM0uB,EAAE3pB,KAAM2pB,EAAEzpB,GAAIkK,IAAiB,CACpG,GAAIuf,EAAEnK,aACF,SACCmK,EAAE1uB,KAAK2nD,cACRD,GAAY,GAEpB,OAAS,CAIL,GAHIA,GAAaD,GACbA,EAAM/4B,EAAE1uB,KAAM0uB,EAAE3pB,KAAM2pB,EAAEzpB,GAAIkK,GAChCu4C,EAAYh5B,EAAE1uB,KAAK2nD,YACfj5B,EAAE1lB,cACF,MACJ,IAAK0lB,EAAEzvB,SACH,OACJyoD,GAAY,IAMxB,KAAK39C,GACD,OAAQA,EAAK28C,QAAiCxnD,KAAK0R,MAAQ1R,KAAK0R,MAAM7G,EAAK1D,SAAMsK,EAA1DzR,KAAKc,KAAK+J,KAAKA,GAK1C,iBACI,IAAIjH,EAAS,GACb,GAAI5D,KAAK0R,MACL,IAAK,IAAIvK,KAAMnH,KAAK0R,MAChB9N,EAAOlD,KAAK,EAAEyG,EAAInH,KAAK0R,MAAMvK,KACrC,OAAOvD,EAKX,QAAQ0P,EAAS,IACb,OAAOtT,KAAK2K,SAAShK,QAAU,EAAuBX,KAClD0oD,EAAajB,EAASjtC,KAAMxa,KAAK2K,SAAU3K,KAAK4K,UAAW,EAAG5K,KAAK2K,SAAShK,OAAQ,EAAGX,KAAKW,OAAQ,CAACgK,EAAUC,EAAWjK,IAAW,IAAIunD,EAAKloD,KAAKc,KAAM6J,EAAUC,EAAWjK,EAAQX,KAAK2oD,YAAar1C,EAAOs1C,UAAY,EAAEj+C,EAAUC,EAAWjK,IAAW,IAAIunD,EAAKT,EAASjtC,KAAM7P,EAAUC,EAAWjK,KAIlT,aAAasD,GAAQ,OAAO4kD,EAAU5kD,IAG1CikD,EAAK3wC,MAAQ,IAAI2wC,EAAKT,EAASjtC,KAAM,GAAI,GAAI,GAC7C,MAAMsuC,EACF,YAAYnpD,EAAQsC,GAChBjC,KAAKL,OAASA,EACdK,KAAKiC,MAAQA,EAEjB,SAAW,OAAOjC,KAAKL,OAAOK,KAAKiC,MAAQ,GAC3C,YAAc,OAAOjC,KAAKL,OAAOK,KAAKiC,MAAQ,GAC9C,UAAY,OAAOjC,KAAKL,OAAOK,KAAKiC,MAAQ,GAC5C,WAAa,OAAOjC,KAAKL,OAAOK,KAAKiC,MAAQ,GAC7C,UAAY,OAAOjC,KAAKiC,MACxB,OAASjC,KAAKiC,OAAS,EACvB,OAAS,OAAO,IAAI6mD,EAAiB9oD,KAAKL,OAAQK,KAAKiC,QAM3D,MAAM8mD,EAEF,YAEAppD,EAEAgB,EAEAmL,GACI9L,KAAKL,OAASA,EACdK,KAAKW,OAASA,EACdX,KAAK8L,IAAMA,EAGf,WAAa,OAAO27C,EAASjtC,KAE7B,WACI,IAAI5W,EAAS,GACb,IAAK,IAAI3B,EAAQ,EAAGA,EAAQjC,KAAKL,OAAOgB,QACpCiD,EAAOlD,KAAKV,KAAKgpD,YAAY/mD,IAC7BA,EAAQjC,KAAKL,OAAOsC,EAAQ,GAEhC,OAAO2B,EAAO+nC,KAAK,KAGvB,YAAY1pC,GACR,IAAIkF,EAAKnH,KAAKL,OAAOsC,GAAQgnD,EAAWjpD,KAAKL,OAAOsC,EAAQ,GACxDnB,EAAOd,KAAK8L,IAAIwC,MAAMnH,GAAKvD,EAAS9C,EAAKyQ,KAI7C,GAHI,KAAKxI,KAAKnF,KAAY9C,EAAK8I,UAC3BhG,EAAS0f,KAAKC,UAAU3f,IAC5B3B,GAAS,EACLgnD,GAAYhnD,EACZ,OAAO2B,EACX,IAAI+G,EAAW,GACf,MAAO1I,EAAQgnD,EACXt+C,EAASjK,KAAKV,KAAKgpD,YAAY/mD,IAC/BA,EAAQjC,KAAKL,OAAOsC,EAAQ,GAEhC,OAAO2B,EAAS,IAAM+G,EAASghC,KAAK,KAAO,IAG/C,UAAUngC,EAAYy9C,EAAUzzC,EAAK/V,EAAK6J,GACtC,IAAI,OAAE3J,GAAWK,KAAMkpD,GAAQ,EAC/B,IAAK,IAAI/oD,EAAIqL,EAAYrL,GAAK8oD,EAAU9oD,EAAIR,EAAOQ,EAAI,GACnD,GAAIgpD,EAAU7/C,EAAM7J,EAAKE,EAAOQ,EAAI,GAAIR,EAAOQ,EAAI,MAC/C+oD,EAAO/oD,EACHqV,EAAM,GACN,MAGZ,OAAO0zC,EAGX,MAAM1R,EAAQ4R,EAAMvjD,EAAME,GACtB,IAAI4H,EAAI3N,KAAKL,OACT4T,EAAO,IAAI/K,YAAY4gD,EAAO5R,GAClC,IAAK,IAAIr3C,EAAIq3C,EAAQ3pC,EAAI,EAAG1N,EAAIipD,GAC5B71C,EAAK1F,KAAOF,EAAExN,KACdoT,EAAK1F,KAAOF,EAAExN,KAAO0F,EACrB0N,EAAK1F,KAAOF,EAAExN,KAAO0F,EACrB0N,EAAK1F,KAAOF,EAAExN,KAAOq3C,EAEzB,OAAO,IAAIuR,EAAWx1C,EAAMxN,EAAKF,EAAM7F,KAAK8L,MAGpD,SAASq9C,EAAU7/C,EAAM7J,EAAKoG,EAAME,GAChC,OAAQuD,GACJ,KAAM,EAAgB,OAAOzD,EAAOpG,EACpC,KAAM,EAAoB,OAAOsG,GAAMtG,GAAOoG,EAAOpG,EACrD,KAAK,EAAgB,OAAOoG,EAAOpG,GAAOsG,EAAKtG,EAC/C,KAAK,EAAmB,OAAOoG,GAAQpG,GAAOsG,EAAKtG,EACnD,KAAK,EAAe,OAAOsG,EAAKtG,EAChC,KAAK,EAAkB,OAAO,GAGtC,SAASulB,EAA2B1G,EAAM7e,GACtC,IAAIoI,EAAOyW,EAAK5U,YAAYjK,GAC5B,MAAOoI,EAAM,CACT,IAAIvD,EAAOuD,EAAK0d,UAChB,IAAKjhB,GAAQA,EAAKyB,IAAM8B,EAAK9B,GACzB,MACAzB,EAAKxD,KAAK8I,SAAWtF,EAAKuB,MAAQvB,EAAKyB,IACvCuY,EAAOzW,EACPA,EAAOvD,EAAKuF,aAGZhC,EAAOvD,EAGf,OAAOga,EAEX,SAASgqC,EAAYhqC,EAAM7e,EAAK6J,EAAM+/C,GAClC,IAAI/uC,EAEJ,MAAOgE,EAAKzY,MAAQyY,EAAKvY,KACpBuD,EAAO,EAAIgV,EAAKzY,MAAQpG,EAAM6e,EAAKzY,KAAOpG,KAC1C6J,GAAQ,EAAIgV,EAAKvY,IAAMtG,EAAM6e,EAAKvY,GAAKtG,GAAM,CAC9C,IAAIM,GAAUspD,GAAY/qC,aAAgB+pC,GAAY/pC,EAAKrc,MAAQ,EAAI,KAAOqc,EAAKve,OACnF,IAAKA,EACD,OAAOue,EACXA,EAAOve,EAGX,GAAIspD,EACA,IAAK,IAAIxhD,EAAOyW,EAAMve,EAAS8H,EAAK9H,OAAQA,EAAQ8H,EAAO9H,EAAQA,EAAS8H,EAAK9H,OACzE8H,aAAgBwgD,GAAYxgD,EAAK5F,MAAQ,IAA+C,QAAxCqY,EAAKva,EAAOwe,MAAM9e,EAAK6J,GAAM,UAA0B,IAAPgR,OAAgB,EAASA,EAAGzU,OAASgC,EAAKhC,OAC1IyY,EAAOve,GAEnB,OAAS,CACL,IAAI0O,EAAQ6P,EAAKC,MAAM9e,EAAK6J,EAAM+/C,GAClC,IAAK56C,EACD,OAAO6P,EACXA,EAAO7P,GAGf,MAAM45C,EACF,YAAY/pC,EAAMgrC,EAElBrnD,EAAOsnD,GACHvpD,KAAKse,KAAOA,EACZte,KAAKspD,MAAQA,EACbtpD,KAAKiC,MAAQA,EACbjC,KAAKupD,QAAUA,EAEnB,WAAa,OAAOvpD,KAAKse,KAAKxd,KAC9B,WAAa,OAAOd,KAAKse,KAAKxd,KAAKyQ,KACnC,WAAa,OAAOvR,KAAKspD,MACzB,SAAW,OAAOtpD,KAAKspD,MAAQtpD,KAAKse,KAAK3d,OACzC,UAAUR,EAAGqV,EAAK/V,EAAK6J,EAAMwwC,EAAO,GAChC,IAAK,IAAI/5C,EAASC,OAAQ,CACtB,IAAK,IAAI,SAAE2K,EAAQ,UAAEC,GAAc7K,EAAOue,KAAMxF,EAAItD,EAAM,EAAI7K,EAAShK,QAAU,EAAGR,GAAK2Y,EAAG3Y,GAAKqV,EAAK,CAClG,IAAItT,EAAOyI,EAASxK,GAAIM,EAAQmK,EAAUzK,GAAKJ,EAAOupD,MACtD,GAAKH,EAAU7/C,EAAM7J,EAAKgB,EAAOA,EAAQyB,EAAKvB,QAE9C,GAAIuB,aAAgB6mD,EAAY,CAC5B,GAAW,EAAPjP,EACA,SACJ,IAAI73C,EAAQC,EAAKsnD,UAAU,EAAGtnD,EAAKvC,OAAOgB,OAAQ6U,EAAK/V,EAAMgB,EAAO6I,GACpE,GAAIrH,GAAS,EACT,OAAO,IAAIwnD,EAAW,IAAIC,EAAc3pD,EAAQmC,EAAM/B,EAAGM,GAAQ,KAAMwB,QAE1E,GAAY,EAAP63C,IAA0B53C,EAAKpB,KAAK2nD,aAAe/M,EAASx5C,GAAQ,CAC1E,IAAIgc,EACJ,KAAa,EAAP47B,IAAwB53C,EAAKwP,QAAUwM,EAAUhc,EAAK2I,KAAK08C,EAASrpC,YAAcA,EAAQC,QAC5F,OAAO,IAAIkqC,EAASnqC,EAAQ7U,KAAM5I,EAAON,EAAGJ,GAChD,IAAI0O,EAAQ,IAAI45C,EAASnmD,EAAMzB,EAAON,EAAGJ,GACzC,OAAe,EAAP+5C,IAAyBrrC,EAAM3N,KAAK2nD,YAAch6C,EACpDA,EAAMk7C,UAAUn0C,EAAM,EAAItT,EAAKyI,SAAShK,OAAS,EAAI,EAAG6U,EAAK/V,EAAK6J,IAGhF,GAAY,EAAPwwC,IAAyB/5C,EAAOe,KAAK2nD,YACtC,OAAO,KAMX,GAJItoD,EADAJ,EAAOkC,OAAS,EACZlC,EAAOkC,MAAQuT,EAEfA,EAAM,GAAK,EAAIzV,EAAOwpD,QAAQjrC,KAAK3T,SAAShK,OACpDZ,EAASA,EAAOwpD,SACXxpD,EACD,OAAO,MAGnB,iBAAmB,OAAOC,KAAK2pD,UAAU,EAAG,EAAG,EAAG,GAClD,gBAAkB,OAAO3pD,KAAK2pD,UAAU3pD,KAAKse,KAAK3T,SAAShK,OAAS,GAAI,EAAG,EAAG,GAC9E,WAAWlB,GAAO,OAAOO,KAAK2pD,UAAU,EAAG,EAAGlqD,EAAK,GACnD,YAAYA,GAAO,OAAOO,KAAK2pD,UAAU3pD,KAAKse,KAAK3T,SAAShK,OAAS,GAAI,EAAGlB,GAAM,GAClF,MAAMA,EAAK6J,EAAM+/C,GAAW,EAAMO,GAAU,GACxC,IAAI1rC,EACJ,GAAImrC,IAAanrC,EAAUle,KAAKse,KAAKzT,KAAK08C,EAASrpC,WAAaA,EAAQC,QAAS,CAC7E,IAAI0rC,EAAOpqD,EAAMO,KAAK6F,KACtB,IAAK,IAAI,KAAEA,EAAI,GAAEE,KAAQmY,EAAQC,QAC7B,IAAK7U,EAAO,EAAIzD,GAAQgkD,EAAOhkD,EAAOgkD,KACjCvgD,EAAO,EAAIvD,GAAM8jD,EAAO9jD,EAAK8jD,GAC9B,OAAO,IAAIxB,EAASnqC,EAAQ7U,KAAM6U,EAAQC,QAAQ,GAAGtY,KAAO7F,KAAK6F,MAAO,EAAG7F,MAGvF,OAAOA,KAAK2pD,UAAU,EAAG,EAAGlqD,EAAK6J,EAAMsgD,EAAU,EAAI,GAEzD,wBACI,IAAIp8B,EAAMxtB,KACV,MAAOwtB,EAAI1sB,KAAK2nD,aAAej7B,EAAI+7B,QAC/B/7B,EAAMA,EAAI+7B,QACd,OAAO/7B,EAEX,aACI,OAAOxtB,KAAKupD,QAAUvpD,KAAKupD,QAAQO,wBAA0B,KAEjE,kBACI,OAAO9pD,KAAKupD,SAAWvpD,KAAKiC,OAAS,EAAIjC,KAAKupD,QAAQI,UAAU3pD,KAAKiC,MAAQ,EAAG,EAAG,EAAG,GAAoB,KAE9G,kBACI,OAAOjC,KAAKupD,SAAWvpD,KAAKiC,OAAS,EAAIjC,KAAKupD,QAAQI,UAAU3pD,KAAKiC,MAAQ,GAAI,EAAG,EAAG,GAAoB,KAE/G,aAAe,OAAO,IAAIkmD,EAAWnoD,MACrC,WAAa,OAAOA,KAAKse,KACzB,SAAW,OAAOte,KAAKse,KACvB,QAAQ7e,EAAK6J,EAAO,GAChB,OAAOg/C,EAAYtoD,KAAMP,EAAK6J,GAAM,GAExC,aAAa7J,EAAK6J,EAAO,GACrB,OAAOg/C,EAAYtoD,KAAMP,EAAK6J,GAAM,GAExC,2BAA2B7J,GAAO,OAAOulB,EAA2BhlB,KAAMP,GAC1E,SAASqB,EAAMmb,EAAS,KAAM5B,EAAQ,MAClC,IAAIvT,EAAIijD,EAAY/pD,KAAMc,EAAMmb,EAAQ5B,GACxC,OAAOvT,EAAEnG,OAASmG,EAAE,GAAK,KAE7B,YAAYhG,EAAMmb,EAAS,KAAM5B,EAAQ,MACrC,OAAO0vC,EAAY/pD,KAAMc,EAAMmb,EAAQ5B,GAG3C,WAAa,OAAOra,KAAKse,KAAKuzB,YAElC,SAASkY,EAAYzrC,EAAMxd,EAAMmb,EAAQ5B,GACrC,IAAItY,EAAMuc,EAAK/U,OAAQ3F,EAAS,GAChC,IAAK7B,EAAIsjB,aACL,OAAOzhB,EACX,GAAc,MAAVqY,EACA,OAAQla,EAAIjB,KAAKwgB,GAAGrF,GAChB,IAAKla,EAAI+H,cACL,OAAOlG,EACnB,OAAS,CACL,GAAa,MAATyW,GAAiBtY,EAAIjB,KAAKwgB,GAAGjH,GAC7B,OAAOzW,EAGX,GAFI7B,EAAIjB,KAAKwgB,GAAGxgB,IACZ8C,EAAOlD,KAAKqB,EAAIuc,OACfvc,EAAI+H,cACL,OAAgB,MAATuQ,EAAgBzW,EAAS,IAG5C,MAAM8lD,EACF,YAAY3pD,EAAQJ,EAAQsC,EAAOxB,GAC/BT,KAAKD,OAASA,EACdC,KAAKL,OAASA,EACdK,KAAKiC,MAAQA,EACbjC,KAAKS,MAAQA,GAGrB,MAAMgpD,EACF,YAAYlpD,EAASgpD,EAAStnD,GAC1BjC,KAAKO,QAAUA,EACfP,KAAKupD,QAAUA,EACfvpD,KAAKiC,MAAQA,EACbjC,KAAKc,KAAOP,EAAQZ,OAAOmM,IAAIwC,MAAM/N,EAAQZ,OAAOA,OAAOsC,IAE/D,WAAa,OAAOjC,KAAKc,KAAKyQ,KAC9B,WAAa,OAAOvR,KAAKO,QAAQE,MAAQT,KAAKO,QAAQZ,OAAOA,OAAOK,KAAKiC,MAAQ,GACjF,SAAW,OAAOjC,KAAKO,QAAQE,MAAQT,KAAKO,QAAQZ,OAAOA,OAAOK,KAAKiC,MAAQ,GAC/E,MAAMuT,EAAK/V,EAAK6J,GACZ,IAAI,OAAE3J,GAAWK,KAAKO,QAClB0B,EAAQtC,EAAO6pD,UAAUxpD,KAAKiC,MAAQ,EAAGtC,EAAOA,OAAOK,KAAKiC,MAAQ,GAAIuT,EAAK/V,EAAMO,KAAKO,QAAQE,MAAO6I,GAC3G,OAAOrH,EAAQ,EAAI,KAAO,IAAIwnD,EAAWzpD,KAAKO,QAASP,KAAMiC,GAEjE,iBAAmB,OAAOjC,KAAKgiC,MAAM,EAAG,EAAG,GAC3C,gBAAkB,OAAOhiC,KAAKgiC,OAAO,EAAG,EAAG,GAC3C,WAAWviC,GAAO,OAAOO,KAAKgiC,MAAM,EAAGviC,EAAK,GAC5C,YAAYA,GAAO,OAAOO,KAAKgiC,OAAO,EAAGviC,GAAM,GAC/C,MAAMA,EAAK6J,EAAM+/C,EAAUO,GAAU,GACjC,IAAKA,EACD,OAAO,KACX,IAAI,OAAEjqD,GAAWK,KAAKO,QAClB0B,EAAQtC,EAAO6pD,UAAUxpD,KAAKiC,MAAQ,EAAGtC,EAAOA,OAAOK,KAAKiC,MAAQ,GAAIqH,EAAO,EAAI,GAAK,EAAG7J,EAAMO,KAAKO,QAAQE,MAAO6I,GACzH,OAAOrH,EAAQ,EAAI,KAAO,IAAIwnD,EAAWzpD,KAAKO,QAASP,KAAMiC,GAEjE,aACI,OAAOjC,KAAKupD,SAAWvpD,KAAKO,QAAQR,OAAO+pD,wBAE/C,gBAAgBt0C,GACZ,OAAOxV,KAAKupD,QAAU,KAAOvpD,KAAKO,QAAQR,OAAO4pD,UAAU3pD,KAAKO,QAAQ0B,MAAQuT,EAAKA,EAAK,EAAG,GAEjG,kBACI,IAAI,OAAE7V,GAAWK,KAAKO,QAClB8Z,EAAQ1a,EAAOA,OAAOK,KAAKiC,MAAQ,GACvC,OAAIoY,GAASra,KAAKupD,QAAU5pD,EAAOA,OAAOK,KAAKupD,QAAQtnD,MAAQ,GAAKtC,EAAOA,OAAOgB,QACvE,IAAI8oD,EAAWzpD,KAAKO,QAASP,KAAKupD,QAASlvC,GAC/Cra,KAAKgqD,gBAAgB,GAEhC,kBACI,IAAI,OAAErqD,GAAWK,KAAKO,QAClB0pD,EAAcjqD,KAAKupD,QAAUvpD,KAAKupD,QAAQtnD,MAAQ,EAAI,EAC1D,OAAIjC,KAAKiC,OAASgoD,EACPjqD,KAAKgqD,iBAAiB,GAC1B,IAAIP,EAAWzpD,KAAKO,QAASP,KAAKupD,QAAS5pD,EAAO6pD,UAAUS,EAAajqD,KAAKiC,OAAQ,EAAG,EAAG,IAEvG,aAAe,OAAO,IAAIkmD,EAAWnoD,MACrC,WAAa,OAAO,KACpB,SACI,IAAI2K,EAAW,GAAIC,EAAY,IAC3B,OAAEjL,GAAWK,KAAKO,QAClBi3C,EAASx3C,KAAKiC,MAAQ,EAAGmnD,EAAOzpD,EAAOA,OAAOK,KAAKiC,MAAQ,GAC/D,GAAImnD,EAAO5R,EAAQ,CACf,IAAI3xC,EAAOlG,EAAOA,OAAOK,KAAKiC,MAAQ,GAAI8D,EAAKpG,EAAOA,OAAOK,KAAKiC,MAAQ,GAC1E0I,EAASjK,KAAKf,EAAOsD,MAAMu0C,EAAQ4R,EAAMvjD,EAAME,IAC/C6E,EAAUlK,KAAK,GAEnB,OAAO,IAAIwnD,EAAKloD,KAAKc,KAAM6J,EAAUC,EAAW5K,KAAK+F,GAAK/F,KAAK6F,MAEnE,QAAQpG,EAAK6J,EAAO,GAChB,OAAOg/C,EAAYtoD,KAAMP,EAAK6J,GAAM,GAExC,aAAa7J,EAAK6J,EAAO,GACrB,OAAOg/C,EAAYtoD,KAAMP,EAAK6J,GAAM,GAExC,2BAA2B7J,GAAO,OAAOulB,EAA2BhlB,KAAMP,GAE1E,WAAa,OAAOO,KAAKO,QAAQZ,OAAOqpD,YAAYhpD,KAAKiC,OACzD,SAASnB,EAAMmb,EAAS,KAAM5B,EAAQ,MAClC,IAAIvT,EAAIijD,EAAY/pD,KAAMc,EAAMmb,EAAQ5B,GACxC,OAAOvT,EAAEnG,OAASmG,EAAE,GAAK,KAE7B,YAAYhG,EAAMmb,EAAS,KAAM5B,EAAQ,MACrC,OAAO0vC,EAAY/pD,KAAMc,EAAMmb,EAAQ5B,IAK/C,MAAM8tC,EAEF,YAAY7pC,EAEZw7B,EAAO,GAMH,GALA95C,KAAK85C,KAAOA,EACZ95C,KAAKL,OAAS,KACdK,KAAKV,MAAQ,GACbU,KAAKiC,MAAQ,EACbjC,KAAKkqD,WAAa,KACd5rC,aAAgB+pC,EAChBroD,KAAKmqD,UAAU7rC,OAEd,CACDte,KAAKooD,MAAQ9pC,EAAK/d,QAAQR,OAC1BC,KAAKL,OAAS2e,EAAK/d,QACnB,IAAK,IAAIoG,EAAI2X,EAAKirC,QAAS5iD,EAAGA,EAAIA,EAAE4iD,QAChCvpD,KAAKV,MAAMuuB,QAAQlnB,EAAE1E,OACzBjC,KAAKkqD,WAAa5rC,EAClBte,KAAKoqD,SAAS9rC,EAAKrc,QAI3B,WAAa,OAAOjC,KAAKc,KAAKyQ,KAC9B,UAAU+M,GACN,QAAKA,IAELte,KAAKooD,MAAQ9pC,EACbte,KAAKc,KAAOwd,EAAKxd,KACjBd,KAAK6F,KAAOyY,EAAKzY,KACjB7F,KAAK+F,GAAKuY,EAAKvY,IACR,GAEX,SAAS9D,EAAOnB,GACZd,KAAKiC,MAAQA,EACb,IAAI,MAAExB,EAAK,OAAEd,GAAWK,KAAKL,OAI7B,OAHAK,KAAKc,KAAOA,GAAQnB,EAAOmM,IAAIwC,MAAM3O,EAAOA,OAAOsC,IACnDjC,KAAK6F,KAAOpF,EAAQd,EAAOA,OAAOsC,EAAQ,GAC1CjC,KAAK+F,GAAKtF,EAAQd,EAAOA,OAAOsC,EAAQ,IACjC,EAEX,MAAMqc,GACF,QAAKA,IAEDA,aAAgB+pC,GAChBroD,KAAKL,OAAS,KACPK,KAAKmqD,UAAU7rC,KAE1Bte,KAAKL,OAAS2e,EAAK/d,QACZP,KAAKoqD,SAAS9rC,EAAKrc,MAAOqc,EAAKxd,QAG1C,WACI,OAAOd,KAAKL,OAASK,KAAKL,OAAOA,OAAOqpD,YAAYhpD,KAAKiC,OAASjC,KAAKooD,MAAMvW,WAGjF,WAAWr8B,EAAK/V,EAAK6J,GACjB,IAAKtJ,KAAKL,OACN,OAAOK,KAAKqqD,MAAMrqD,KAAKooD,MAAMuB,UAAUn0C,EAAM,EAAIxV,KAAKooD,MAAM9pC,KAAK3T,SAAShK,OAAS,EAAI,EAAG6U,EAAK/V,EAAK6J,EAAMtJ,KAAK85C,OACnH,IAAI,OAAEn6C,GAAWK,KAAKL,OAClBsC,EAAQtC,EAAO6pD,UAAUxpD,KAAKiC,MAAQ,EAAGtC,EAAOA,OAAOK,KAAKiC,MAAQ,GAAIuT,EAAK/V,EAAMO,KAAKL,OAAOc,MAAO6I,GAC1G,QAAIrH,EAAQ,KAEZjC,KAAKV,MAAMoB,KAAKV,KAAKiC,OACdjC,KAAKoqD,SAASnoD,IAIzB,aAAe,OAAOjC,KAAKsqD,WAAW,EAAG,EAAG,GAE5C,YAAc,OAAOtqD,KAAKsqD,YAAY,EAAG,EAAG,GAE5C,WAAW7qD,GAAO,OAAOO,KAAKsqD,WAAW,EAAG7qD,EAAK,GAEjD,YAAYA,GAAO,OAAOO,KAAKsqD,YAAY,EAAG7qD,GAAM,GAMpD,MAAMA,EAAK6J,EAAM+/C,GAAW,EAAMO,GAAU,GACxC,OAAK5pD,KAAKL,SAEHiqD,GAAU5pD,KAAKsqD,WAAW,EAAG7qD,EAAK6J,GAD9BtJ,KAAKqqD,MAAMrqD,KAAKooD,MAAM7pC,MAAM9e,EAAK6J,EAAM+/C,KAA0B,EAAZrpD,KAAK85C,MAAsB8P,IAI/F,SACI,IAAK5pD,KAAKL,OACN,OAAOK,KAAKmqD,UAAuB,EAAZnqD,KAAK85C,KAAuB95C,KAAKooD,MAAMmB,QAAUvpD,KAAKooD,MAAMroD,QACvF,GAAIC,KAAKV,MAAMqB,OACX,OAAOX,KAAKoqD,SAASpqD,KAAKV,MAAMoC,OACpC,IAAI3B,EAAsB,EAAZC,KAAK85C,KAAuB95C,KAAKL,OAAOI,OAASC,KAAKL,OAAOI,OAAO+pD,wBAElF,OADA9pD,KAAKL,OAAS,KACPK,KAAKmqD,UAAUpqD,GAG1B,QAAQyV,GACJ,IAAKxV,KAAKL,OACN,QAAQK,KAAKooD,MAAMmB,SACbvpD,KAAKqqD,MAAMrqD,KAAKooD,MAAMnmD,MAAQ,EAAI,KAC9BjC,KAAKooD,MAAMmB,QAAQI,UAAU3pD,KAAKooD,MAAMnmD,MAAQuT,EAAKA,EAAK,EAAG,EAAkBxV,KAAK85C,OAClG,IAAI,OAAEn6C,GAAWK,KAAKL,OAAQo8C,EAAI/7C,KAAKV,MAAMqB,OAAS,EACtD,GAAI6U,EAAM,EAAG,CACT,IAAIy0C,EAAclO,EAAI,EAAI,EAAI/7C,KAAKV,MAAMy8C,GAAK,EAC9C,GAAI/7C,KAAKiC,OAASgoD,EACd,OAAOjqD,KAAKoqD,SAASzqD,EAAO6pD,UAAUS,EAAajqD,KAAKiC,OAAQ,EAAG,EAAG,QAEzE,CACD,IAAIoY,EAAQ1a,EAAOA,OAAOK,KAAKiC,MAAQ,GACvC,GAAIoY,GAAS0hC,EAAI,EAAIp8C,EAAOA,OAAOgB,OAAShB,EAAOA,OAAOK,KAAKV,MAAMy8C,GAAK,IACtE,OAAO/7C,KAAKoqD,SAAS/vC,GAE7B,OAAO0hC,EAAI,GAAI/7C,KAAKqqD,MAAMrqD,KAAKL,OAAOI,OAAO4pD,UAAU3pD,KAAKL,OAAOsC,MAAQuT,EAAKA,EAAK,EAAG,EAAkBxV,KAAK85C,OAGnH,cAAgB,OAAO95C,KAAKuqD,QAAQ,GAEpC,cAAgB,OAAOvqD,KAAKuqD,SAAS,GACrC,WAAW/0C,GACP,IAAIvT,EAAOlC,GAAQ,OAAEJ,GAAWK,KAChC,GAAIL,EAAQ,CACR,GAAI6V,EAAM,GACN,GAAIxV,KAAKiC,MAAQtC,EAAOA,OAAOA,OAAOgB,OAClC,OAAO,OAGX,IAAK,IAAIR,EAAI,EAAGA,EAAIH,KAAKiC,MAAO9B,IAC5B,GAAIR,EAAOA,OAAOA,OAAOQ,EAAI,GAAKH,KAAKiC,MACnC,OAAO,IAEhBA,QAAOlC,UAAWJ,SAGlBsC,QAAOsnD,QAASxpD,GAAWC,KAAKooD,OAEvC,KAAOroD,IAAUkC,QAAOsnD,QAASxpD,GAAWA,GACxC,GAAIkC,GAAS,EACT,IAAK,IAAI9B,EAAI8B,EAAQuT,EAAKsD,EAAItD,EAAM,GAAK,EAAIzV,EAAOue,KAAK3T,SAAShK,OAAQR,GAAK2Y,EAAG3Y,GAAKqV,EAAK,CACxF,IAAIwsB,EAAQjiC,EAAOue,KAAK3T,SAASxK,GACjC,GAAiB,EAAZH,KAAK85C,MAAwB9X,aAAiB+mB,IAAe/mB,EAAMlhC,KAAK2nD,aAAe/M,EAAS1Z,GACjG,OAAO,EAGvB,OAAO,EAEX,KAAKxsB,EAAK+I,GACN,GAAIA,GAASve,KAAKsqD,WAAW90C,EAAK,EAAG,GACjC,OAAO,EACX,OAAS,CACL,GAAIxV,KAAKuqD,QAAQ/0C,GACb,OAAO,EACX,GAAIxV,KAAKwqD,WAAWh1C,KAASxV,KAAKD,SAC9B,OAAO,GAQnB,KAAKwe,GAAQ,GAAQ,OAAOve,KAAKyqD,KAAK,EAAGlsC,GAKzC,KAAKA,GAAQ,GAAQ,OAAOve,KAAKyqD,MAAM,EAAGlsC,GAI1C,OAAO9e,EAAK6J,EAAO,GAEf,MAAOtJ,KAAK6F,MAAQ7F,KAAK+F,KACpBuD,EAAO,EAAItJ,KAAK6F,MAAQpG,EAAMO,KAAK6F,KAAOpG,KAC1C6J,GAAQ,EAAItJ,KAAK+F,IAAMtG,EAAMO,KAAK+F,GAAKtG,GACxC,IAAKO,KAAKD,SACN,MAER,MAAOC,KAAKsqD,WAAW,EAAG7qD,EAAK6J,IAC/B,OAAOtJ,KAIX,WACI,IAAKA,KAAKL,OACN,OAAOK,KAAKooD,MAChB,IAAItN,EAAQ96C,KAAKkqD,WAAYtmD,EAAS,KAAM/C,EAAQ,EACpD,GAAIi6C,GAASA,EAAMv6C,SAAWP,KAAKL,OAC/BkI,EAAM,IAAK,IAAI5F,EAAQjC,KAAKiC,MAAO85C,EAAI/7C,KAAKV,MAAMqB,OAAQo7C,GAAK,GAAI,CAC/D,IAAK,IAAIvsB,EAAIsrB,EAAOtrB,EAAGA,EAAIA,EAAE+5B,QACzB,GAAI/5B,EAAEvtB,OAASA,EAAO,CAClB,GAAIA,GAASjC,KAAKiC,MACd,OAAOutB,EACX5rB,EAAS4rB,EACT3uB,EAAQk7C,EAAI,EACZ,MAAMl0C,EAEd5F,EAAQjC,KAAKV,QAAQy8C,GAG7B,IAAK,IAAI57C,EAAIU,EAAOV,EAAIH,KAAKV,MAAMqB,OAAQR,IACvCyD,EAAS,IAAI6lD,EAAWzpD,KAAKL,OAAQiE,EAAQ5D,KAAKV,MAAMa,IAC5D,OAAOH,KAAKkqD,WAAa,IAAIT,EAAWzpD,KAAKL,OAAQiE,EAAQ5D,KAAKiC,OAKtE,WACI,OAAOjC,KAAKL,OAAS,KAAOK,KAAKooD,MAAM9pC,MAG/C,SAASo9B,EAASryC,GACd,OAAOA,EAAKsB,SAASjH,KAAK0a,GAAMA,aAAc2qC,IAAe3qC,EAAGtd,KAAK2nD,aAAe/M,EAASt9B,IAEjG,SAASyqC,EAAU5kD,GACf,IAAIqW,EACJ,IAAI,OAAE3a,EAAM,QAAEsK,EAAO,gBAAE6F,EAAkBs3C,EAAmB,OAAE1kD,EAAS,GAAE,cAAEqN,EAAgB9F,EAAQqE,MAAM3N,QAAWsD,EAChHsF,EAASgL,MAAMgY,QAAQ5sB,GAAU,IAAImpD,EAAiBnpD,EAAQA,EAAOgB,QAAUhB,EAC/E2O,EAAQrE,EAAQqE,MAChBC,EAAc,EAAGzO,EAAY,EACjC,SAAS4qD,EAAST,EAAaU,EAAQhgD,EAAUC,EAAWggD,GACxD,IAAI,GAAEzjD,EAAE,MAAE1G,EAAK,IAAEmB,EAAG,KAAEC,GAAS0H,EAC3BshD,EAAmB/qD,EACvB,MAAO+B,EAAO,EAAG,CAEb,GADA0H,EAAOrH,QACM,GAATL,EAAwB,CACxB,IAAIyc,EAAO5b,EAAOyE,GAGlB,OAFAwD,EAASjK,KAAK4d,QACd1T,EAAUlK,KAAKD,EAAQwpD,GAGtB,IAAa,GAATpoD,EAEL,YADA0M,EAAcpH,GAGb,IAAa,GAATtF,EAEL,YADA/B,EAAYqH,GAIZ,MAAM,IAAIX,WAAW,6BAA6B3E,GAG1D,IAAsByc,EAAM3e,EAAxBmB,EAAOwN,EAAMnH,GACbmxB,EAAW73B,EAAQwpD,EACvB,GAAIroD,EAAMnB,GAASqP,IAAoBnQ,EAASmrD,EAAevhD,EAAO9J,IAAMkrD,EAAQC,IAAY,CAE5F,IAAI3mD,EAAO,IAAIuE,YAAY7I,EAAOkC,KAAOlC,EAAO4jC,MAC5CwnB,EAASxhD,EAAO9J,IAAME,EAAOkC,KAAMI,EAAQgC,EAAKtD,OACpD,MAAO4I,EAAO9J,IAAMsrD,EAChB9oD,EAAQ+oD,EAAarrD,EAAOc,MAAOwD,EAAMhC,GAC7Cqc,EAAO,IAAIyqC,EAAW9kD,EAAMrC,EAAMjC,EAAOc,MAAOwJ,GAChDquB,EAAW34B,EAAOc,MAAQwpD,MAEzB,CACD,IAAIc,EAASxhD,EAAO9J,IAAMoC,EAC1B0H,EAAOrH,OACP,IAAI+oD,EAAgB,GAAIC,EAAiB,GACrCC,EAAgBhkD,GAAM4I,EAAgB5I,GAAM,EAC5CikD,EAAY,EAAGC,EAAUzpD,EAC7B,MAAO2H,EAAO9J,IAAMsrD,EACZI,GAAiB,GAAK5hD,EAAOpC,IAAMgkD,GAAiB5hD,EAAO1H,MAAQ,GAC/D0H,EAAO3H,KAAOypD,EAAUv7C,IACxBw7C,EAAeL,EAAeC,EAAgBzqD,EAAO2qD,EAAW7hD,EAAO3H,IAAKypD,EAASF,EAAeN,GACpGO,EAAYH,EAActqD,OAC1B0qD,EAAU9hD,EAAO3H,KAErB2H,EAAOrH,QAGPwoD,EAASjqD,EAAOsqD,EAAQE,EAAeC,EAAgBC,GAO/D,GAJIA,GAAiB,GAAKC,EAAY,GAAKA,EAAYH,EAActqD,QACjE2qD,EAAeL,EAAeC,EAAgBzqD,EAAO2qD,EAAW3qD,EAAO4qD,EAASF,EAAeN,GACnGI,EAAcM,UACdL,EAAeK,UACXJ,GAAiB,GAAKC,EAAY,EAAG,CACrC,IAAII,EAAOC,EAAa3qD,GACxBwd,EAAOoqC,EAAa5nD,EAAMmqD,EAAeC,EAAgB,EAAGD,EAActqD,OAAQ,EAAGiB,EAAMnB,EAAO+qD,EAAMA,QAGxGltC,EAAOsqC,EAAS9nD,EAAMmqD,EAAeC,EAAgBtpD,EAAMnB,EAAOoqD,EAAmBjpD,GAG7F+I,EAASjK,KAAK4d,GACd1T,EAAUlK,KAAK43B,GAEnB,SAASmzB,EAAa3qD,GAClB,MAAO,CAAC6J,EAAUC,EAAWjK,KACzB,IAAgD2D,EAAMonD,EAAlD5rD,EAAY,EAAG6rD,EAAQhhD,EAAShK,OAAS,EAC7C,GAAIgrD,GAAS,IAAMrnD,EAAOqG,EAASghD,cAAmBzD,EAAM,CACxD,IAAKyD,GAASrnD,EAAKxD,MAAQA,GAAQwD,EAAK3D,QAAUA,EAC9C,OAAO2D,GACPonD,EAAgBpnD,EAAKuG,KAAK08C,EAASznD,cACnCA,EAAY8K,EAAU+gD,GAASrnD,EAAK3D,OAAS+qD,GAErD,OAAO9C,EAAS9nD,EAAM6J,EAAUC,EAAWjK,EAAQb,IAG3D,SAASwrD,EAAe3gD,EAAUC,EAAWtJ,EAAMnB,EAAG0F,EAAME,EAAIjF,EAAMhB,GAClE,IAAImrD,EAAgB,GAAIC,EAAiB,GACzC,MAAOvgD,EAAShK,OAASR,EACrB8qD,EAAcvqD,KAAKiK,EAASjJ,OAC5BwpD,EAAexqD,KAAKkK,EAAUlJ,MAAQJ,EAAOuE,GAEjD8E,EAASjK,KAAKkoD,EAAS3+C,EAAQqE,MAAMxN,GAAOmqD,EAAeC,EAAgBnlD,EAAKF,EAAM/F,EAAYiG,IAClG6E,EAAUlK,KAAKmF,EAAOvE,GAE1B,SAASsnD,EAAS9nD,EAAM6J,EAAUC,EAAWjK,EAAQb,EAAY,EAAG4R,GAChE,GAAInD,EAAa,CACb,IAAIvC,EAAO,CAACu7C,EAASh5C,YAAaA,GAClCmD,EAAQA,EAAQ,CAAC1F,GAAM5L,OAAOsR,GAAS,CAAC1F,GAE5C,GAAIlM,EAAY,GAAI,CAChB,IAAIkM,EAAO,CAACu7C,EAASznD,UAAWA,GAChC4R,EAAQA,EAAQ,CAAC1F,GAAM5L,OAAOsR,GAAS,CAAC1F,GAE5C,OAAO,IAAIk8C,EAAKpnD,EAAM6J,EAAUC,EAAWjK,EAAQ+Q,GAEvD,SAASo5C,EAAec,EAAShB,GAO7B,IAAIiB,EAAOtiD,EAAOsiD,OACdhqD,EAAO,EAAGpB,EAAQ,EAAG8iC,EAAO,EAAGuoB,EAAWD,EAAKjqD,IAAMkO,EACrDlM,EAAS,CAAE/B,KAAM,EAAGpB,MAAO,EAAG8iC,KAAM,GACxC17B,EAAM,IAAK,IAAI8iD,EAASkB,EAAKpsD,IAAMmsD,EAASC,EAAKpsD,IAAMkrD,GAAS,CAC5D,IAAIoB,EAAWF,EAAKhqD,KAEpB,GAAIgqD,EAAK1kD,IAAMyjD,GAAYmB,GAAY,EAAG,CAGtCnoD,EAAO/B,KAAOA,EACd+B,EAAOnD,MAAQA,EACfmD,EAAO2/B,KAAOA,EACdA,GAAQ,EACR1hC,GAAQ,EACRgqD,EAAK3pD,OACL,SAEJ,IAAIo2B,EAAWuzB,EAAKpsD,IAAMssD,EAC1B,GAAIA,EAAW,GAAKzzB,EAAWqyB,GAAUkB,EAAKprD,MAAQqrD,EAClD,MACJ,IAAIE,EAAeH,EAAK1kD,IAAM4I,EAAgB,EAAI,EAC9CowB,EAAY0rB,EAAKprD,MACrBorD,EAAK3pD,OACL,MAAO2pD,EAAKpsD,IAAM64B,EAAU,CACxB,GAAIuzB,EAAKhqD,KAAO,EAAG,CACf,IAAkB,GAAdgqD,EAAKhqD,KAGL,MAAMgG,EAFNmkD,GAAgB,OAIfH,EAAK1kD,IAAM4I,IAChBi8C,GAAgB,GAEpBH,EAAK3pD,OAETzB,EAAQ0/B,EACRt+B,GAAQkqD,EACRxoB,GAAQyoB,EAOZ,OALIpB,EAAW,GAAK/oD,GAAQ+pD,KACxBhoD,EAAO/B,KAAOA,EACd+B,EAAOnD,MAAQA,EACfmD,EAAO2/B,KAAOA,GAEX3/B,EAAO/B,KAAO,EAAI+B,OAAS6N,EAEtC,SAASu5C,EAAa3oB,EAAa1iC,EAAQsC,GACvC,IAAI,GAAEkF,EAAE,MAAE1G,EAAK,IAAEmB,EAAG,KAAEC,GAAS0H,EAE/B,GADAA,EAAOrH,OACHL,GAAQ,GAAKsF,EAAK4I,EAAe,CACjC,IAAIvE,EAAavJ,EACjB,GAAIJ,EAAO,EAAG,CACV,IAAIkpD,EAASxhD,EAAO9J,KAAOoC,EAAO,GAClC,MAAO0H,EAAO9J,IAAMsrD,EAChB9oD,EAAQ+oD,EAAa3oB,EAAa1iC,EAAQsC,GAElDtC,IAASsC,GAASuJ,EAClB7L,IAASsC,GAASL,EAAMygC,EACxB1iC,IAASsC,GAASxB,EAAQ4hC,EAC1B1iC,IAASsC,GAASkF,OAEJ,GAATtF,EACL0M,EAAcpH,GAEA,GAATtF,IACL/B,EAAYqH,GAEhB,OAAOlF,EAEX,IAAI0I,EAAW,GAAIC,EAAY,GAC/B,MAAOrB,EAAO9J,IAAM,EAChBirD,EAASzmD,EAAKxD,OAAS,EAAGwD,EAAKo+B,aAAe,EAAG13B,EAAUC,GAAY,GAC3E,IAAIjK,EAAgC,QAAtB2Z,EAAKrW,EAAKtD,cAA2B,IAAP2Z,EAAgBA,EAAM3P,EAAShK,OAASiK,EAAU,GAAKD,EAAS,GAAGhK,OAAS,EACxH,OAAO,IAAIunD,EAAK55C,EAAMrK,EAAK4L,OAAQlF,EAAS4gD,UAAW3gD,EAAU2gD,UAAW5qD,GAEhF,MAAMsrD,EAAgB,IAAIj8C,QAC1B,SAAS+7C,EAASG,EAAa5tC,GAC3B,IAAK4tC,EAAYzD,aAAenqC,aAAgByqC,GAAczqC,EAAKxd,MAAQorD,EACvE,OAAO,EACX,IAAIrqD,EAAOoqD,EAAch8C,IAAIqO,GAC7B,GAAY,MAARzc,EAAc,CACdA,EAAO,EACP,IAAK,IAAImgC,KAAS1jB,EAAK3T,SAAU,CAC7B,GAAIq3B,EAAMlhC,MAAQorD,KAAiBlqB,aAAiBkmB,GAAO,CACvDrmD,EAAO,EACP,MAEJA,GAAQkqD,EAASG,EAAalqB,GAElCiqB,EAAcngD,IAAIwS,EAAMzc,GAE5B,OAAOA,EAEX,SAAS6mD,EAETwD,EAEAvhD,EAAUC,EAEV/E,EAAME,EAENtF,EAEAE,EAEAwrD,EAEAC,GACI,IAAIpd,EAAQ,EACZ,IAAK,IAAI7uC,EAAI0F,EAAM1F,EAAI4F,EAAI5F,IACvB6uC,GAAS+c,EAASG,EAAavhD,EAASxK,IAC5C,IAAIksD,EAAWtlD,KAAKulD,KAAc,IAARtd,EAAe,GACrCic,EAAgB,GAAIC,EAAiB,GACzC,SAASqB,EAAO5hD,EAAUC,EAAW/E,EAAME,EAAIE,GAC3C,IAAK,IAAI9F,EAAI0F,EAAM1F,EAAI4F,GAAK,CACxB,IAAIymD,EAAYrsD,EAAGssD,EAAa7hD,EAAUzK,GAAIusD,EAAYX,EAASG,EAAavhD,EAASxK,IAEzF,IADAA,IACOA,EAAI4F,EAAI5F,IAAK,CAChB,IAAIwsD,EAAWZ,EAASG,EAAavhD,EAASxK,IAC9C,GAAIusD,EAAYC,GAAYN,EACxB,MACJK,GAAaC,EAEjB,GAAIxsD,GAAKqsD,EAAY,EAAG,CACpB,GAAIE,EAAYL,EAAU,CACtB,IAAIO,EAAOjiD,EAAS6hD,GACpBD,EAAOK,EAAKjiD,SAAUiiD,EAAKhiD,UAAW,EAAGgiD,EAAKjiD,SAAShK,OAAQiK,EAAU4hD,GAAavmD,GACtF,SAEJglD,EAAcvqD,KAAKiK,EAAS6hD,QAE3B,CACD,IAAI7rD,EAASiK,EAAUzK,EAAI,GAAKwK,EAASxK,EAAI,GAAGQ,OAAS8rD,EACzDxB,EAAcvqD,KAAKgoD,EAAawD,EAAavhD,EAAUC,EAAW4hD,EAAWrsD,EAAGssD,EAAY9rD,EAAQ,KAAMyrD,IAE9GlB,EAAexqD,KAAK+rD,EAAaxmD,EAASxF,IAIlD,OADA8rD,EAAO5hD,EAAUC,EAAW/E,EAAME,EAAI,IAC9BomD,GAASC,GAAQnB,EAAeC,EAAgBvqD,GAU5D,MAAMksD,EAEF,YAIAhnD,EAEAE,EAEAsD,EAKApD,EAAQuE,GAAY,EAAOC,GAAU,GACjCzK,KAAK6F,KAAOA,EACZ7F,KAAK+F,GAAKA,EACV/F,KAAKqJ,KAAOA,EACZrJ,KAAKiG,OAASA,EACdjG,KAAKwzB,MAAQhpB,EAAY,EAAgB,IAAMC,EAAU,EAAc,GAM3E,gBAAkB,OAAoB,EAAZzK,KAAKwzB,MAAwB,EAGvD,cAAgB,OAAoB,EAAZxzB,KAAKwzB,MAAsB,EAOnD,eAAenqB,EAAMW,EAAY,GAAI8iD,GAAU,GAC3C,IAAIlpD,EAAS,CAAC,IAAIipD,EAAa,EAAGxjD,EAAK1I,OAAQ0I,EAAM,GAAG,EAAOyjD,IAC/D,IAAK,IAAI7xC,KAAKjR,EACNiR,EAAElV,GAAKsD,EAAK1I,QACZiD,EAAOlD,KAAKua,GACpB,OAAOrX,EAKX,oBAAoBoG,EAAWmN,EAAS41C,EAAS,KAC7C,IAAK51C,EAAQxW,OACT,OAAOqJ,EACX,IAAIpG,EAAS,GACTopD,EAAK,EAAGC,EAAQjjD,EAAUrJ,OAASqJ,EAAU,GAAK,KACtD,IAAK,IAAIkjD,EAAK,EAAGztD,EAAM,EAAGuD,EAAM,GAAIkqD,IAAM,CACtC,IAAIC,EAAQD,EAAK/1C,EAAQxW,OAASwW,EAAQ+1C,GAAM,KAC5CvR,EAAUwR,EAAQA,EAAM5sC,MAAQ,IACpC,GAAIo7B,EAAUl8C,GAAOstD,EACjB,MAAOE,GAASA,EAAMpnD,KAAO81C,EAAS,CAClC,IAAIyR,EAAMH,EACV,GAAIxtD,GAAO2tD,EAAIvnD,MAAQ81C,GAAWyR,EAAIrnD,IAAM/C,EAAK,CAC7C,IAAIqqD,EAAQtmD,KAAKC,IAAIomD,EAAIvnD,KAAMpG,GAAOuD,EAAKsqD,EAAMvmD,KAAKE,IAAImmD,EAAIrnD,GAAI41C,GAAW34C,EAC7EoqD,EAAMC,GAASC,EAAM,KAAO,IAAIT,EAAaQ,EAAOC,EAAKF,EAAI/jD,KAAM+jD,EAAInnD,OAASjD,EAAKkqD,EAAK,IAAKC,GAInG,GAFIC,GACAxpD,EAAOlD,KAAK0sD,GACZH,EAAMlnD,GAAK41C,EACX,MACJsR,EAAQD,EAAKhjD,EAAUrJ,OAASqJ,EAAUgjD,KAAQ,KAE1D,IAAKG,EACD,MACJ1tD,EAAM0tD,EAAM3sC,IACZxd,EAAMmqD,EAAM3sC,IAAM2sC,EAAMzsC,IAE5B,OAAO9c,GAIf,MAAM2pD,EASF,WAAWnoD,EAAO4E,EAAW3E,GAIzB,MAHoB,iBAATD,IACPA,EAAQ,IAAIooD,EAAYpoD,IAC5BC,EAAUA,EAAwCA,EAAO1E,OAAS0E,EAAO8F,IAAIrE,GAAK,IAAIwgD,EAAMxgD,EAAEjB,KAAMiB,EAAEf,KAAO,CAAC,IAAIuhD,EAAM,EAAG,IAAxG,CAAC,IAAIA,EAAM,EAAGliD,EAAMzE,SAChCX,KAAKytD,YAAYroD,EAAO4E,GAAa,GAAI3E,GAGpD,MAAMD,EAAO4E,EAAW3E,GACpB,IAAIsN,EAAQ3S,KAAKyf,WAAWra,EAAO4E,EAAW3E,GAC9C,OAAS,CACL,IAAI8J,EAAOwD,EAAMtK,UACjB,GAAI8G,EACA,OAAOA,IAIvB,MAAMq+C,EACF,YAAYzuC,GACR/e,KAAK+e,OAASA,EAElB,aAAe,OAAO/e,KAAK+e,OAAOpe,OAClC,MAAMkF,GAAQ,OAAO7F,KAAK+e,OAAO9b,MAAM4C,GACvC,iBAAmB,OAAO,EAC1B,KAAKA,EAAME,GAAM,OAAO/F,KAAK+e,OAAO9b,MAAM4C,EAAME,IAsC/B,IAAIwhD,EAAS,CAAEC,SAAS,K,sBC1yC7C,YA4BA,SAASkG,EAAeC,EAAOC,GAG7B,IADA,IAAIC,EAAK,EACA1tD,EAAIwtD,EAAMhtD,OAAS,EAAGR,GAAK,EAAGA,IAAK,CAC1C,IAAImE,EAAOqpD,EAAMxtD,GACJ,MAATmE,EACFqpD,EAAM5/C,OAAO5N,EAAG,GACE,OAATmE,GACTqpD,EAAM5/C,OAAO5N,EAAG,GAChB0tD,KACSA,IACTF,EAAM5/C,OAAO5N,EAAG,GAChB0tD,KAKJ,GAAID,EACF,KAAOC,IAAMA,EACXF,EAAM9/B,QAAQ,MAIlB,OAAO8/B,EAmJT,SAASG,EAASz4C,GACI,kBAATA,IAAmBA,GAAc,IAE5C,IAGIlV,EAHAM,EAAQ,EACRmB,GAAO,EACPmsD,GAAe,EAGnB,IAAK5tD,EAAIkV,EAAK1U,OAAS,EAAGR,GAAK,IAAKA,EAClC,GAA2B,KAAvBkV,EAAKjP,WAAWjG,IAGhB,IAAK4tD,EAAc,CACjBttD,EAAQN,EAAI,EACZ,YAEgB,IAATyB,IAGXmsD,GAAe,EACfnsD,EAAMzB,EAAI,GAId,OAAa,IAATyB,EAAmB,GAChByT,EAAKpS,MAAMxC,EAAOmB,GA8D3B,SAAS3B,EAAQ+tD,EAAI/yC,GACjB,GAAI+yC,EAAG/tD,OAAQ,OAAO+tD,EAAG/tD,OAAOgb,GAEhC,IADA,IAAIgzC,EAAM,GACD9tD,EAAI,EAAGA,EAAI6tD,EAAGrtD,OAAQR,IACvB8a,EAAE+yC,EAAG7tD,GAAIA,EAAG6tD,IAAKC,EAAIvtD,KAAKstD,EAAG7tD,IAErC,OAAO8tD,EA3OX95C,EAAQsB,QAAU,WAIhB,IAHA,IAAIy4C,EAAe,GACfC,GAAmB,EAEdhuD,EAAIsU,UAAU9T,OAAS,EAAGR,IAAM,IAAMguD,EAAkBhuD,IAAK,CACpE,IAAIkV,EAAQlV,GAAK,EAAKsU,UAAUtU,GAAK2I,EAAQwM,MAG7C,GAAoB,kBAATD,EACT,MAAM,IAAI+4C,UAAU,6CACV/4C,IAIZ64C,EAAe74C,EAAO,IAAM64C,EAC5BC,EAAsC,MAAnB94C,EAAKgqB,OAAO,IAWjC,OAJA6uB,EAAeR,EAAeztD,EAAOiuD,EAAarqD,MAAM,MAAM,SAASxE,GACrE,QAASA,MACN8uD,GAAkBxiB,KAAK,MAEnBwiB,EAAmB,IAAM,IAAMD,GAAiB,KAK3D/5C,EAAQ+tB,UAAY,SAAS7sB,GAC3B,IAAIg5C,EAAal6C,EAAQk6C,WAAWh5C,GAChCi5C,EAAqC,MAArBC,EAAOl5C,GAAO,GAclC,OAXAA,EAAOq4C,EAAeztD,EAAOoV,EAAKxR,MAAM,MAAM,SAASxE,GACrD,QAASA,MACNgvD,GAAY1iB,KAAK,KAEjBt2B,GAASg5C,IACZh5C,EAAO,KAELA,GAAQi5C,IACVj5C,GAAQ,MAGFg5C,EAAa,IAAM,IAAMh5C,GAInClB,EAAQk6C,WAAa,SAASh5C,GAC5B,MAA0B,MAAnBA,EAAKgqB,OAAO,IAIrBlrB,EAAQw3B,KAAO,WACb,IAAI6iB,EAAQj6C,MAAMlN,UAAUpE,MAAMuR,KAAKC,UAAW,GAClD,OAAON,EAAQ+tB,UAAUjiC,EAAOuuD,GAAO,SAASnvD,EAAG4C,GACjD,GAAiB,kBAAN5C,EACT,MAAM,IAAI+uD,UAAU,0CAEtB,OAAO/uD,KACNssC,KAAK,OAMVx3B,EAAQs6C,SAAW,SAAS5oD,EAAME,GAIhC,SAASkgC,EAAKyoB,GAEZ,IADA,IAAIjuD,EAAQ,EACLA,EAAQiuD,EAAI/tD,OAAQF,IACzB,GAAmB,KAAfiuD,EAAIjuD,GAAe,MAIzB,IADA,IAAImB,EAAM8sD,EAAI/tD,OAAS,EAChBiB,GAAO,EAAGA,IACf,GAAiB,KAAb8sD,EAAI9sD,GAAa,MAGvB,OAAInB,EAAQmB,EAAY,GACjB8sD,EAAIzrD,MAAMxC,EAAOmB,EAAMnB,EAAQ,GAfxCoF,EAAOsO,EAAQsB,QAAQ5P,GAAM0oD,OAAO,GACpCxoD,EAAKoO,EAAQsB,QAAQ1P,GAAIwoD,OAAO,GAsBhC,IALA,IAAII,EAAY1oB,EAAKpgC,EAAKhC,MAAM,MAC5B+qD,EAAU3oB,EAAKlgC,EAAGlC,MAAM,MAExBlD,EAASoG,KAAKE,IAAI0nD,EAAUhuD,OAAQiuD,EAAQjuD,QAC5CkuD,EAAkBluD,EACbR,EAAI,EAAGA,EAAIQ,EAAQR,IAC1B,GAAIwuD,EAAUxuD,KAAOyuD,EAAQzuD,GAAI,CAC/B0uD,EAAkB1uD,EAClB,MAIJ,IAAI2uD,EAAc,GAClB,IAAS3uD,EAAI0uD,EAAiB1uD,EAAIwuD,EAAUhuD,OAAQR,IAClD2uD,EAAYpuD,KAAK,MAKnB,OAFAouD,EAAcA,EAAY1uD,OAAOwuD,EAAQ3rD,MAAM4rD,IAExCC,EAAYnjB,KAAK,MAG1Bx3B,EAAQ46C,IAAM,IACd56C,EAAQ66C,UAAY,IAEpB76C,EAAQ86C,QAAU,SAAU55C,GAE1B,GADoB,kBAATA,IAAmBA,GAAc,IACxB,IAAhBA,EAAK1U,OAAc,MAAO,IAK9B,IAJA,IAAI8hC,EAAOptB,EAAKjP,WAAW,GACvB8oD,EAAmB,KAATzsB,EACV7gC,GAAO,EACPmsD,GAAe,EACV5tD,EAAIkV,EAAK1U,OAAS,EAAGR,GAAK,IAAKA,EAEtC,GADAsiC,EAAOptB,EAAKjP,WAAWjG,GACV,KAATsiC,GACA,IAAKsrB,EAAc,CACjBnsD,EAAMzB,EACN,YAIJ4tD,GAAe,EAInB,OAAa,IAATnsD,EAAmBstD,EAAU,IAAM,IACnCA,GAAmB,IAARttD,EAGN,IAEFyT,EAAKpS,MAAM,EAAGrB,IAiCvBuS,EAAQ25C,SAAW,SAAUz4C,EAAMkwB,GACjC,IAAItqB,EAAI6yC,EAASz4C,GAIjB,OAHIkwB,GAAOtqB,EAAEszC,QAAQ,EAAIhpB,EAAI5kC,UAAY4kC,IACvCtqB,EAAIA,EAAEszC,OAAO,EAAGtzC,EAAEta,OAAS4kC,EAAI5kC,SAE1Bsa,GAGT9G,EAAQg7C,QAAU,SAAU95C,GACN,kBAATA,IAAmBA,GAAc,IAQ5C,IAPA,IAAI+5C,GAAY,EACZC,EAAY,EACZztD,GAAO,EACPmsD,GAAe,EAGfuB,EAAc,EACTnvD,EAAIkV,EAAK1U,OAAS,EAAGR,GAAK,IAAKA,EAAG,CACzC,IAAIsiC,EAAOptB,EAAKjP,WAAWjG,GAC3B,GAAa,KAATsiC,GASS,IAAT7gC,IAGFmsD,GAAe,EACfnsD,EAAMzB,EAAI,GAEC,KAATsiC,GAEkB,IAAd2sB,EACFA,EAAWjvD,EACY,IAAhBmvD,IACPA,EAAc,IACK,IAAdF,IAGTE,GAAe,QArBb,IAAKvB,EAAc,CACjBsB,EAAYlvD,EAAI,EAChB,OAuBR,OAAkB,IAAdivD,IAA4B,IAATxtD,GAEH,IAAhB0tD,GAEgB,IAAhBA,GAAqBF,IAAaxtD,EAAM,GAAKwtD,IAAaC,EAAY,EACjE,GAEFh6C,EAAKpS,MAAMmsD,EAAUxtD,IAa9B,IAAI2sD,EAA6B,MAApB,KAAKA,QAAQ,GACpB,SAAU/rB,EAAK/hC,EAAO+2B,GAAO,OAAOgL,EAAI+rB,OAAO9tD,EAAO+2B,IACtD,SAAUgL,EAAK/hC,EAAO+2B,GAEpB,OADI/2B,EAAQ,IAAGA,EAAQ+hC,EAAI7hC,OAASF,GAC7B+hC,EAAI+rB,OAAO9tD,EAAO+2B,M","file":"js/chunk-13dd614c.7d2a11d5.js","sourcesContent":["import { Parser, NodeSet, NodeType, DefaultBufferLength, NodeProp, Tree } from '@lezer/common';\n\n/// A parse stack. These are used internally by the parser to track\n/// parsing progress. They also provide some properties and methods\n/// that external code such as a tokenizer can use to get information\n/// about the parse state.\nclass Stack {\n    /// @internal\n    constructor(\n    /// The parse that this stack is part of @internal\n    p, \n    /// Holds state, input pos, buffer index triplets for all but the\n    /// top state @internal\n    stack, \n    /// The current parse state @internal\n    state, \n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /// @internal\n    reducePos, \n    /// The input position up to which this stack has parsed.\n    pos, \n    /// The dynamic score of the stack, including dynamic precedence\n    /// and error-recovery penalties\n    /// @internal\n    score, \n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /// @internal\n    buffer, \n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /// @internal\n    bufferBase, \n    /// @internal\n    curContext, \n    /// @internal\n    lookAhead = 0, \n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /// @internal\n    parent) {\n        this.p = p;\n        this.stack = stack;\n        this.state = state;\n        this.reducePos = reducePos;\n        this.pos = pos;\n        this.score = score;\n        this.buffer = buffer;\n        this.bufferBase = bufferBase;\n        this.curContext = curContext;\n        this.lookAhead = lookAhead;\n        this.parent = parent;\n    }\n    /// @internal\n    toString() {\n        return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`;\n    }\n    // Start an empty stack\n    /// @internal\n    static start(p, state, pos = 0) {\n        let cx = p.parser.context;\n        return new Stack(p, [], state, pos, pos, 0, [], 0, cx ? new StackContext(cx, cx.start) : null, 0, null);\n    }\n    /// The stack's current [context](#lr.ContextTracker) value, if\n    /// any. Its type will depend on the context tracker's type\n    /// parameter, or it will be `null` if there is no context\n    /// tracker.\n    get context() { return this.curContext ? this.curContext.context : null; }\n    // Push a state onto the stack, tracking its start position as well\n    // as the buffer base at that point.\n    /// @internal\n    pushState(state, start) {\n        this.stack.push(this.state, start, this.bufferBase + this.buffer.length);\n        this.state = state;\n    }\n    // Apply a reduce action\n    /// @internal\n    reduce(action) {\n        let depth = action >> 19 /* ReduceDepthShift */, type = action & 65535 /* ValueMask */;\n        let { parser } = this.p;\n        let dPrec = parser.dynamicPrecedence(type);\n        if (dPrec)\n            this.score += dPrec;\n        if (depth == 0) {\n            // Zero-depth reductions are a special case—they add stuff to\n            // the stack without popping anything off.\n            if (type < parser.minRepeatTerm)\n                this.storeNode(type, this.reducePos, this.reducePos, 4, true);\n            this.pushState(parser.getGoto(this.state, type, true), this.reducePos);\n            this.reduceContext(type, this.reducePos);\n            return;\n        }\n        // Find the base index into `this.stack`, content after which will\n        // be dropped. Note that with `StayFlag` reductions we need to\n        // consume two extra frames (the dummy parent node for the skipped\n        // expression and the state that we'll be staying in, which should\n        // be moved to `this.state`).\n        let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* StayFlag */ ? 6 : 0);\n        let start = this.stack[base - 2];\n        let bufferBase = this.stack[base - 1], count = this.bufferBase + this.buffer.length - bufferBase;\n        // Store normal terms or `R -> R R` repeat reductions\n        if (type < parser.minRepeatTerm || (action & 131072 /* RepeatFlag */)) {\n            let pos = parser.stateFlag(this.state, 1 /* Skipped */) ? this.pos : this.reducePos;\n            this.storeNode(type, start, pos, count + 4, true);\n        }\n        if (action & 262144 /* StayFlag */) {\n            this.state = this.stack[base];\n        }\n        else {\n            let baseStateID = this.stack[base - 3];\n            this.state = parser.getGoto(baseStateID, type, true);\n        }\n        while (this.stack.length > base)\n            this.stack.pop();\n        this.reduceContext(type, start);\n    }\n    // Shift a value into the buffer\n    /// @internal\n    storeNode(term, start, end, size = 4, isReduce = false) {\n        if (term == 0 /* Err */) { // Try to omit/merge adjacent error nodes\n            let cur = this, top = this.buffer.length;\n            if (top == 0 && cur.parent) {\n                top = cur.bufferBase - cur.parent.bufferBase;\n                cur = cur.parent;\n            }\n            if (top > 0 && cur.buffer[top - 4] == 0 /* Err */ && cur.buffer[top - 1] > -1) {\n                if (start == end)\n                    return;\n                if (cur.buffer[top - 2] >= start) {\n                    cur.buffer[top - 2] = end;\n                    return;\n                }\n            }\n        }\n        if (!isReduce || this.pos == end) { // Simple case, just append\n            this.buffer.push(term, start, end, size);\n        }\n        else { // There may be skipped nodes that have to be moved forward\n            let index = this.buffer.length;\n            if (index > 0 && this.buffer[index - 4] != 0 /* Err */)\n                while (index > 0 && this.buffer[index - 2] > end) {\n                    // Move this record forward\n                    this.buffer[index] = this.buffer[index - 4];\n                    this.buffer[index + 1] = this.buffer[index - 3];\n                    this.buffer[index + 2] = this.buffer[index - 2];\n                    this.buffer[index + 3] = this.buffer[index - 1];\n                    index -= 4;\n                    if (size > 4)\n                        size -= 4;\n                }\n            this.buffer[index] = term;\n            this.buffer[index + 1] = start;\n            this.buffer[index + 2] = end;\n            this.buffer[index + 3] = size;\n        }\n    }\n    // Apply a shift action\n    /// @internal\n    shift(action, next, nextEnd) {\n        let start = this.pos;\n        if (action & 131072 /* GotoFlag */) {\n            this.pushState(action & 65535 /* ValueMask */, this.pos);\n        }\n        else if ((action & 262144 /* StayFlag */) == 0) { // Regular shift\n            let nextState = action, { parser } = this.p;\n            if (nextEnd > this.pos || next <= parser.maxNode) {\n                this.pos = nextEnd;\n                if (!parser.stateFlag(nextState, 1 /* Skipped */))\n                    this.reducePos = nextEnd;\n            }\n            this.pushState(nextState, start);\n            this.shiftContext(next, start);\n            if (next <= parser.maxNode)\n                this.buffer.push(next, start, nextEnd, 4);\n        }\n        else { // Shift-and-stay, which means this is a skipped token\n            this.pos = nextEnd;\n            this.shiftContext(next, start);\n            if (next <= this.p.parser.maxNode)\n                this.buffer.push(next, start, nextEnd, 4);\n        }\n    }\n    // Apply an action\n    /// @internal\n    apply(action, next, nextEnd) {\n        if (action & 65536 /* ReduceFlag */)\n            this.reduce(action);\n        else\n            this.shift(action, next, nextEnd);\n    }\n    // Add a prebuilt (reused) node into the buffer.\n    /// @internal\n    useNode(value, next) {\n        let index = this.p.reused.length - 1;\n        if (index < 0 || this.p.reused[index] != value) {\n            this.p.reused.push(value);\n            index++;\n        }\n        let start = this.pos;\n        this.reducePos = this.pos = start + value.length;\n        this.pushState(next, start);\n        this.buffer.push(index, start, this.reducePos, -1 /* size == -1 means this is a reused value */);\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reuse(this.curContext.context, value, this, this.p.stream.reset(this.pos - value.length)));\n    }\n    // Split the stack. Due to the buffer sharing and the fact\n    // that `this.stack` tends to stay quite shallow, this isn't very\n    // expensive.\n    /// @internal\n    split() {\n        let parent = this;\n        let off = parent.buffer.length;\n        // Because the top of the buffer (after this.pos) may be mutated\n        // to reorder reductions and skipped tokens, and shared buffers\n        // should be immutable, this copies any outstanding skipped tokens\n        // to the new buffer, and puts the base pointer before them.\n        while (off > 0 && parent.buffer[off - 2] > parent.reducePos)\n            off -= 4;\n        let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;\n        // Make sure parent points to an actual parent with content, if there is such a parent.\n        while (parent && base == parent.bufferBase)\n            parent = parent.parent;\n        return new Stack(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, this.curContext, this.lookAhead, parent);\n    }\n    // Try to recover from an error by 'deleting' (ignoring) one token.\n    /// @internal\n    recoverByDelete(next, nextEnd) {\n        let isNode = next <= this.p.parser.maxNode;\n        if (isNode)\n            this.storeNode(next, this.pos, nextEnd, 4);\n        this.storeNode(0 /* Err */, this.pos, nextEnd, isNode ? 8 : 4);\n        this.pos = this.reducePos = nextEnd;\n        this.score -= 190 /* Delete */;\n    }\n    /// Check if the given term would be able to be shifted (optionally\n    /// after some reductions) on this stack. This can be useful for\n    /// external tokenizers that want to make sure they only provide a\n    /// given token when it applies.\n    canShift(term) {\n        for (let sim = new SimulatedStack(this);;) {\n            let action = this.p.parser.stateSlot(sim.state, 4 /* DefaultReduce */) || this.p.parser.hasAction(sim.state, term);\n            if ((action & 65536 /* ReduceFlag */) == 0)\n                return true;\n            if (action == 0)\n                return false;\n            sim.reduce(action);\n        }\n    }\n    // Apply up to Recover.MaxNext recovery actions that conceptually\n    // inserts some missing token or rule.\n    /// @internal\n    recoverByInsert(next) {\n        if (this.stack.length >= 300 /* MaxInsertStackDepth */)\n            return [];\n        let nextStates = this.p.parser.nextStates(this.state);\n        if (nextStates.length > 4 /* MaxNext */ << 1 || this.stack.length >= 120 /* DampenInsertStackDepth */) {\n            let best = [];\n            for (let i = 0, s; i < nextStates.length; i += 2) {\n                if ((s = nextStates[i + 1]) != this.state && this.p.parser.hasAction(s, next))\n                    best.push(nextStates[i], s);\n            }\n            if (this.stack.length < 120 /* DampenInsertStackDepth */)\n                for (let i = 0; best.length < 4 /* MaxNext */ << 1 && i < nextStates.length; i += 2) {\n                    let s = nextStates[i + 1];\n                    if (!best.some((v, i) => (i & 1) && v == s))\n                        best.push(nextStates[i], s);\n                }\n            nextStates = best;\n        }\n        let result = [];\n        for (let i = 0; i < nextStates.length && result.length < 4 /* MaxNext */; i += 2) {\n            let s = nextStates[i + 1];\n            if (s == this.state)\n                continue;\n            let stack = this.split();\n            stack.storeNode(0 /* Err */, stack.pos, stack.pos, 4, true);\n            stack.pushState(s, this.pos);\n            stack.shiftContext(nextStates[i], this.pos);\n            stack.score -= 200 /* Insert */;\n            result.push(stack);\n        }\n        return result;\n    }\n    // Force a reduce, if possible. Return false if that can't\n    // be done.\n    /// @internal\n    forceReduce() {\n        let reduce = this.p.parser.stateSlot(this.state, 5 /* ForcedReduce */);\n        if ((reduce & 65536 /* ReduceFlag */) == 0)\n            return false;\n        let { parser } = this.p;\n        if (!parser.validAction(this.state, reduce)) {\n            let depth = reduce >> 19 /* ReduceDepthShift */, term = reduce & 65535 /* ValueMask */;\n            let target = this.stack.length - depth * 3;\n            if (target < 0 || parser.getGoto(this.stack[target], term, false) < 0)\n                return false;\n            this.storeNode(0 /* Err */, this.reducePos, this.reducePos, 4, true);\n            this.score -= 100 /* Reduce */;\n        }\n        this.reduce(reduce);\n        return true;\n    }\n    /// @internal\n    forceAll() {\n        while (!this.p.parser.stateFlag(this.state, 2 /* Accepting */)) {\n            if (!this.forceReduce()) {\n                this.storeNode(0 /* Err */, this.pos, this.pos, 4, true);\n                break;\n            }\n        }\n        return this;\n    }\n    /// Check whether this state has no further actions (assumed to be a direct descendant of the\n    /// top state, since any other states must be able to continue\n    /// somehow). @internal\n    get deadEnd() {\n        if (this.stack.length != 3)\n            return false;\n        let { parser } = this.p;\n        return parser.data[parser.stateSlot(this.state, 1 /* Actions */)] == 65535 /* End */ &&\n            !parser.stateSlot(this.state, 4 /* DefaultReduce */);\n    }\n    /// Restart the stack (put it back in its start state). Only safe\n    /// when this.stack.length == 3 (state is directly below the top\n    /// state). @internal\n    restart() {\n        this.state = this.stack[0];\n        this.stack.length = 0;\n    }\n    /// @internal\n    sameState(other) {\n        if (this.state != other.state || this.stack.length != other.stack.length)\n            return false;\n        for (let i = 0; i < this.stack.length; i += 3)\n            if (this.stack[i] != other.stack[i])\n                return false;\n        return true;\n    }\n    /// Get the parser used by this stack.\n    get parser() { return this.p.parser; }\n    /// Test whether a given dialect (by numeric ID, as exported from\n    /// the terms file) is enabled.\n    dialectEnabled(dialectID) { return this.p.parser.dialect.flags[dialectID]; }\n    shiftContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.shift(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    reduceContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reduce(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    /// @internal\n    emitContext() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -3)\n            this.buffer.push(this.curContext.hash, this.reducePos, this.reducePos, -3);\n    }\n    /// @internal\n    emitLookAhead() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -4)\n            this.buffer.push(this.lookAhead, this.reducePos, this.reducePos, -4);\n    }\n    updateContext(context) {\n        if (context != this.curContext.context) {\n            let newCx = new StackContext(this.curContext.tracker, context);\n            if (newCx.hash != this.curContext.hash)\n                this.emitContext();\n            this.curContext = newCx;\n        }\n    }\n    /// @internal\n    setLookAhead(lookAhead) {\n        if (lookAhead > this.lookAhead) {\n            this.emitLookAhead();\n            this.lookAhead = lookAhead;\n        }\n    }\n    /// @internal\n    close() {\n        if (this.curContext && this.curContext.tracker.strict)\n            this.emitContext();\n        if (this.lookAhead > 0)\n            this.emitLookAhead();\n    }\n}\nclass StackContext {\n    constructor(tracker, context) {\n        this.tracker = tracker;\n        this.context = context;\n        this.hash = tracker.strict ? tracker.hash(context) : 0;\n    }\n}\nvar Recover;\n(function (Recover) {\n    Recover[Recover[\"Insert\"] = 200] = \"Insert\";\n    Recover[Recover[\"Delete\"] = 190] = \"Delete\";\n    Recover[Recover[\"Reduce\"] = 100] = \"Reduce\";\n    Recover[Recover[\"MaxNext\"] = 4] = \"MaxNext\";\n    Recover[Recover[\"MaxInsertStackDepth\"] = 300] = \"MaxInsertStackDepth\";\n    Recover[Recover[\"DampenInsertStackDepth\"] = 120] = \"DampenInsertStackDepth\";\n})(Recover || (Recover = {}));\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n    constructor(start) {\n        this.start = start;\n        this.state = start.state;\n        this.stack = start.stack;\n        this.base = this.stack.length;\n    }\n    reduce(action) {\n        let term = action & 65535 /* ValueMask */, depth = action >> 19 /* ReduceDepthShift */;\n        if (depth == 0) {\n            if (this.stack == this.start.stack)\n                this.stack = this.stack.slice();\n            this.stack.push(this.state, 0, 0);\n            this.base += 3;\n        }\n        else {\n            this.base -= (depth - 1) * 3;\n        }\n        let goto = this.start.p.parser.getGoto(this.stack[this.base - 3], term, true);\n        this.state = goto;\n    }\n}\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor {\n    constructor(stack, pos, index) {\n        this.stack = stack;\n        this.pos = pos;\n        this.index = index;\n        this.buffer = stack.buffer;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    static create(stack, pos = stack.bufferBase + stack.buffer.length) {\n        return new StackBufferCursor(stack, pos, pos - stack.bufferBase);\n    }\n    maybeNext() {\n        let next = this.stack.parent;\n        if (next != null) {\n            this.index = this.stack.bufferBase - next.bufferBase;\n            this.stack = next;\n            this.buffer = next.buffer;\n        }\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    next() {\n        this.index -= 4;\n        this.pos -= 4;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    fork() {\n        return new StackBufferCursor(this.stack, this.pos, this.index);\n    }\n}\n\nclass CachedToken {\n    constructor() {\n        this.start = -1;\n        this.value = -1;\n        this.end = -1;\n        this.extended = -1;\n        this.lookAhead = 0;\n        this.mask = 0;\n        this.context = 0;\n    }\n}\nconst nullToken = new CachedToken;\n/// [Tokenizers](#lr.ExternalTokenizer) interact with the input\n/// through this interface. It presents the input as a stream of\n/// characters, tracking lookahead and hiding the complexity of\n/// [ranges](#common.Parser.parse^ranges) from tokenizer code.\nclass InputStream {\n    /// @internal\n    constructor(\n    /// @internal\n    input, \n    /// @internal\n    ranges) {\n        this.input = input;\n        this.ranges = ranges;\n        /// @internal\n        this.chunk = \"\";\n        /// @internal\n        this.chunkOff = 0;\n        /// Backup chunk\n        this.chunk2 = \"\";\n        this.chunk2Pos = 0;\n        /// The character code of the next code unit in the input, or -1\n        /// when the stream is at the end of the input.\n        this.next = -1;\n        /// @internal\n        this.token = nullToken;\n        this.rangeIndex = 0;\n        this.pos = this.chunkPos = ranges[0].from;\n        this.range = ranges[0];\n        this.end = ranges[ranges.length - 1].to;\n        this.readNext();\n    }\n    resolveOffset(offset, assoc) {\n        let range = this.range, index = this.rangeIndex;\n        let pos = this.pos + offset;\n        while (pos < range.from) {\n            if (!index)\n                return null;\n            let next = this.ranges[--index];\n            pos -= range.from - next.to;\n            range = next;\n        }\n        while (assoc < 0 ? pos > range.to : pos >= range.to) {\n            if (index == this.ranges.length - 1)\n                return null;\n            let next = this.ranges[++index];\n            pos += next.from - range.to;\n            range = next;\n        }\n        return pos;\n    }\n    /// Look at a code unit near the stream position. `.peek(0)` equals\n    /// `.next`, `.peek(-1)` gives you the previous character, and so\n    /// on.\n    ///\n    /// Note that looking around during tokenizing creates dependencies\n    /// on potentially far-away content, which may reduce the\n    /// effectiveness incremental parsing—when looking forward—or even\n    /// cause invalid reparses when looking backward more than 25 code\n    /// units, since the library does not track lookbehind.\n    peek(offset) {\n        let idx = this.chunkOff + offset, pos, result;\n        if (idx >= 0 && idx < this.chunk.length) {\n            pos = this.pos + offset;\n            result = this.chunk.charCodeAt(idx);\n        }\n        else {\n            let resolved = this.resolveOffset(offset, 1);\n            if (resolved == null)\n                return -1;\n            pos = resolved;\n            if (pos >= this.chunk2Pos && pos < this.chunk2Pos + this.chunk2.length) {\n                result = this.chunk2.charCodeAt(pos - this.chunk2Pos);\n            }\n            else {\n                let i = this.rangeIndex, range = this.range;\n                while (range.to <= pos)\n                    range = this.ranges[++i];\n                this.chunk2 = this.input.chunk(this.chunk2Pos = pos);\n                if (pos + this.chunk2.length > range.to)\n                    this.chunk2 = this.chunk2.slice(0, range.to - pos);\n                result = this.chunk2.charCodeAt(0);\n            }\n        }\n        if (pos >= this.token.lookAhead)\n            this.token.lookAhead = pos + 1;\n        return result;\n    }\n    /// Accept a token. By default, the end of the token is set to the\n    /// current stream position, but you can pass an offset (relative to\n    /// the stream position) to change that.\n    acceptToken(token, endOffset = 0) {\n        let end = endOffset ? this.resolveOffset(endOffset, -1) : this.pos;\n        if (end == null || end < this.token.start)\n            throw new RangeError(\"Token end out of bounds\");\n        this.token.value = token;\n        this.token.end = end;\n    }\n    getChunk() {\n        if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {\n            let { chunk, chunkPos } = this;\n            this.chunk = this.chunk2;\n            this.chunkPos = this.chunk2Pos;\n            this.chunk2 = chunk;\n            this.chunk2Pos = chunkPos;\n            this.chunkOff = this.pos - this.chunkPos;\n        }\n        else {\n            this.chunk2 = this.chunk;\n            this.chunk2Pos = this.chunkPos;\n            let nextChunk = this.input.chunk(this.pos);\n            let end = this.pos + nextChunk.length;\n            this.chunk = end > this.range.to ? nextChunk.slice(0, this.range.to - this.pos) : nextChunk;\n            this.chunkPos = this.pos;\n            this.chunkOff = 0;\n        }\n    }\n    readNext() {\n        if (this.chunkOff >= this.chunk.length) {\n            this.getChunk();\n            if (this.chunkOff == this.chunk.length)\n                return this.next = -1;\n        }\n        return this.next = this.chunk.charCodeAt(this.chunkOff);\n    }\n    /// Move the stream forward N (defaults to 1) code units. Returns\n    /// the new value of [`next`](#lr.InputStream.next).\n    advance(n = 1) {\n        this.chunkOff += n;\n        while (this.pos + n >= this.range.to) {\n            if (this.rangeIndex == this.ranges.length - 1)\n                return this.setDone();\n            n -= this.range.to - this.pos;\n            this.range = this.ranges[++this.rangeIndex];\n            this.pos = this.range.from;\n        }\n        this.pos += n;\n        if (this.pos >= this.token.lookAhead)\n            this.token.lookAhead = this.pos + 1;\n        return this.readNext();\n    }\n    setDone() {\n        this.pos = this.chunkPos = this.end;\n        this.range = this.ranges[this.rangeIndex = this.ranges.length - 1];\n        this.chunk = \"\";\n        return this.next = -1;\n    }\n    /// @internal\n    reset(pos, token) {\n        if (token) {\n            this.token = token;\n            token.start = pos;\n            token.lookAhead = pos + 1;\n            token.value = token.extended = -1;\n        }\n        else {\n            this.token = nullToken;\n        }\n        if (this.pos != pos) {\n            this.pos = pos;\n            if (pos == this.end) {\n                this.setDone();\n                return this;\n            }\n            while (pos < this.range.from)\n                this.range = this.ranges[--this.rangeIndex];\n            while (pos >= this.range.to)\n                this.range = this.ranges[++this.rangeIndex];\n            if (pos >= this.chunkPos && pos < this.chunkPos + this.chunk.length) {\n                this.chunkOff = pos - this.chunkPos;\n            }\n            else {\n                this.chunk = \"\";\n                this.chunkOff = 0;\n            }\n            this.readNext();\n        }\n        return this;\n    }\n    /// @internal\n    read(from, to) {\n        if (from >= this.chunkPos && to <= this.chunkPos + this.chunk.length)\n            return this.chunk.slice(from - this.chunkPos, to - this.chunkPos);\n        if (from >= this.range.from && to <= this.range.to)\n            return this.input.read(from, to);\n        let result = \"\";\n        for (let r of this.ranges) {\n            if (r.from >= to)\n                break;\n            if (r.to > from)\n                result += this.input.read(Math.max(r.from, from), Math.min(r.to, to));\n        }\n        return result;\n    }\n}\n/// @internal\nclass TokenGroup {\n    constructor(data, id) {\n        this.data = data;\n        this.id = id;\n    }\n    token(input, stack) { readToken(this.data, input, stack, this.id); }\n}\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/// `@external tokens` declarations in the grammar should resolve to\n/// an instance of this class.\nclass ExternalTokenizer {\n    /// Create a tokenizer. The first argument is the function that,\n    /// given an input stream, scans for the types of tokens it\n    /// recognizes at the stream's position, and calls\n    /// [`acceptToken`](#lr.InputStream.acceptToken) when it finds\n    /// one.\n    constructor(\n    /// @internal\n    token, options = {}) {\n        this.token = token;\n        this.contextual = !!options.contextual;\n        this.fallback = !!options.fallback;\n        this.extend = !!options.extend;\n    }\n}\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `token` when it matches a token.\nfunction readToken(data, input, stack, group) {\n    let state = 0, groupMask = 1 << group, { parser } = stack.p, { dialect } = parser;\n    scan: for (;;) {\n        if ((groupMask & data[state]) == 0)\n            break;\n        let accEnd = data[state + 1];\n        // Check whether this state can lead to a token in the current group\n        // Accept tokens in this state, possibly overwriting\n        // lower-precedence / shorter tokens\n        for (let i = state + 3; i < accEnd; i += 2)\n            if ((data[i + 1] & groupMask) > 0) {\n                let term = data[i];\n                if (dialect.allows(term) &&\n                    (input.token.value == -1 || input.token.value == term || parser.overrides(term, input.token.value))) {\n                    input.acceptToken(term);\n                    break;\n                }\n            }\n        // Do a binary search on the state's edges\n        for (let next = input.next, low = 0, high = data[state + 2]; low < high;) {\n            let mid = (low + high) >> 1;\n            let index = accEnd + mid + (mid << 1);\n            let from = data[index], to = data[index + 1];\n            if (next < from)\n                high = mid;\n            else if (next >= to)\n                low = mid + 1;\n            else {\n                state = data[index + 2];\n                input.advance();\n                continue scan;\n            }\n        }\n        break;\n    }\n}\n\n// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input, Type = Uint16Array) {\n    if (typeof input != \"string\")\n        return input;\n    let array = null;\n    for (let pos = 0, out = 0; pos < input.length;) {\n        let value = 0;\n        for (;;) {\n            let next = input.charCodeAt(pos++), stop = false;\n            if (next == 126 /* BigValCode */) {\n                value = 65535 /* BigVal */;\n                break;\n            }\n            if (next >= 92 /* Gap2 */)\n                next--;\n            if (next >= 34 /* Gap1 */)\n                next--;\n            let digit = next - 32 /* Start */;\n            if (digit >= 46 /* Base */) {\n                digit -= 46 /* Base */;\n                stop = true;\n            }\n            value += digit;\n            if (stop)\n                break;\n            value *= 46 /* Base */;\n        }\n        if (array)\n            array[out++] = value;\n        else\n            array = new Type(value);\n    }\n    return array;\n}\n\n// FIXME find some way to reduce recovery work done when the input\n// doesn't match the grammar at all.\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && /\\bparse\\b/.test(process.env.LOG);\nlet stackIDs = null;\nvar Safety;\n(function (Safety) {\n    Safety[Safety[\"Margin\"] = 25] = \"Margin\";\n})(Safety || (Safety = {}));\nfunction cutAt(tree, pos, side) {\n    let cursor = tree.fullCursor();\n    cursor.moveTo(pos);\n    for (;;) {\n        if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))\n            for (;;) {\n                if ((side < 0 ? cursor.to < pos : cursor.from > pos) && !cursor.type.isError)\n                    return side < 0 ? Math.max(0, Math.min(cursor.to - 1, pos - 25 /* Margin */))\n                        : Math.min(tree.length, Math.max(cursor.from + 1, pos + 25 /* Margin */));\n                if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())\n                    break;\n                if (!cursor.parent())\n                    return side < 0 ? 0 : tree.length;\n            }\n    }\n}\nclass FragmentCursor {\n    constructor(fragments, nodeSet) {\n        this.fragments = fragments;\n        this.nodeSet = nodeSet;\n        this.i = 0;\n        this.fragment = null;\n        this.safeFrom = -1;\n        this.safeTo = -1;\n        this.trees = [];\n        this.start = [];\n        this.index = [];\n        this.nextFragment();\n    }\n    nextFragment() {\n        let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n        if (fr) {\n            this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;\n            this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;\n            while (this.trees.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n            }\n            this.trees.push(fr.tree);\n            this.start.push(-fr.offset);\n            this.index.push(0);\n            this.nextStart = this.safeFrom;\n        }\n        else {\n            this.nextStart = 1e9;\n        }\n    }\n    // `pos` must be >= any previously given `pos` for this cursor\n    nodeAt(pos) {\n        if (pos < this.nextStart)\n            return null;\n        while (this.fragment && this.safeTo <= pos)\n            this.nextFragment();\n        if (!this.fragment)\n            return null;\n        for (;;) {\n            let last = this.trees.length - 1;\n            if (last < 0) { // End of tree\n                this.nextFragment();\n                return null;\n            }\n            let top = this.trees[last], index = this.index[last];\n            if (index == top.children.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n                continue;\n            }\n            let next = top.children[index];\n            let start = this.start[last] + top.positions[index];\n            if (start > pos) {\n                this.nextStart = start;\n                return null;\n            }\n            if (next instanceof Tree) {\n                if (start == pos) {\n                    if (start < this.safeFrom)\n                        return null;\n                    let end = start + next.length;\n                    if (end <= this.safeTo) {\n                        let lookAhead = next.prop(NodeProp.lookAhead);\n                        if (!lookAhead || end + lookAhead < this.fragment.to)\n                            return next;\n                    }\n                }\n                this.index[last]++;\n                if (start + next.length >= Math.max(this.safeFrom, pos)) { // Enter this node\n                    this.trees.push(next);\n                    this.start.push(start);\n                    this.index.push(0);\n                }\n            }\n            else {\n                this.index[last]++;\n                this.nextStart = start + next.length;\n            }\n        }\n    }\n}\nclass TokenCache {\n    constructor(parser, stream) {\n        this.stream = stream;\n        this.tokens = [];\n        this.mainToken = null;\n        this.actions = [];\n        this.tokens = parser.tokenizers.map(_ => new CachedToken);\n    }\n    getActions(stack) {\n        let actionIndex = 0;\n        let main = null;\n        let { parser } = stack.p, { tokenizers } = parser;\n        let mask = parser.stateSlot(stack.state, 3 /* TokenizerMask */);\n        let context = stack.curContext ? stack.curContext.hash : 0;\n        let lookAhead = 0;\n        for (let i = 0; i < tokenizers.length; i++) {\n            if (((1 << i) & mask) == 0)\n                continue;\n            let tokenizer = tokenizers[i], token = this.tokens[i];\n            if (main && !tokenizer.fallback)\n                continue;\n            if (tokenizer.contextual || token.start != stack.pos || token.mask != mask || token.context != context) {\n                this.updateCachedToken(token, tokenizer, stack);\n                token.mask = mask;\n                token.context = context;\n            }\n            if (token.lookAhead > token.end + 25 /* Margin */)\n                lookAhead = Math.max(token.lookAhead, lookAhead);\n            if (token.value != 0 /* Err */) {\n                let startIndex = actionIndex;\n                if (token.extended > -1)\n                    actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);\n                actionIndex = this.addActions(stack, token.value, token.end, actionIndex);\n                if (!tokenizer.extend) {\n                    main = token;\n                    if (actionIndex > startIndex)\n                        break;\n                }\n            }\n        }\n        while (this.actions.length > actionIndex)\n            this.actions.pop();\n        if (lookAhead)\n            stack.setLookAhead(lookAhead);\n        if (!main && stack.pos == this.stream.end) {\n            main = new CachedToken;\n            main.value = stack.p.parser.eofTerm;\n            main.start = main.end = stack.pos;\n            actionIndex = this.addActions(stack, main.value, main.end, actionIndex);\n        }\n        this.mainToken = main;\n        return this.actions;\n    }\n    getMainToken(stack) {\n        if (this.mainToken)\n            return this.mainToken;\n        let main = new CachedToken, { pos, p } = stack;\n        main.start = pos;\n        main.end = Math.min(pos + 1, p.stream.end);\n        main.value = pos == p.stream.end ? p.parser.eofTerm : 0 /* Err */;\n        return main;\n    }\n    updateCachedToken(token, tokenizer, stack) {\n        tokenizer.token(this.stream.reset(stack.pos, token), stack);\n        if (token.value > -1) {\n            let { parser } = stack.p;\n            for (let i = 0; i < parser.specialized.length; i++)\n                if (parser.specialized[i] == token.value) {\n                    let result = parser.specializers[i](this.stream.read(token.start, token.end), stack);\n                    if (result >= 0 && stack.p.parser.dialect.allows(result >> 1)) {\n                        if ((result & 1) == 0 /* Specialize */)\n                            token.value = result >> 1;\n                        else\n                            token.extended = result >> 1;\n                        break;\n                    }\n                }\n        }\n        else {\n            token.value = 0 /* Err */;\n            token.end = Math.min(stack.p.stream.end, stack.pos + 1);\n        }\n    }\n    putAction(action, token, end, index) {\n        // Don't add duplicate actions\n        for (let i = 0; i < index; i += 3)\n            if (this.actions[i] == action)\n                return index;\n        this.actions[index++] = action;\n        this.actions[index++] = token;\n        this.actions[index++] = end;\n        return index;\n    }\n    addActions(stack, token, end, index) {\n        let { state } = stack, { parser } = stack.p, { data } = parser;\n        for (let set = 0; set < 2; set++) {\n            for (let i = parser.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */);; i += 3) {\n                if (data[i] == 65535 /* End */) {\n                    if (data[i + 1] == 1 /* Next */) {\n                        i = pair(data, i + 2);\n                    }\n                    else {\n                        if (index == 0 && data[i + 1] == 2 /* Other */)\n                            index = this.putAction(pair(data, i + 2), token, end, index);\n                        break;\n                    }\n                }\n                if (data[i] == token)\n                    index = this.putAction(pair(data, i + 1), token, end, index);\n            }\n        }\n        return index;\n    }\n}\nvar Rec;\n(function (Rec) {\n    Rec[Rec[\"Distance\"] = 5] = \"Distance\";\n    Rec[Rec[\"MaxRemainingPerStep\"] = 3] = \"MaxRemainingPerStep\";\n    // When two stacks have been running independently long enough to\n    // add this many elements to their buffers, prune one.\n    Rec[Rec[\"MinBufferLengthPrune\"] = 500] = \"MinBufferLengthPrune\";\n    Rec[Rec[\"ForceReduceLimit\"] = 10] = \"ForceReduceLimit\";\n    // Once a stack reaches this depth (in .stack.length) force-reduce\n    // it back to CutTo to avoid creating trees that overflow the stack\n    // on recursive traversal.\n    Rec[Rec[\"CutDepth\"] = 15000] = \"CutDepth\";\n    Rec[Rec[\"CutTo\"] = 9000] = \"CutTo\";\n})(Rec || (Rec = {}));\nclass Parse {\n    constructor(parser, input, fragments, ranges) {\n        this.parser = parser;\n        this.input = input;\n        this.ranges = ranges;\n        this.recovering = 0;\n        this.nextStackID = 0x2654; // ♔, ♕, ♖, ♗, ♘, ♙, ♠, ♡, ♢, ♣, ♤, ♥, ♦, ♧\n        this.minStackPos = 0;\n        this.reused = [];\n        this.stoppedAt = null;\n        this.stream = new InputStream(input, ranges);\n        this.tokens = new TokenCache(parser, this.stream);\n        this.topTerm = parser.top[1];\n        let { from } = ranges[0];\n        this.stacks = [Stack.start(this, parser.top[0], from)];\n        this.fragments = fragments.length && this.stream.end - from > parser.bufferLength * 4\n            ? new FragmentCursor(fragments, parser.nodeSet) : null;\n    }\n    get parsedPos() {\n        return this.minStackPos;\n    }\n    // Move the parser forward. This will process all parse stacks at\n    // `this.pos` and try to advance them to a further position. If no\n    // stack for such a position is found, it'll start error-recovery.\n    //\n    // When the parse is finished, this will return a syntax tree. When\n    // not, it returns `null`.\n    advance() {\n        let stacks = this.stacks, pos = this.minStackPos;\n        // This will hold stacks beyond `pos`.\n        let newStacks = this.stacks = [];\n        let stopped, stoppedTokens;\n        // Keep advancing any stacks at `pos` until they either move\n        // forward or can't be advanced. Gather stacks that can't be\n        // advanced further in `stopped`.\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i];\n            for (;;) {\n                this.tokens.mainToken = null;\n                if (stack.pos > pos) {\n                    newStacks.push(stack);\n                }\n                else if (this.advanceStack(stack, newStacks, stacks)) {\n                    continue;\n                }\n                else {\n                    if (!stopped) {\n                        stopped = [];\n                        stoppedTokens = [];\n                    }\n                    stopped.push(stack);\n                    let tok = this.tokens.getMainToken(stack);\n                    stoppedTokens.push(tok.value, tok.end);\n                }\n                break;\n            }\n        }\n        if (!newStacks.length) {\n            let finished = stopped && findFinished(stopped);\n            if (finished)\n                return this.stackToTree(finished);\n            if (this.parser.strict) {\n                if (verbose && stopped)\n                    console.log(\"Stuck with token \" + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : \"none\"));\n                throw new SyntaxError(\"No parse at \" + pos);\n            }\n            if (!this.recovering)\n                this.recovering = 5 /* Distance */;\n        }\n        if (this.recovering && stopped) {\n            let finished = this.stoppedAt != null && stopped[0].pos > this.stoppedAt ? stopped[0]\n                : this.runRecovery(stopped, stoppedTokens, newStacks);\n            if (finished)\n                return this.stackToTree(finished.forceAll());\n        }\n        if (this.recovering) {\n            let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* MaxRemainingPerStep */;\n            if (newStacks.length > maxRemaining) {\n                newStacks.sort((a, b) => b.score - a.score);\n                while (newStacks.length > maxRemaining)\n                    newStacks.pop();\n            }\n            if (newStacks.some(s => s.reducePos > pos))\n                this.recovering--;\n        }\n        else if (newStacks.length > 1) {\n            // Prune stacks that are in the same state, or that have been\n            // running without splitting for a while, to avoid getting stuck\n            // with multiple successful stacks running endlessly on.\n            outer: for (let i = 0; i < newStacks.length - 1; i++) {\n                let stack = newStacks[i];\n                for (let j = i + 1; j < newStacks.length; j++) {\n                    let other = newStacks[j];\n                    if (stack.sameState(other) ||\n                        stack.buffer.length > 500 /* MinBufferLengthPrune */ && other.buffer.length > 500 /* MinBufferLengthPrune */) {\n                        if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n                            newStacks.splice(j--, 1);\n                        }\n                        else {\n                            newStacks.splice(i--, 1);\n                            continue outer;\n                        }\n                    }\n                }\n            }\n        }\n        this.minStackPos = newStacks[0].pos;\n        for (let i = 1; i < newStacks.length; i++)\n            if (newStacks[i].pos < this.minStackPos)\n                this.minStackPos = newStacks[i].pos;\n        return null;\n    }\n    stopAt(pos) {\n        if (this.stoppedAt != null && this.stoppedAt < pos)\n            throw new RangeError(\"Can't move stoppedAt forward\");\n        this.stoppedAt = pos;\n    }\n    // Returns an updated version of the given stack, or null if the\n    // stack can't advance normally. When `split` and `stacks` are\n    // given, stacks split off by ambiguous operations will be pushed to\n    // `split`, or added to `stacks` if they move `pos` forward.\n    advanceStack(stack, stacks, split) {\n        let start = stack.pos, { parser } = this;\n        let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n        if (this.stoppedAt != null && start > this.stoppedAt)\n            return stack.forceReduce() ? stack : null;\n        if (this.fragments) {\n            let strictCx = stack.curContext && stack.curContext.tracker.strict, cxHash = strictCx ? stack.curContext.hash : 0;\n            for (let cached = this.fragments.nodeAt(start); cached;) {\n                let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;\n                if (match > -1 && cached.length && (!strictCx || (cached.prop(NodeProp.contextHash) || 0) == cxHash)) {\n                    stack.useNode(cached, match);\n                    if (verbose)\n                        console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);\n                    return true;\n                }\n                if (!(cached instanceof Tree) || cached.children.length == 0 || cached.positions[0] > 0)\n                    break;\n                let inner = cached.children[0];\n                if (inner instanceof Tree && cached.positions[0] == 0)\n                    cached = inner;\n                else\n                    break;\n            }\n        }\n        let defaultReduce = parser.stateSlot(stack.state, 4 /* DefaultReduce */);\n        if (defaultReduce > 0) {\n            stack.reduce(defaultReduce);\n            if (verbose)\n                console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* ValueMask */)})`);\n            return true;\n        }\n        if (stack.stack.length >= 15000 /* CutDepth */) {\n            while (stack.stack.length > 9000 /* CutTo */ && stack.forceReduce()) { }\n        }\n        let actions = this.tokens.getActions(stack);\n        for (let i = 0; i < actions.length;) {\n            let action = actions[i++], term = actions[i++], end = actions[i++];\n            let last = i == actions.length || !split;\n            let localStack = last ? stack : stack.split();\n            localStack.apply(action, term, end);\n            if (verbose)\n                console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* ReduceFlag */) == 0 ? \"shift\"\n                    : `reduce of ${parser.getName(action & 65535 /* ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`);\n            if (last)\n                return true;\n            else if (localStack.pos > start)\n                stacks.push(localStack);\n            else\n                split.push(localStack);\n        }\n        return false;\n    }\n    // Advance a given stack forward as far as it will go. Returns the\n    // (possibly updated) stack if it got stuck, or null if it moved\n    // forward and was given to `pushStackDedup`.\n    advanceFully(stack, newStacks) {\n        let pos = stack.pos;\n        for (;;) {\n            if (!this.advanceStack(stack, null, null))\n                return false;\n            if (stack.pos > pos) {\n                pushStackDedup(stack, newStacks);\n                return true;\n            }\n        }\n    }\n    runRecovery(stacks, tokens, newStacks) {\n        let finished = null, restarted = false;\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];\n            let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n            if (stack.deadEnd) {\n                if (restarted)\n                    continue;\n                restarted = true;\n                stack.restart();\n                if (verbose)\n                    console.log(base + this.stackID(stack) + \" (restarted)\");\n                let done = this.advanceFully(stack, newStacks);\n                if (done)\n                    continue;\n            }\n            let force = stack.split(), forceBase = base;\n            for (let j = 0; force.forceReduce() && j < 10 /* ForceReduceLimit */; j++) {\n                if (verbose)\n                    console.log(forceBase + this.stackID(force) + \" (via force-reduce)\");\n                let done = this.advanceFully(force, newStacks);\n                if (done)\n                    break;\n                if (verbose)\n                    forceBase = this.stackID(force) + \" -> \";\n            }\n            for (let insert of stack.recoverByInsert(token)) {\n                if (verbose)\n                    console.log(base + this.stackID(insert) + \" (via recover-insert)\");\n                this.advanceFully(insert, newStacks);\n            }\n            if (this.stream.end > stack.pos) {\n                if (tokenEnd == stack.pos) {\n                    tokenEnd++;\n                    token = 0 /* Err */;\n                }\n                stack.recoverByDelete(token, tokenEnd);\n                if (verbose)\n                    console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);\n                pushStackDedup(stack, newStacks);\n            }\n            else if (!finished || finished.score < stack.score) {\n                finished = stack;\n            }\n        }\n        return finished;\n    }\n    // Convert the stack's buffer to a syntax tree.\n    stackToTree(stack) {\n        stack.close();\n        return Tree.build({ buffer: StackBufferCursor.create(stack),\n            nodeSet: this.parser.nodeSet,\n            topID: this.topTerm,\n            maxBufferLength: this.parser.bufferLength,\n            reused: this.reused,\n            start: this.ranges[0].from,\n            length: stack.pos - this.ranges[0].from,\n            minRepeatType: this.parser.minRepeatTerm });\n    }\n    stackID(stack) {\n        let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);\n        if (!id)\n            stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));\n        return id + stack;\n    }\n}\nfunction pushStackDedup(stack, newStacks) {\n    for (let i = 0; i < newStacks.length; i++) {\n        let other = newStacks[i];\n        if (other.pos == stack.pos && other.sameState(stack)) {\n            if (newStacks[i].score < stack.score)\n                newStacks[i] = stack;\n            return;\n        }\n    }\n    newStacks.push(stack);\n}\nclass Dialect {\n    constructor(source, flags, disabled) {\n        this.source = source;\n        this.flags = flags;\n        this.disabled = disabled;\n    }\n    allows(term) { return !this.disabled || this.disabled[term] == 0; }\n}\nconst id = x => x;\n/// Context trackers are used to track stateful context (such as\n/// indentation in the Python grammar, or parent elements in the XML\n/// grammar) needed by external tokenizers. You declare them in a\n/// grammar file as `@context exportName from \"module\"`.\n///\n/// Context values should be immutable, and can be updated (replaced)\n/// on shift or reduce actions.\n///\n/// The export used in a `@context` declaration should be of this\n/// type.\nclass ContextTracker {\n    /// Define a context tracker.\n    constructor(spec) {\n        this.start = spec.start;\n        this.shift = spec.shift || id;\n        this.reduce = spec.reduce || id;\n        this.reuse = spec.reuse || id;\n        this.hash = spec.hash || (() => 0);\n        this.strict = spec.strict !== false;\n    }\n}\n/// A parser holds the parse tables for a given grammar, as generated\n/// by `lezer-generator`.\nclass LRParser extends Parser {\n    /// @internal\n    constructor(spec) {\n        super();\n        /// @internal\n        this.wrappers = [];\n        if (spec.version != 13 /* Version */)\n            throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${13 /* Version */})`);\n        let nodeNames = spec.nodeNames.split(\" \");\n        this.minRepeatTerm = nodeNames.length;\n        for (let i = 0; i < spec.repeatNodeCount; i++)\n            nodeNames.push(\"\");\n        let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);\n        let nodeProps = [];\n        for (let i = 0; i < nodeNames.length; i++)\n            nodeProps.push([]);\n        function setProp(nodeID, prop, value) {\n            nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);\n        }\n        if (spec.nodeProps)\n            for (let propSpec of spec.nodeProps) {\n                let prop = propSpec[0];\n                for (let i = 1; i < propSpec.length;) {\n                    let next = propSpec[i++];\n                    if (next >= 0) {\n                        setProp(next, prop, propSpec[i++]);\n                    }\n                    else {\n                        let value = propSpec[i + -next];\n                        for (let j = -next; j > 0; j--)\n                            setProp(propSpec[i++], prop, value);\n                        i++;\n                    }\n                }\n            }\n        this.nodeSet = new NodeSet(nodeNames.map((name, i) => NodeType.define({\n            name: i >= this.minRepeatTerm ? undefined : name,\n            id: i,\n            props: nodeProps[i],\n            top: topTerms.indexOf(i) > -1,\n            error: i == 0,\n            skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1\n        })));\n        this.strict = false;\n        this.bufferLength = DefaultBufferLength;\n        let tokenArray = decodeArray(spec.tokenData);\n        this.context = spec.context;\n        this.specialized = new Uint16Array(spec.specialized ? spec.specialized.length : 0);\n        this.specializers = [];\n        if (spec.specialized)\n            for (let i = 0; i < spec.specialized.length; i++) {\n                this.specialized[i] = spec.specialized[i].term;\n                this.specializers[i] = spec.specialized[i].get;\n            }\n        this.states = decodeArray(spec.states, Uint32Array);\n        this.data = decodeArray(spec.stateData);\n        this.goto = decodeArray(spec.goto);\n        this.maxTerm = spec.maxTerm;\n        this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value);\n        this.topRules = spec.topRules;\n        this.dialects = spec.dialects || {};\n        this.dynamicPrecedences = spec.dynamicPrecedences || null;\n        this.tokenPrecTable = spec.tokenPrec;\n        this.termNames = spec.termNames || null;\n        this.maxNode = this.nodeSet.types.length - 1;\n        this.dialect = this.parseDialect();\n        this.top = this.topRules[Object.keys(this.topRules)[0]];\n    }\n    createParse(input, fragments, ranges) {\n        let parse = new Parse(this, input, fragments, ranges);\n        for (let w of this.wrappers)\n            parse = w(parse, input, fragments, ranges);\n        return parse;\n    }\n    /// Get a goto table entry @internal\n    getGoto(state, term, loose = false) {\n        let table = this.goto;\n        if (term >= table[0])\n            return -1;\n        for (let pos = table[term + 1];;) {\n            let groupTag = table[pos++], last = groupTag & 1;\n            let target = table[pos++];\n            if (last && loose)\n                return target;\n            for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                if (table[pos] == state)\n                    return target;\n            if (last)\n                return -1;\n        }\n    }\n    /// Check if this state has an action for a given terminal @internal\n    hasAction(state, terminal) {\n        let data = this.data;\n        for (let set = 0; set < 2; set++) {\n            for (let i = this.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */), next;; i += 3) {\n                if ((next = data[i]) == 65535 /* End */) {\n                    if (data[i + 1] == 1 /* Next */)\n                        next = data[i = pair(data, i + 2)];\n                    else if (data[i + 1] == 2 /* Other */)\n                        return pair(data, i + 2);\n                    else\n                        break;\n                }\n                if (next == terminal || next == 0 /* Err */)\n                    return pair(data, i + 1);\n            }\n        }\n        return 0;\n    }\n    /// @internal\n    stateSlot(state, slot) {\n        return this.states[(state * 6 /* Size */) + slot];\n    }\n    /// @internal\n    stateFlag(state, flag) {\n        return (this.stateSlot(state, 0 /* Flags */) & flag) > 0;\n    }\n    /// @internal\n    validAction(state, action) {\n        if (action == this.stateSlot(state, 4 /* DefaultReduce */))\n            return true;\n        for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* End */) {\n                if (this.data[i + 1] == 1 /* Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    return false;\n            }\n            if (action == pair(this.data, i + 1))\n                return true;\n        }\n    }\n    /// Get the states that can follow this one through shift actions or\n    /// goto jumps. @internal\n    nextStates(state) {\n        let result = [];\n        for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* End */) {\n                if (this.data[i + 1] == 1 /* Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            if ((this.data[i + 2] & (65536 /* ReduceFlag */ >> 16)) == 0) {\n                let value = this.data[i + 1];\n                if (!result.some((v, i) => (i & 1) && v == value))\n                    result.push(this.data[i], value);\n            }\n        }\n        return result;\n    }\n    /// @internal\n    overrides(token, prev) {\n        let iPrev = findOffset(this.data, this.tokenPrecTable, prev);\n        return iPrev < 0 || findOffset(this.data, this.tokenPrecTable, token) < iPrev;\n    }\n    /// Configure the parser. Returns a new parser instance that has the\n    /// given settings modified. Settings not provided in `config` are\n    /// kept from the original parser.\n    configure(config) {\n        // Hideous reflection-based kludge to make it easy to create a\n        // slightly modified copy of a parser.\n        let copy = Object.assign(Object.create(LRParser.prototype), this);\n        if (config.props)\n            copy.nodeSet = this.nodeSet.extend(...config.props);\n        if (config.top) {\n            let info = this.topRules[config.top];\n            if (!info)\n                throw new RangeError(`Invalid top rule name ${config.top}`);\n            copy.top = info;\n        }\n        if (config.tokenizers)\n            copy.tokenizers = this.tokenizers.map(t => {\n                let found = config.tokenizers.find(r => r.from == t);\n                return found ? found.to : t;\n            });\n        if (config.contextTracker)\n            copy.context = config.contextTracker;\n        if (config.dialect)\n            copy.dialect = this.parseDialect(config.dialect);\n        if (config.strict != null)\n            copy.strict = config.strict;\n        if (config.wrap)\n            copy.wrappers = copy.wrappers.concat(config.wrap);\n        if (config.bufferLength != null)\n            copy.bufferLength = config.bufferLength;\n        return copy;\n    }\n    /// Returns the name associated with a given term. This will only\n    /// work for all terms when the parser was generated with the\n    /// `--names` option. By default, only the names of tagged terms are\n    /// stored.\n    getName(term) {\n        return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);\n    }\n    /// The eof term id is always allocated directly after the node\n    /// types. @internal\n    get eofTerm() { return this.maxNode + 1; }\n    /// The type of top node produced by the parser.\n    get topNode() { return this.nodeSet.types[this.top[1]]; }\n    /// @internal\n    dynamicPrecedence(term) {\n        let prec = this.dynamicPrecedences;\n        return prec == null ? 0 : prec[term] || 0;\n    }\n    /// @internal\n    parseDialect(dialect) {\n        let values = Object.keys(this.dialects), flags = values.map(() => false);\n        if (dialect)\n            for (let part of dialect.split(\" \")) {\n                let id = values.indexOf(part);\n                if (id >= 0)\n                    flags[id] = true;\n            }\n        let disabled = null;\n        for (let i = 0; i < values.length; i++)\n            if (!flags[i]) {\n                for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* End */;)\n                    (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;\n            }\n        return new Dialect(dialect, flags, disabled);\n    }\n    /// (used by the output of the parser generator) @internal\n    static deserialize(spec) {\n        return new LRParser(spec);\n    }\n}\nfunction pair(data, off) { return data[off] | (data[off + 1] << 16); }\nfunction findOffset(data, start, term) {\n    for (let i = start, next; (next = data[i]) != 65535 /* End */; i++)\n        if (next == term)\n            return i - start;\n    return -1;\n}\nfunction findFinished(stacks) {\n    let best = null;\n    for (let stack of stacks) {\n        let stopped = stack.p.stoppedAt;\n        if ((stack.pos == stack.p.stream.end || stopped != null && stack.pos > stopped) &&\n            stack.p.parser.stateFlag(stack.state, 2 /* Accepting */) &&\n            (!best || best.score < stack.score))\n            best = stack;\n    }\n    return best;\n}\n\nexport { ContextTracker, ExternalTokenizer, InputStream, LRParser, Stack };\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"codemirror\",staticStyle:{\"width\":\"100%\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { Annotation, Facet, combineConfig, StateField, EditorSelection, Transaction, ChangeSet, ChangeDesc, StateEffect } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500\n        }, { minDepth: Math.max, newGroupDelay: Math.min });\n    }\n});\nfunction changeEnd(changes) {\n    let end = 0;\n    changes.iterChangedRanges((_, to) => end = to);\n    return end;\n}\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let selection = tr.docChanged ? EditorSelection.single(changeEnd(tr.changes)) : undefined;\n            let item = HistEvent.fromTransaction(tr, selection), from = fromHist.side;\n            let other = from == 0 /* Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* Done */ ? fromHist.rest : other, from == 0 /* Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config.newGroupDelay, config.minDepth);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\n/**\nThe state field used to store the history data. Should probably\nonly be used when you want to\n[serialize](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) or\n[deserialize](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) state objects in a way\nthat preserves history.\n*/\nconst historyField = historyField_;\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* Undone */, false);\n/**\nUndo a selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* Done */, true);\n/**\nRedo a selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField_, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/**\nThe amount of undoable change events available in a given state.\n*/\nconst undoDepth = /*@__PURE__*/depth(0 /* Done */);\n/**\nThe amount of redoable change events available in a given state.\n*/\nconst redoDepth = /*@__PURE__*/depth(1 /* Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr, selection) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, newGroupDelay, maxLen) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < newGroupDelay &&\n                isAdjacent(lastEvent.changes, event.changes)) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, maxLen, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, maxLen, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, selection) {\n        let branch = side == 0 /* Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1];\n        if (selection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch) }),\n                userEvent: side == 0 /* Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest }),\n                filter: false,\n                userEvent: side == 0 /* Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none, none);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#history.undo).\n- Mod-y (Mod-Shift-z on macOS): [`redo`](https://codemirror.net/6/docs/ref/#history.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#history.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#history.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nexport { history, historyField, historyKeymap, invertedEffects, isolateHistory, redo, redoDepth, redoSelection, undo, undoDepth, undoSelection };\n","import { NodeProp, Tree, TreeFragment, Parser, NodeType } from '@lezer/common';\nimport { StateEffect, StateField, Facet, EditorState } from '@codemirror/state';\nimport { ViewPlugin, logException } from '@codemirror/view';\nimport { countColumn } from '@codemirror/text';\n\n/**\nNode prop stored in a grammar's top syntax node to provide the\nfacet that stores language data for that language.\n*/\nconst languageDataProp = /*@__PURE__*/new NodeProp();\n/**\nHelper function to define a facet (to be added to the top syntax\nnode(s) for a language via\n[`languageDataProp`](https://codemirror.net/6/docs/ref/#language.languageDataProp)), that will be\nused to associate language data with the language. You\nprobably only need this when subclassing\n[`Language`](https://codemirror.net/6/docs/ref/#language.Language).\n*/\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/**\nA language object manages parsing and per-language\n[metadata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt). Parse data is\nmanaged as a [Lezer](https://lezer.codemirror.net) tree. You'll\nwant to subclass this class for custom parsers, or use the\n[`LRLanguage`](https://codemirror.net/6/docs/ref/#language.LRLanguage) or\n[`StreamLanguage`](https://codemirror.net/6/docs/ref/#stream-parser.StreamLanguage) abstractions for\n[Lezer](https://lezer.codemirror.net/) or stream parsers.\n*/\nclass Language {\n    /**\n    Construct a language object. You usually don't need to invoke\n    this directly. But when you do, make sure you use\n    [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet) to create\n    the first argument.\n    */\n    constructor(\n    /**\n    The [language data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) data\n    facet used for this language.\n    */\n    data, parser, \n    /**\n    The node type of the top node of trees produced by this parser.\n    */\n    topNode, extraExtensions = []) {\n        this.data = data;\n        this.topNode = topNode;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        this.parser = parser;\n        this.extension = [\n            language.of(this),\n            EditorState.languageData.of((state, pos, side) => state.facet(languageDataFacetAt(state, pos, side)))\n        ].concat(extraExtensions);\n    }\n    /**\n    Query whether this language is active at the given position.\n    */\n    isActiveAt(state, pos, side = -1) {\n        return languageDataFacetAt(state, pos, side) == this.data;\n    }\n    /**\n    Find the document regions that were parsed using this language.\n    The returned regions will _include_ any nested languages rooted\n    in this language, when those exist.\n    */\n    findRegions(state) {\n        let lang = state.facet(language);\n        if ((lang === null || lang === void 0 ? void 0 : lang.data) == this.data)\n            return [{ from: 0, to: state.doc.length }];\n        if (!lang || !lang.allowsNesting)\n            return [];\n        let result = [];\n        let explore = (tree, from) => {\n            if (tree.prop(languageDataProp) == this.data) {\n                result.push({ from, to: from + tree.length });\n                return;\n            }\n            let mount = tree.prop(NodeProp.mounted);\n            if (mount) {\n                if (mount.tree.prop(languageDataProp) == this.data) {\n                    if (mount.overlay)\n                        for (let r of mount.overlay)\n                            result.push({ from: r.from + from, to: r.to + from });\n                    else\n                        result.push({ from: from, to: from + tree.length });\n                    return;\n                }\n                else if (mount.overlay) {\n                    let size = result.length;\n                    explore(mount.tree, mount.overlay[0].from + from);\n                    if (result.length > size)\n                        return;\n                }\n            }\n            for (let i = 0; i < tree.children.length; i++) {\n                let ch = tree.children[i];\n                if (ch instanceof Tree)\n                    explore(ch, tree.positions[i] + from);\n            }\n        };\n        explore(syntaxTree(state), 0);\n        return result;\n    }\n    /**\n    Indicates whether this language allows nested languages. The\n    default implementation returns true.\n    */\n    get allowsNesting() { return true; }\n}\n/**\n@internal\n*/\nLanguage.setState = /*@__PURE__*/StateEffect.define();\nfunction languageDataFacetAt(state, pos, side) {\n    let topLang = state.facet(language);\n    if (!topLang)\n        return null;\n    let facet = topLang.data;\n    if (topLang.allowsNesting) {\n        for (let node = syntaxTree(state).topNode; node; node = node.enter(pos, side, true, false))\n            facet = node.type.prop(languageDataProp) || facet;\n    }\n    return facet;\n}\n/**\nA subclass of [`Language`](https://codemirror.net/6/docs/ref/#language.Language) for use with Lezer\n[LR parsers](https://lezer.codemirror.net/docs/ref#lr.LRParser)\nparsers.\n*/\nclass LRLanguage extends Language {\n    constructor(data, parser) {\n        super(data, parser, parser.topNode);\n        this.parser = parser;\n    }\n    /**\n    Define a language from a parser.\n    */\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LRLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }));\n    }\n    /**\n    Create a new instance of this language with a reconfigured\n    version of its parser.\n    */\n    configure(options) {\n        return new LRLanguage(this.data, this.parser.configure(options));\n    }\n    get allowsNesting() { return this.parser.wrappers.length > 0; } // FIXME\n}\n/**\nGet the syntax tree for a state, which is the current (possibly\nincomplete) parse tree of active [language](https://codemirror.net/6/docs/ref/#language.Language),\nor the empty tree if there is no language available.\n*/\nfunction syntaxTree(state) {\n    let field = state.field(Language.state, false);\n    return field ? field.tree : Tree.empty;\n}\n/**\nTry to get a parse tree that spans at least up to `upto`. The\nmethod will do at most `timeout` milliseconds of work to parse\nup to that point if the tree isn't already available.\n*/\nfunction ensureSyntaxTree(state, upto, timeout = 50) {\n    var _a;\n    let parse = (_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context;\n    return !parse ? null : parse.isDone(upto) || parse.work(timeout, upto) ? parse.tree : null;\n}\n/**\nQueries whether there is a full syntax tree available up to the\ngiven document position. If there isn't, the background parse\nprocess _might_ still be working and update the tree further, but\nthere is no guarantee of that—the parser will [stop\nworking](https://codemirror.net/6/docs/ref/#language.syntaxParserStopped) when it has spent a\ncertain amount of time or has moved beyond the visible viewport.\nAlways returns false if no language has been enabled.\n*/\nfunction syntaxTreeAvailable(state, upto = state.doc.length) {\n    var _a;\n    return ((_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context.isDone(upto)) || false;\n}\n/**\nTells you whether the language parser is planning to do more\nparsing work (in a `requestIdleCallback` pseudo-thread) or has\nstopped running, either because it parsed the entire document,\nbecause it spent too much time and was cut off, or because there\nis no language parser enabled.\n*/\nfunction syntaxParserRunning(view) {\n    var _a;\n    return ((_a = view.plugin(parseWorker)) === null || _a === void 0 ? void 0 : _a.isWorking()) || false;\n}\n// Lezer-style Input object for a Text document.\nclass DocInput {\n    constructor(doc, length = doc.length) {\n        this.doc = doc;\n        this.length = length;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.cursor = doc.iter();\n    }\n    syncTo(pos) {\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    chunk(pos) {\n        this.syncTo(pos);\n        return this.string;\n    }\n    get lineChunks() { return true; }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n}\nlet currentContext = null;\n/**\nA parse context provided to parsers working on the editor content.\n*/\nclass ParseContext {\n    /**\n    @internal\n    */\n    constructor(parser, \n    /**\n    The current editor state.\n    */\n    state, \n    /**\n    Tree fragments that can be reused by incremental re-parses.\n    */\n    fragments = [], \n    /**\n    @internal\n    */\n    tree, treeLen, \n    /**\n    The current editor viewport (or some overapproximation\n    thereof). Intended to be used for opportunistically avoiding\n    work (in which case\n    [`skipUntilInView`](https://codemirror.net/6/docs/ref/#language.ParseContext.skipUntilInView)\n    should be called to make sure the parser is restarted when the\n    skipped region becomes visible).\n    */\n    viewport, \n    /**\n    @internal\n    */\n    skipped, \n    /**\n    This is where skipping parsers can register a promise that,\n    when resolved, will schedule a new parse. It is cleared when\n    the parse worker picks up the promise. @internal\n    */\n    scheduleOn) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.treeLen = treeLen;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.scheduleOn = scheduleOn;\n        this.parse = null;\n        /**\n        @internal\n        */\n        this.tempSkipped = [];\n    }\n    startParse() {\n        return this.parser.startParse(new DocInput(this.state.doc), this.fragments);\n    }\n    /**\n    @internal\n    */\n    work(time, upto) {\n        if (upto != null && upto >= this.state.doc.length)\n            upto = undefined;\n        if (this.tree != Tree.empty && this.isDone(upto !== null && upto !== void 0 ? upto : this.state.doc.length)) {\n            this.takeTree();\n            return true;\n        }\n        return this.withContext(() => {\n            var _a;\n            let endTime = Date.now() + time;\n            if (!this.parse)\n                this.parse = this.startParse();\n            if (upto != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > upto) &&\n                upto < this.state.doc.length)\n                this.parse.stopAt(upto);\n            for (;;) {\n                let done = this.parse.advance();\n                if (done) {\n                    this.fragments = this.withoutTempSkipped(TreeFragment.addTree(done, this.fragments, this.parse.stoppedAt != null));\n                    this.treeLen = (_a = this.parse.stoppedAt) !== null && _a !== void 0 ? _a : this.state.doc.length;\n                    this.tree = done;\n                    this.parse = null;\n                    if (this.treeLen < (upto !== null && upto !== void 0 ? upto : this.state.doc.length))\n                        this.parse = this.startParse();\n                    else\n                        return true;\n                }\n                if (Date.now() > endTime)\n                    return false;\n            }\n        });\n    }\n    /**\n    @internal\n    */\n    takeTree() {\n        let pos, tree;\n        if (this.parse && (pos = this.parse.parsedPos) >= this.treeLen) {\n            if (this.parse.stoppedAt == null || this.parse.stoppedAt > pos)\n                this.parse.stopAt(pos);\n            this.withContext(() => { while (!(tree = this.parse.advance())) { } });\n            this.treeLen = pos;\n            this.tree = tree;\n            this.fragments = this.withoutTempSkipped(TreeFragment.addTree(this.tree, this.fragments, true));\n            this.parse = null;\n        }\n    }\n    withContext(f) {\n        let prev = currentContext;\n        currentContext = this;\n        try {\n            return f();\n        }\n        finally {\n            currentContext = prev;\n        }\n    }\n    withoutTempSkipped(fragments) {\n        for (let r; r = this.tempSkipped.pop();)\n            fragments = cutFragments(fragments, r.from, r.to);\n        return fragments;\n    }\n    /**\n    @internal\n    */\n    changes(changes, newState) {\n        let { fragments, tree, treeLen, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            treeLen = 0;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new ParseContext(this.parser, newState, fragments, tree, treeLen, viewport, skipped, this.scheduleOn);\n    }\n    /**\n    @internal\n    */\n    updateViewport(viewport) {\n        if (this.viewport.from == viewport.from && this.viewport.to == viewport.to)\n            return false;\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.fragments = cutFragments(this.fragments, from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        if (this.skipped.length >= startLen)\n            return false;\n        this.reset();\n        return true;\n    }\n    /**\n    @internal\n    */\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    /**\n    Notify the parse scheduler that the given region was skipped\n    because it wasn't in view, and the parse should be restarted\n    when it comes into view.\n    */\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    /**\n    Returns a parser intended to be used as placeholder when\n    asynchronously loading a nested parser. It'll skip its input and\n    mark it as not-really-parsed, so that the next update will parse\n    it again.\n    \n    When `until` is given, a reparse will be scheduled when that\n    promise resolves.\n    */\n    static getSkippingParser(until) {\n        return new class extends Parser {\n            createParse(input, fragments, ranges) {\n                let from = ranges[0].from, to = ranges[ranges.length - 1].to;\n                let parser = {\n                    parsedPos: from,\n                    advance() {\n                        let cx = currentContext;\n                        if (cx) {\n                            for (let r of ranges)\n                                cx.tempSkipped.push(r);\n                            if (until)\n                                cx.scheduleOn = cx.scheduleOn ? Promise.all([cx.scheduleOn, until]) : until;\n                        }\n                        this.parsedPos = to;\n                        return new Tree(NodeType.none, [], [], to - from);\n                    },\n                    stoppedAt: null,\n                    stopAt() { }\n                };\n                return parser;\n            }\n        };\n    }\n    /**\n    @internal\n    */\n    isDone(upto) {\n        upto = Math.min(upto, this.state.doc.length);\n        let frags = this.fragments;\n        return this.treeLen >= upto && frags.length && frags[0].from == 0 && frags[0].to >= upto;\n    }\n    /**\n    Get the context for the current parse, or `null` if no editor\n    parse is in progress.\n    */\n    static get() { return currentContext; }\n}\nfunction cutFragments(fragments, from, to) {\n    return TreeFragment.applyChanges(fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged)\n            return this;\n        let newCx = this.context.changes(tr.changes, tr.state);\n        // If the previous parse wasn't done, go forward only up to its\n        // end position or the end of the viewport, to avoid slowing down\n        // state updates with parse work beyond the viewport.\n        let upto = this.context.treeLen == tr.startState.doc.length ? undefined\n            : Math.max(tr.changes.mapPos(this.context.treeLen), newCx.viewport.to);\n        if (!newCx.work(20 /* Apply */, upto))\n            newCx.takeTree();\n        return new LanguageState(newCx);\n    }\n    static init(state) {\n        let vpTo = Math.min(3000 /* InitViewport */, state.doc.length);\n        let parseState = new ParseContext(state.facet(language).parser, state, [], Tree.empty, 0, { from: 0, to: vpTo }, [], null);\n        if (!parseState.work(20 /* Apply */, vpTo))\n            parseState.takeTree();\n        return new LanguageState(parseState);\n    }\n}\nLanguage.state = /*@__PURE__*/StateField.define({\n    create: LanguageState.init,\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(Language.setState))\n                return e.value;\n        if (tr.startState.facet(language) != tr.state.facet(language))\n            return LanguageState.init(tr.state);\n        return value.apply(tr);\n    }\n});\nlet requestIdle = (callback) => {\n    let timeout = setTimeout(() => callback(), 500 /* MaxPause */);\n    return () => clearTimeout(timeout);\n};\nif (typeof requestIdleCallback != \"undefined\")\n    requestIdle = (callback) => {\n        let idle = -1, timeout = setTimeout(() => {\n            idle = requestIdleCallback(callback, { timeout: 500 /* MaxPause */ - 100 /* MinPause */ });\n        }, 100 /* MinPause */);\n        return () => idle < 0 ? clearTimeout(timeout) : cancelIdleCallback(idle);\n    };\nconst parseWorker = /*@__PURE__*/ViewPlugin.fromClass(class ParseWorker {\n    constructor(view) {\n        this.view = view;\n        this.working = null;\n        this.workScheduled = 0;\n        // End of the current time chunk\n        this.chunkEnd = -1;\n        // Milliseconds of budget left for this chunk\n        this.chunkBudget = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        let cx = this.view.state.field(Language.state).context;\n        if (cx.updateViewport(update.view.viewport) || this.view.viewport.to > cx.treeLen)\n            this.scheduleWork();\n        if (update.docChanged) {\n            if (this.view.hasFocus)\n                this.chunkBudget += 50 /* ChangeBonus */;\n            this.scheduleWork();\n        }\n        this.checkAsyncSchedule(cx);\n    }\n    scheduleWork() {\n        if (this.working)\n            return;\n        let { state } = this.view, field = state.field(Language.state);\n        if (field.tree != field.context.tree || !field.context.isDone(state.doc.length))\n            this.working = requestIdle(this.work);\n    }\n    work(deadline) {\n        this.working = null;\n        let now = Date.now();\n        if (this.chunkEnd < now && (this.chunkEnd < 0 || this.view.hasFocus)) { // Start a new chunk\n            this.chunkEnd = now + 30000 /* ChunkTime */;\n            this.chunkBudget = 3000 /* ChunkBudget */;\n        }\n        if (this.chunkBudget <= 0)\n            return; // No more budget\n        let { state, viewport: { to: vpTo } } = this.view, field = state.field(Language.state);\n        if (field.tree == field.context.tree && field.context.isDone(vpTo + 100000 /* MaxParseAhead */))\n            return;\n        let time = Math.min(this.chunkBudget, 100 /* Slice */, deadline ? Math.max(25 /* MinSlice */, deadline.timeRemaining() - 5) : 1e9);\n        let viewportFirst = field.context.treeLen < vpTo && state.doc.length > vpTo + 1000;\n        let done = field.context.work(time, vpTo + (viewportFirst ? 0 : 100000 /* MaxParseAhead */));\n        this.chunkBudget -= Date.now() - now;\n        if (done || this.chunkBudget <= 0) {\n            field.context.takeTree();\n            this.view.dispatch({ effects: Language.setState.of(new LanguageState(field.context)) });\n        }\n        if (this.chunkBudget > 0 && !(done && !viewportFirst))\n            this.scheduleWork();\n        this.checkAsyncSchedule(field.context);\n    }\n    checkAsyncSchedule(cx) {\n        if (cx.scheduleOn) {\n            this.workScheduled++;\n            cx.scheduleOn\n                .then(() => this.scheduleWork())\n                .catch(err => logException(this.view.state, err))\n                .then(() => this.workScheduled--);\n            cx.scheduleOn = null;\n        }\n    }\n    destroy() {\n        if (this.working)\n            this.working();\n    }\n    isWorking() {\n        return this.working || this.workScheduled > 0;\n    }\n}, {\n    eventHandlers: { focus() { this.scheduleWork(); } }\n});\n/**\nThe facet used to associate a language with an editor state.\n*/\nconst language = /*@__PURE__*/Facet.define({\n    combine(languages) { return languages.length ? languages[0] : null; },\n    enables: [Language.state, parseWorker]\n});\n/**\nThis class bundles a [language object](https://codemirror.net/6/docs/ref/#language.Language) with an\noptional set of supporting extensions. Language packages are\nencouraged to export a function that optionally takes a\nconfiguration object and returns a `LanguageSupport` instance, as\nthe main way for client code to use the package.\n*/\nclass LanguageSupport {\n    /**\n    Create a support object.\n    */\n    constructor(\n    /**\n    The language object.\n    */\n    language, \n    /**\n    An optional set of supporting extensions. When nesting a\n    language in another language, the outer language is encouraged\n    to include the supporting extensions for its inner languages\n    in its own set of support extensions.\n    */\n    support = []) {\n        this.language = language;\n        this.support = support;\n        this.extension = [language, support];\n    }\n}\n/**\nLanguage descriptions are used to store metadata about languages\nand to dynamically load them. Their main role is finding the\nappropriate language for a filename or dynamically loading nested\nparsers.\n*/\nclass LanguageDescription {\n    constructor(\n    /**\n    The name of this language.\n    */\n    name, \n    /**\n    Alternative names for the mode (lowercased, includes `this.name`).\n    */\n    alias, \n    /**\n    File extensions associated with this language.\n    */\n    extensions, \n    /**\n    Optional filename pattern that should be associated with this\n    language.\n    */\n    filename, loadFunc, \n    /**\n    If the language has been loaded, this will hold its value.\n    */\n    support = undefined) {\n        this.name = name;\n        this.alias = alias;\n        this.extensions = extensions;\n        this.filename = filename;\n        this.loadFunc = loadFunc;\n        this.support = support;\n        this.loading = null;\n    }\n    /**\n    Start loading the the language. Will return a promise that\n    resolves to a [`LanguageSupport`](https://codemirror.net/6/docs/ref/#language.LanguageSupport)\n    object when the language successfully loads.\n    */\n    load() {\n        return this.loading || (this.loading = this.loadFunc().then(support => this.support = support, err => { this.loading = null; throw err; }));\n    }\n    /**\n    Create a language description.\n    */\n    static of(spec) {\n        let { load, support } = spec;\n        if (!load) {\n            if (!support)\n                throw new RangeError(\"Must pass either 'load' or 'support' to LanguageDescription.of\");\n            load = () => Promise.resolve(support);\n        }\n        return new LanguageDescription(spec.name, (spec.alias || []).concat(spec.name).map(s => s.toLowerCase()), spec.extensions || [], spec.filename, load, support);\n    }\n    /**\n    Look for a language in the given array of descriptions that\n    matches the filename. Will first match\n    [`filename`](https://codemirror.net/6/docs/ref/#language.LanguageDescription.filename) patterns,\n    and then [extensions](https://codemirror.net/6/docs/ref/#language.LanguageDescription.extensions),\n    and return the first language that matches.\n    */\n    static matchFilename(descs, filename) {\n        for (let d of descs)\n            if (d.filename && d.filename.test(filename))\n                return d;\n        let ext = /\\.([^.]+)$/.exec(filename);\n        if (ext)\n            for (let d of descs)\n                if (d.extensions.indexOf(ext[1]) > -1)\n                    return d;\n        return null;\n    }\n    /**\n    Look for a language whose name or alias matches the the given\n    name (case-insensitively). If `fuzzy` is true, and no direct\n    matchs is found, this'll also search for a language whose name\n    or alias occurs in the string (for names shorter than three\n    characters, only when surrounded by non-word characters).\n    */\n    static matchLanguageName(descs, name, fuzzy = true) {\n        name = name.toLowerCase();\n        for (let d of descs)\n            if (d.alias.some(a => a == name))\n                return d;\n        if (fuzzy)\n            for (let d of descs)\n                for (let a of d.alias) {\n                    let found = name.indexOf(a);\n                    if (found > -1 && (a.length > 2 || !/\\w/.test(name[found - 1]) && !/\\w/.test(name[found + a.length])))\n                        return d;\n                }\n        return null;\n    }\n}\n\n/**\nFacet that defines a way to provide a function that computes the\nappropriate indentation depth at the start of a given line, or\n`null` to indicate no appropriate indentation could be determined.\n*/\nconst indentService = /*@__PURE__*/Facet.define();\n/**\nFacet for overriding the unit by which indentation happens.\nShould be a string consisting either entirely of spaces or\nentirely of tabs. When not set, this defaults to 2 spaces.\n*/\nconst indentUnit = /*@__PURE__*/Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        if (!/^(?: +|\\t+)$/.test(values[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return values[0];\n    }\n});\n/**\nReturn the _column width_ of an indent unit in the state.\nDetermined by the [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit)\nfacet, and [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) when that\ncontains tabs.\n*/\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/**\nCreate an indentation string that covers columns 0 to `cols`.\nWill use tabs for as much of the columns as possible when the\n[`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit) facet contains\ntabs.\n*/\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize;\n    if (state.facet(indentUnit).charCodeAt(0) == 9)\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n    for (let i = 0; i < cols; i++)\n        result += \" \";\n    return result;\n}\n/**\nGet the indentation at the given position. Will first consult any\n[indent services](https://codemirror.net/6/docs/ref/#language.indentService) that are registered,\nand if none of those return an indentation, this will check the\nsyntax tree for the [indent node prop](https://codemirror.net/6/docs/ref/#language.indentNodeProp)\nand use that if found. Returns a number when an indentation could\nbe determined, and null otherwise.\n*/\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result != null)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree ? syntaxIndentation(context, tree, pos) : null;\n}\n/**\nIndentation contexts are used when calling [indentation\nservices](https://codemirror.net/6/docs/ref/#language.indentService). They provide helper utilities\nuseful in indentation logic, and can selectively override the\nindentation reported for some lines.\n*/\nclass IndentContext {\n    /**\n    Create an indent context.\n    */\n    constructor(\n    /**\n    The editor state.\n    */\n    state, \n    /**\n    @internal\n    */\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /**\n    Get a description of the line at the given position, taking\n    [simulated line\n    breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    into account. If there is such a break at `pos`, the `bias`\n    argument determines whether the part of the line line before or\n    after the break is used.\n    */\n    lineAt(pos, bias = 1) {\n        let line = this.state.doc.lineAt(pos);\n        let { simulateBreak } = this.options;\n        if (simulateBreak != null && simulateBreak >= line.from && simulateBreak <= line.to) {\n            if (bias < 0 ? simulateBreak < pos : simulateBreak <= pos)\n                return { text: line.text.slice(simulateBreak - line.from), from: simulateBreak };\n            else\n                return { text: line.text.slice(0, simulateBreak - line.from), from: line.from };\n        }\n        return line;\n    }\n    /**\n    Get the text directly after `pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    textAfterPos(pos, bias = 1) {\n        if (this.options.simulateDoubleBreak && pos == this.options.simulateBreak)\n            return \"\";\n        let { text, from } = this.lineAt(pos, bias);\n        return text.slice(pos - from, Math.min(text.length, pos + 100 - from));\n    }\n    /**\n    Find the column for the given position.\n    */\n    column(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let result = this.countColumn(text, pos - from);\n        let override = this.options.overrideIndentation ? this.options.overrideIndentation(from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S|$/));\n        return result;\n    }\n    /**\n    Find the column position (taking tabs into account) of the given\n    position in the given string.\n    */\n    countColumn(line, pos = line.length) {\n        return countColumn(line, this.state.tabSize, pos);\n    }\n    /**\n    Find the indentation column of the line at the given point.\n    */\n    lineIndent(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let override = this.options.overrideIndentation;\n        if (override) {\n            let overriden = override(from);\n            if (overriden > -1)\n                return overriden;\n        }\n        return this.countColumn(text, text.search(/\\S|$/));\n    }\n    /**\n    Returns the [simulated line\n    break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    for this context, if any.\n    */\n    get simulatedBreak() {\n        return this.options.simulateBreak || null;\n    }\n}\n/**\nA syntax tree node prop used to associate indentation strategies\nwith node types. Such a strategy is a function from an indentation\ncontext to a column number or null, where null indicates that no\ndefinitive indentation can be determined.\n*/\nconst indentNodeProp = /*@__PURE__*/new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    return indentFrom(ast.resolveInner(pos).enterUnfinishedNodesBefore(pos), pos, cx);\n}\nfunction ignoreClosed(cx) {\n    return cx.pos == cx.options.simulateBreak && cx.options.simulateDoubleBreak;\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction indentFrom(node, pos, base) {\n    for (; node; node = node.parent) {\n        let strategy = indentStrategy(node);\n        if (strategy)\n            return strategy(new TreeIndentContext(base, pos, node));\n    }\n    return null;\n}\nfunction topIndent() { return 0; }\n/**\nObjects of this type provide context information and helper\nmethods to indentation functions.\n*/\nclass TreeIndentContext extends IndentContext {\n    /**\n    @internal\n    */\n    constructor(base, \n    /**\n    The position at which indentation is being computed.\n    */\n    pos, \n    /**\n    The syntax tree node to which the indentation strategy\n    applies.\n    */\n    node) {\n        super(base.state, base.options);\n        this.base = base;\n        this.pos = pos;\n        this.node = node;\n    }\n    /**\n    Get the text directly after `this.pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /**\n    Get the indentation at the reference line for `this.node`, which\n    is the line on which it starts, unless there is a node that is\n    _not_ a parent of this node covering the start of that line. If\n    so, the line at the start of that node is tried, again skipping\n    on if it is covered by another such node.\n    */\n    get baseIndent() {\n        let line = this.state.doc.lineAt(this.node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = this.node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, this.node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line.from);\n    }\n    /**\n    Continue looking for indentations in the node's parent nodes,\n    and return the result of that.\n    */\n    continue() {\n        let parent = this.node.parent;\n        return parent ? indentFrom(parent, this.pos, this.base) : 0;\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = context.options.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped)\n            return next.from < lineEnd ? openToken : null;\n        pos = next.to;\n    }\n}\n/**\nAn indentation strategy for delimited (usually bracketed) nodes.\nWill, by default, indent one unit more than the parent's base\nindent unless the line starts with a closing token. When `align`\nis true and there are non-skipped nodes on the node's opening\nline, the content of the node will be aligned with the end of the\nopening node, like this:\n\n    foo(bar,\n        baz)\n*/\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/**\nAn indentation strategy that aligns a node's content to its base\nindentation.\n*/\nconst flatIndent = (context) => context.baseIndent;\n/**\nCreates an indentation strategy that, by default, indents\ncontinued lines one unit more than the node's base indentation.\nYou can provide `except` to prevent indentation of lines that\nmatch a pattern (for example `/^else\\b/` in `if`/`else`\nconstructs), and you can change the amount of units used with the\n`units` option.\n*/\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/**\nEnables reindentation on input. When a language defines an\n`indentOnInput` field in its [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt), which must hold a regular\nexpression, the line at the cursor will be reindented whenever new\ntext is typed and the input from the start of the line up to the\ncursor matches that regexp.\n\nTo avoid unneccesary reindents, it is recommended to start the\nregexp with `^` (usually followed by `\\s*`), and end it with `$`.\nFor example, `/^\\s*\\}$/` will reindent when a closing brace is\nadded at the start of a line.\n*/\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || !tr.isUserEvent(\"input.type\"))\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.main.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.main, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.text)[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes, sequential: true }] : tr;\n    });\n}\n\n/**\nA facet that registers a code folding service. When called with\nthe extent of a line, such a function should return a foldable\nrange that starts on that line (but continues beyond it), if one\ncan be found.\n*/\nconst foldService = /*@__PURE__*/Facet.define();\n/**\nThis node prop is used to associate folding information with\nsyntax node types. Given a syntax node, it should check whether\nthat tree is foldable and return the range that can be collapsed\nwhen it is.\n*/\nconst foldNodeProp = /*@__PURE__*/new NodeProp();\n/**\n[Fold](https://codemirror.net/6/docs/ref/#language.foldNodeProp) function that folds everything but\nthe first and the last child of a syntax node. Useful for nodes\nthat start and end with delimiters.\n*/\nfunction foldInside(node) {\n    let first = node.firstChild, last = node.lastChild;\n    return first && first.to < last.from ? { from: first.to, to: last.type.isError ? node.to : last.from } : null;\n}\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length == 0)\n        return null;\n    let inner = tree.resolveInner(end);\n    let found = null;\n    for (let cur = inner; cur; cur = cur.parent) {\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\n/**\nCheck whether the given line is foldable. First asks any fold\nservices registered through\n[`foldService`](https://codemirror.net/6/docs/ref/#language.foldService), and if none of them return\na result, tries to query the [fold node\nprop](https://codemirror.net/6/docs/ref/#language.foldNodeProp) of syntax nodes that cover the end\nof the line.\n*/\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\n\nexport { IndentContext, LRLanguage, Language, LanguageDescription, LanguageSupport, ParseContext, TreeIndentContext, continuedIndent, defineLanguageFacet, delimitedIndent, ensureSyntaxTree, flatIndent, foldInside, foldNodeProp, foldService, foldable, getIndentUnit, getIndentation, indentNodeProp, indentOnInput, indentService, indentString, indentUnit, language, languageDataProp, syntaxParserRunning, syntaxTree, syntaxTreeAvailable };\n","import { EditorView, ViewPlugin, BlockType, PluginField, Direction } from '@codemirror/view';\nimport { RangeSet, RangeValue } from '@codemirror/rangeset';\nimport { MapMode, Facet, combineConfig } from '@codemirror/state';\n\n/**\nA gutter marker represents a bit of information attached to a line\nin a specific gutter. Your own custom markers have to extend this\nclass.\n*/\nclass GutterMarker extends RangeValue {\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    Compare this marker to another marker of the same type.\n    */\n    eq(other) { return false; }\n    /**\n    Called if the marker has a `toDOM` method and its representation\n    was removed from a gutter.\n    */\n    destroy(dom) { }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.toDOM = undefined;\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nGutterMarker.prototype.startSide = GutterMarker.prototype.endSide = -1;\nGutterMarker.prototype.point = true;\n/**\nFacet used to add a class to all gutter elements for a given line.\nMarkers given to this facet should _only_ define an\n[`elementclass`](https://codemirror.net/6/docs/ref/#gutter.GutterMarker.elementClass), not a\n[`toDOM`](https://codemirror.net/6/docs/ref/#gutter.GutterMarker.toDOM) (or the marker will appear\nin all gutters for the line).\n*/\nconst gutterLineClass = /*@__PURE__*/Facet.define();\nconst defaults = {\n    class: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    lineMarkerChange: null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = /*@__PURE__*/Facet.define();\n/**\nDefine an editor gutter. The order in which the gutters appear is\ndetermined by their extension priority.\n*/\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutters\": {\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        left: 0,\n        zIndex: 200\n    },\n    \"&light .cm-gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#999\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"&dark .cm-gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    \".cm-gutter\": {\n        display: \"flex !important\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        minHeight: \"100%\",\n        overflow: \"hidden\"\n    },\n    \".cm-gutterElement\": {\n        boxSizing: \"border-box\"\n    },\n    \".cm-lineNumbers .cm-gutterElement\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    },\n    \"&light .cm-activeLineGutter\": {\n        backgroundColor: \"#e2f2ff\"\n    },\n    \"&dark .cm-activeLineGutter\": {\n        backgroundColor: \"#222227\"\n    }\n});\nconst unfixGutters = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\n/**\nThe gutter-drawing plugin is automatically enabled when you add a\ngutter, but you can use this function to explicitly configure it.\n\nUnless `fixed` is explicitly set to `false`, the gutters are\nfixed, meaning they don't scroll along with the content\nhorizontally (except on Internet Explorer, which doesn't support\nCSS [`position:\nsticky`](https://developer.mozilla.org/en-US/docs/Web/CSS/position#sticky)).\n*/\nfunction gutters(config) {\n    let result = [\n        gutterView,\n        baseTheme\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.prevViewport = view.viewport;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutters\";\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        this.syncGutters(false);\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (this.updateGutters(update)) {\n            // Detach during sync when the viewport changed significantly\n            // (such as during scrolling), since for large updates that is\n            // faster.\n            let vpA = this.prevViewport, vpB = update.view.viewport;\n            let vpOverlap = Math.min(vpA.to, vpB.to) - Math.max(vpA.from, vpB.from);\n            this.syncGutters(vpOverlap < (vpB.to - vpB.from) * 0.8);\n        }\n        if (update.geometryChanged)\n            this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        if (this.view.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n        this.prevViewport = update.view.viewport;\n    }\n    syncGutters(detach) {\n        let after = this.dom.nextSibling;\n        if (detach)\n            this.dom.remove();\n        let lineClasses = RangeSet.iter(this.view.state.facet(gutterLineClass), this.view.viewport.from);\n        let classSet = [];\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport, -this.view.documentPadding.top));\n        for (let line of this.view.viewportLineBlocks) {\n            let text;\n            if (Array.isArray(line.type)) {\n                for (let b of line.type)\n                    if (b.type == BlockType.Text) {\n                        text = b;\n                        break;\n                    }\n            }\n            else {\n                text = line.type == BlockType.Text ? line : undefined;\n            }\n            if (!text)\n                continue;\n            if (classSet.length)\n                classSet = [];\n            advanceCursor(lineClasses, classSet, line.from);\n            for (let cx of contexts)\n                cx.line(this.view, text, classSet);\n        }\n        for (let cx of contexts)\n            cx.finish();\n        if (detach)\n            this.view.scrollDOM.insertBefore(this.dom, after);\n    }\n    updateGutters(update) {\n        let prev = update.startState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged ||\n            !RangeSet.eq(update.startState.facet(gutterLineClass), update.state.facet(gutterLineClass), update.view.viewport.from, update.view.viewport.to);\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters) {\n                g.dom.remove();\n                if (gutters.indexOf(g) < 0)\n                    g.destroy();\n            }\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        for (let view of this.gutters)\n            view.destroy();\n        this.dom.remove();\n    }\n}, {\n    provide: /*@__PURE__*/PluginField.scrollMargins.from(value => {\n        if (value.gutters.length == 0 || !value.fixed)\n            return null;\n        return value.view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };\n    })\n});\nfunction asArray(val) { return (Array.isArray(val) ? val : [val]); }\nfunction advanceCursor(cursor, collect, pos) {\n    while (cursor.value && cursor.from <= pos) {\n        if (cursor.from == pos)\n            collect.push(cursor.value);\n        cursor.next();\n    }\n}\nclass UpdateContext {\n    constructor(gutter, viewport, height) {\n        this.gutter = gutter;\n        this.height = height;\n        this.localMarkers = [];\n        this.i = 0;\n        this.cursor = RangeSet.iter(gutter.markers, viewport.from);\n    }\n    line(view, line, extraMarkers) {\n        if (this.localMarkers.length)\n            this.localMarkers = [];\n        advanceCursor(this.cursor, this.localMarkers, line.from);\n        let localMarkers = extraMarkers.length ? this.localMarkers.concat(extraMarkers) : this.localMarkers;\n        let forLine = this.gutter.config.lineMarker(view, line, localMarkers);\n        if (forLine)\n            localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        let above = line.top - this.height;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, line.height, above, localMarkers);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            gutter.elements[this.i].update(view, line.height, above, localMarkers);\n        }\n        this.height = line.bottom;\n        this.i++;\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i) {\n            let last = gutter.elements.pop();\n            gutter.dom.removeChild(last.dom);\n            last.destroy();\n        }\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutter\" + (this.config.class ? \" \" + this.config.class : \"\");\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let line = view.lineBlockAtHeight(event.clientY - view.documentTop);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = asArray(config.markers(view));\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)]);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = asArray(this.config.markers(update.view));\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated]);\n        }\n        let vp = update.view.viewport;\n        return !RangeSet.eq(this.markers, prevMarkers, vp.from, vp.to) ||\n            (this.config.lineMarkerChange ? this.config.lineMarkerChange(update) : false);\n    }\n    destroy() {\n        for (let elt of this.elements)\n            elt.destroy();\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers) {\n        this.height = -1;\n        this.above = 0;\n        this.markers = [];\n        this.dom = document.createElement(\"div\");\n        this.update(view, height, above, markers);\n    }\n    update(view, height, above, markers) {\n        if (this.height != height)\n            this.dom.style.height = (this.height = height) + \"px\";\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (!sameMarkers(this.markers, markers))\n            this.setMarkers(view, markers);\n    }\n    setMarkers(view, markers) {\n        let cls = \"cm-gutterElement\", domPos = this.dom.firstChild;\n        for (let iNew = 0, iOld = 0;;) {\n            let skipTo = iOld, marker = iNew < markers.length ? markers[iNew++] : null, matched = false;\n            if (marker) {\n                let c = marker.elementClass;\n                if (c)\n                    cls += \" \" + c;\n                for (let i = iOld; i < this.markers.length; i++)\n                    if (this.markers[i].compare(marker)) {\n                        skipTo = i;\n                        matched = true;\n                        break;\n                    }\n            }\n            else {\n                skipTo = this.markers.length;\n            }\n            while (iOld < skipTo) {\n                let next = this.markers[iOld++];\n                if (next.toDOM) {\n                    next.destroy(domPos);\n                    let after = domPos.nextSibling;\n                    domPos.remove();\n                    domPos = after;\n                }\n            }\n            if (!marker)\n                break;\n            if (marker.toDOM) {\n                if (matched)\n                    domPos = domPos.nextSibling;\n                else\n                    this.dom.insertBefore(marker.toDOM(view), domPos);\n            }\n            if (matched)\n                iOld++;\n        }\n        this.dom.className = cls;\n        this.markers = markers;\n    }\n    destroy() {\n        this.setMarkers(null, []); // First argument not used unless creating markers\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/**\nFacet used to provide markers to the line number gutter.\n*/\nconst lineNumberMarkers = /*@__PURE__*/Facet.define();\nconst lineNumberConfig = /*@__PURE__*/Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM() { return document.createTextNode(this.number); }\n}\nfunction formatNumber(view, number) {\n    return view.state.facet(lineNumberConfig).formatNumber(number, view.state);\n}\nconst lineNumberGutter = /*@__PURE__*/activeGutters.compute([lineNumberConfig], state => ({\n    class: \"cm-lineNumbers\",\n    renderEmptyElements: false,\n    markers(view) { return view.state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.some(m => m.toDOM))\n            return null;\n        return new NumberMarker(formatNumber(view, view.state.doc.lineAt(line.from).number));\n    },\n    lineMarkerChange: update => update.startState.facet(lineNumberConfig) != update.state.facet(lineNumberConfig),\n    initialSpacer(view) {\n        return new NumberMarker(formatNumber(view, maxLineNumber(view.state.doc.lines)));\n    },\n    updateSpacer(spacer, update) {\n        let max = formatNumber(update.view, maxLineNumber(update.view.state.doc.lines));\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    },\n    domEventHandlers: state.facet(lineNumberConfig).domEventHandlers\n}));\n/**\nCreate a line number gutter extension.\n*/\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        gutters(),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\nconst activeLineGutterMarker = /*@__PURE__*/new class extends GutterMarker {\n    constructor() {\n        super(...arguments);\n        this.elementClass = \"cm-activeLineGutter\";\n    }\n};\nconst activeLineGutterHighlighter = /*@__PURE__*/gutterLineClass.compute([\"selection\"], state => {\n    let marks = [], last = -1;\n    for (let range of state.selection.ranges)\n        if (range.empty) {\n            let linePos = state.doc.lineAt(range.head).from;\n            if (linePos > last) {\n                last = linePos;\n                marks.push(activeLineGutterMarker.range(linePos));\n            }\n        }\n    return RangeSet.of(marks);\n});\n/**\nReturns an extension that adds a `cm-activeLineGutter` class to\nall gutter elements on the [active\nline](https://codemirror.net/6/docs/ref/#view.highlightActiveLine).\n*/\nfunction highlightActiveLineGutter() {\n    return activeLineGutterHighlighter;\n}\n\nexport { GutterMarker, gutter, gutterLineClass, gutters, highlightActiveLineGutter, lineNumberMarkers, lineNumbers };\n","import { StateEffect, StateField, Facet, combineConfig } from '@codemirror/state';\nimport { Decoration, EditorView, WidgetType, ViewPlugin } from '@codemirror/view';\nimport { foldable, language } from '@codemirror/language';\nimport { gutter, GutterMarker } from '@codemirror/gutter';\nimport { RangeSet, RangeSetBuilder } from '@codemirror/rangeset';\n\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\n/**\nState effect that can be attached to a transaction to fold the\ngiven range. (You probably only need this in exceptional\ncircumstances—usually you'll just want to let\n[`foldCode`](https://codemirror.net/6/docs/ref/#fold.foldCode) and the [fold\ngutter](https://codemirror.net/6/docs/ref/#fold.foldGutter) create the transactions.)\n*/\nconst foldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\n/**\nState effect that unfolds the given range (if it was folded).\n*/\nconst unfoldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.lineBlockAt(head));\n    }\n    return lines;\n}\nconst foldState = /*@__PURE__*/StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to))\n                folded = folded.update({ add: [foldWidget.range(e.value.from, e.value.to)] });\n            else if (e.is(unfoldEffect))\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.main;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: f => EditorView.decorations.from(f)\n});\n/**\nGet a [range set](https://codemirror.net/6/docs/ref/#rangeset.RangeSet) containing the folded ranges\nin the given state.\n*/\nfunction foldedRanges(state) {\n    return state.field(foldState, false) || RangeSet.empty;\n}\nfunction foldInside(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = { from, to };\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction maybeEnable(state, other) {\n    return state.field(foldState, false) ? other : other.concat(StateEffect.appendConfig.of(codeFolding()));\n}\n/**\nFold the lines that are selected, if possible.\n*/\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = foldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: maybeEnable(view.state, [foldEffect.of(range), announceFold(view, range)]) });\n            return true;\n        }\n    }\n    return false;\n};\n/**\nUnfold folded ranges on selected lines.\n*/\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = foldInside(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\nfunction announceFold(view, range, fold = true) {\n    let lineFrom = view.state.doc.lineAt(range.from).number, lineTo = view.state.doc.lineAt(range.to).number;\n    return EditorView.announce.of(`${view.state.phrase(fold ? \"Folded lines\" : \"Unfolded lines\")} ${lineFrom} ${view.state.phrase(\"to\")} ${lineTo}.`);\n}\n/**\nFold all top-level foldable ranges.\n*/\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.lineBlockAt(pos), range = foldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.lineBlockAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nUnfold all folded code.\n*/\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n/**\nDefault fold-related key bindings.\n\n - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](https://codemirror.net/6/docs/ref/#fold.foldCode).\n - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](https://codemirror.net/6/docs/ref/#fold.unfoldCode).\n - Ctrl-Alt-[: [`foldAll`](https://codemirror.net/6/docs/ref/#fold.foldAll).\n - Ctrl-Alt-]: [`unfoldAll`](https://codemirror.net/6/docs/ref/#fold.unfoldAll).\n*/\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = /*@__PURE__*/Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/**\nCreate an extension that configures code folding.\n*/\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nconst foldWidget = /*@__PURE__*/Decoration.replace({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM(view) {\n            let { state } = view, conf = state.facet(foldConfig);\n            let onclick = (event) => {\n                let line = view.lineBlockAt(view.posAtDOM(event.target));\n                let folded = foldInside(view.state, line.from, line.to);\n                if (folded)\n                    view.dispatch({ effects: unfoldEffect.of(folded) });\n                event.preventDefault();\n            };\n            if (conf.placeholderDOM)\n                return conf.placeholderDOM(view, onclick);\n            let element = document.createElement(\"span\");\n            element.textContent = conf.placeholderText;\n            element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n            element.title = state.phrase(\"unfold\");\n            element.className = \"cm-foldPlaceholder\";\n            element.onclick = onclick;\n            return element;\n        }\n    } });\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\",\n    markerDOM: null,\n    domEventHandlers: {},\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        if (this.config.markerDOM)\n            return this.config.markerDOM(this.open);\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/**\nCreate an extension that registers a fold gutter, which shows a\nfold status indicator before foldable lines (which can be clicked\nto fold or unfold the line).\n*/\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    let markers = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.from = view.viewport.from;\n            this.markers = this.buildMarkers(view);\n        }\n        update(update) {\n            if (update.docChanged || update.viewportChanged ||\n                update.startState.facet(language) != update.state.facet(language) ||\n                update.startState.field(foldState, false) != update.state.field(foldState, false))\n                this.markers = this.buildMarkers(update.view);\n        }\n        buildMarkers(view) {\n            let builder = new RangeSetBuilder();\n            for (let line of view.viewportLineBlocks) {\n                let mark = foldInside(view.state, line.from, line.to) ? canUnfold\n                    : foldable(view.state, line.from, line.to) ? canFold : null;\n                if (mark)\n                    builder.add(line.from, line.from, mark);\n            }\n            return builder.finish();\n        }\n    });\n    let { domEventHandlers } = fullConfig;\n    return [\n        markers,\n        gutter({\n            class: \"cm-foldGutter\",\n            markers(view) { var _a; return ((_a = view.plugin(markers)) === null || _a === void 0 ? void 0 : _a.markers) || RangeSet.empty; },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: Object.assign(Object.assign({}, domEventHandlers), { click: (view, line, event) => {\n                    if (domEventHandlers.click && domEventHandlers.click(view, line, event))\n                        return true;\n                    let folded = foldInside(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                } })\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \".cm-foldGutter span\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\nexport { codeFolding, foldAll, foldCode, foldEffect, foldGutter, foldKeymap, foldedRanges, unfoldAll, unfoldCode, unfoldEffect };\n","import { Facet, combineConfig, StateField } from '@codemirror/state';\nimport { syntaxTree } from '@codemirror/language';\nimport { EditorView, Decoration } from '@codemirror/view';\nimport { NodeProp } from '@lezer/common';\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-matchingBracket\": { backgroundColor: \"#328c8252\" },\n    \".cm-nonmatchingBracket\": { backgroundColor: \"#bb555544\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist\n        });\n    }\n});\nconst matchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-matchingBracket\" }), nonmatchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-nonmatchingBracket\" });\nconst bracketMatchingState = /*@__PURE__*/StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (!match)\n                continue;\n            let mark = match.matched ? matchingMark : nonmatchingMark;\n            decorations.push(mark.range(match.start.from, match.start.to));\n            if (match.end)\n                decorations.push(mark.range(match.end.from, match.end.to));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: f => EditorView.decorations.from(f)\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/**\nCreate an extension that enables bracket matching. Whenever the\ncursor is next to a bracket, that bracket and the one it matches\nare highlighted. Or, when no matching bracket is found, another\nhighlighting style is used to indicate this.\n*/\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\n/**\nFind the matching bracket for the token at `pos`, scanning\ndirection `dir`. Only the `brackets` and `maxScanDistance`\nproperties are used from `config`, if given. Returns null if no\nbracket was found at `pos`, or a match result otherwise.\n*/\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), node = tree.resolveInner(pos, dir);\n    for (let cur = node; cur; cur = cur.parent) {\n        let matches = matchingNodes(cur.type, dir, brackets);\n        if (matches && cur.from < cur.to)\n            return matchMarkedBrackets(state, pos, dir, cur, matches, brackets);\n    }\n    return matchPlainBrackets(state, pos, dir, tree, node.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, matching, brackets) {\n    let parent = token.parent, firstToken = { from: token.from, to: token.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor;\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1 && cursor.from < cursor.to) {\n                    return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    depth--;\n                    if (depth == 0)\n                        return {\n                            start: firstToken,\n                            end: cursor.from == cursor.to ? undefined : { from: cursor.from, to: cursor.to },\n                            matched: false\n                        };\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolve(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\nexport { bracketMatching, matchBrackets };\n","import { EditorSelection, CharCategory } from '@codemirror/state';\nimport { Text, findClusterBreak, countColumn } from '@codemirror/text';\nimport { Direction, EditorView, PluginField } from '@codemirror/view';\nimport { matchBrackets } from '@codemirror/matchbrackets';\nimport { IndentContext, getIndentation, indentString, indentUnit, getIndentUnit, syntaxTree } from '@codemirror/language';\nimport { NodeProp } from '@lezer/common';\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, view.textDirection != Direction.LTR);\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, view.textDirection == Direction.LTR);\n/**\nMove the selection one character forward.\n*/\nconst cursorCharForward = view => cursorByChar(view, true);\n/**\nMove the selection one character backward.\n*/\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, view.textDirection != Direction.LTR);\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, view.textDirection == Direction.LTR);\n/**\nMove the selection one group forward.\n*/\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/**\nMove the selection one group backward.\n*/\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction moveBySubword(view, range, forward) {\n    let categorize = view.state.charCategorizer(range.from);\n    return view.moveByChar(range, forward, start => {\n        let cat = CharCategory.Space, pos = range.from;\n        let done = false, sawUpper = false, sawLower = false;\n        let step = (next) => {\n            if (done)\n                return false;\n            pos += forward ? next.length : -next.length;\n            let nextCat = categorize(next), ahead;\n            if (cat == CharCategory.Space)\n                cat = nextCat;\n            if (cat != nextCat)\n                return false;\n            if (cat == CharCategory.Word) {\n                if (next.toLowerCase() == next) {\n                    if (!forward && sawUpper)\n                        return false;\n                    sawLower = true;\n                }\n                else if (sawLower) {\n                    if (forward)\n                        return false;\n                    done = true;\n                }\n                else {\n                    if (sawUpper && forward && categorize(ahead = view.state.sliceDoc(pos, pos + 1)) == CharCategory.Word &&\n                        ahead.toLowerCase() == ahead)\n                        return false;\n                    sawUpper = true;\n                }\n            }\n            return true;\n        };\n        step(start);\n        return step;\n    });\n}\nfunction cursorBySubword(view, forward) {\n    return moveSel(view, range => range.empty ? moveBySubword(view, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one group or camel-case subword forward.\n*/\nconst cursorSubwordForward = view => cursorBySubword(view, true);\n/**\nMove the selection one group or camel-case subword backward.\n*/\nconst cursorSubwordBackward = view => cursorBySubword(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction cursorByPage(view, forward) {\n    let { state } = view, selection = updateSel(state.selection, range => {\n        return range.empty ? view.moveVertically(range, forward, view.dom.clientHeight) : rangeEnd(range, forward);\n    });\n    if (selection.eq(state.selection))\n        return false;\n    let startPos = view.coordsAtPos(state.selection.main.head);\n    let scrollRect = view.scrollDOM.getBoundingClientRect();\n    view.dispatch(setSel(state, selection), {\n        effects: startPos && startPos.top > scrollRect.top && startPos.bottom < scrollRect.bottom\n            ? EditorView.scrollIntoView(selection.main.head, { y: \"start\", yMargin: startPos.top - scrollRect.top })\n            : undefined\n    });\n    return true;\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/**\nExtend the selection to the bracket matching the one the selection\nhead is currently on, if any.\n*/\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(view, how) {\n    let selection = updateSel(view.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn);\n    });\n    if (selection.eq(view.state.selection))\n        return false;\n    view.dispatch(setSel(view.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, view.textDirection != Direction.LTR);\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, view.textDirection == Direction.LTR);\n/**\nMove the selection head one character forward.\n*/\nconst selectCharForward = view => selectByChar(view, true);\n/**\nMove the selection head one character backward.\n*/\nconst selectCharBackward = view => selectByChar(view, false);\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, view.textDirection != Direction.LTR);\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, view.textDirection == Direction.LTR);\n/**\nMove the selection head one group forward.\n*/\nconst selectGroupForward = view => selectByGroup(view, true);\n/**\nMove the selection head one group backward.\n*/\nconst selectGroupBackward = view => selectByGroup(view, false);\nfunction selectBySubword(view, forward) {\n    return extendSel(view, range => moveBySubword(view, range, forward));\n}\n/**\nMove the selection head one group or camel-case subword forward.\n*/\nconst selectSubwordForward = view => selectBySubword(view, true);\n/**\nMove the selection head one group or subword backward.\n*/\nconst selectSubwordBackward = view => selectBySubword(view, false);\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, view.dom.clientHeight));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        var _a;\n        let context = syntaxTree(state).resolveInner(range.head, 1);\n        while (!((context.from < range.from && context.to >= range.to) ||\n            (context.to > range.to && context.from <= range.from) ||\n            !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))\n            context = context.parent;\n        return EditorSelection.range(context.to, context.from);\n    });\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy({ state, dispatch }, by) {\n    if (state.readOnly)\n        return false;\n    let event = \"delete.selection\";\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(from);\n            if (towards < from)\n                event = \"delete.backward\";\n            else if (towards > from)\n                event = \"delete.forward\";\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: event }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.pluginField(PluginField.atomicRanges))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward) => deleteBy(target, pos => {\n    let { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (!forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n    }\n    return skipAtomic(target, targetPos, forward);\n});\n/**\nDelete the selection, or, for cursor selections, the character\nbefore the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true);\nconst deleteByGroup = (target, forward) => deleteBy(target, start => {\n    let pos = start, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == start && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != start)\n            cat = nextCat;\n        pos = next;\n    }\n    return skipAtomic(target, pos, forward);\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, pos => {\n    let lineEnd = view.lineBlockAt(pos).to;\n    return skipAtomic(view, pos < lineEnd ? lineEnd : Math.min(view.state.doc.length, pos + 1), true);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, pos => {\n    let lineStart = view.lineBlockAt(pos).from;\n    return skipAtomic(view, pos > lineStart ? lineStart : Math.max(0, pos - 1), false);\n});\n/**\nDelete all whitespace directly before a line end from the\ndocument.\n*/\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, userEvent: \"delete\" }));\n    return true;\n};\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\n/**\nReplace the selection with a newline.\n*/\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from)\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = /^\\s*/.exec(state.doc.lineAt(from).text)[0].length;\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nInsert a tab character at the cursor or, if something is selected,\nuse [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) to indent the entire\nselection.\n*/\nconst insertTab = ({ state, dispatch }) => {\n    if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch });\n    dispatch(state.update(state.replaceSelection(\"\\t\"), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteToLineStart`](https://codemirror.net/6/docs/ref/#commands.deleteToLineStart).\n - Cmd-Delete (macOS): [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteToLineStart },\n    { mac: \"Mod-Delete\", run: deleteToLineEnd }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Comd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket }\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nexport { copyLineDown, copyLineUp, cursorCharBackward, cursorCharForward, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSubwordBackward, cursorSubwordForward, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteToLineEnd, deleteToLineStart, deleteTrailingWhitespace, emacsStyleKeymap, indentLess, indentMore, indentSelection, indentWithTab, insertBlankLine, insertNewline, insertNewlineAndIndent, insertTab, moveLineDown, moveLineUp, selectAll, selectCharBackward, selectCharForward, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSubwordBackward, selectSubwordForward, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, transposeChars };\n","import { EditorView } from '@codemirror/view';\nimport { StateEffect, MapMode, StateField, EditorSelection, CharCategory } from '@codemirror/state';\nimport { RangeValue, RangeSet } from '@codemirror/rangeset';\nimport { codePointSize, codePointAt, fromCodePoint } from '@codemirror/text';\nimport { syntaxTree } from '@codemirror/language';\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}'\\\":;>\"\n};\nconst closeBracketEffect = /*@__PURE__*/StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst skipBracketEffect = /*@__PURE__*/StateEffect.define({\n    map(value, mapping) { return mapping.mapPos(value); }\n});\nconst closedBracket = /*@__PURE__*/new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = /*@__PURE__*/StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        if (tr.selection) {\n            let lineStart = tr.state.doc.lineAt(tr.selection.main.head).from;\n            let prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.main.head).from;\n            if (lineStart != tr.changes.mapPos(prevLineStart, -1))\n                value = RangeSet.empty;\n        }\n        value = value.map(tr.changes);\n        for (let effect of tr.effects) {\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n            else if (effect.is(skipBracketEffect))\n                value = value.update({ filter: from => from != effect.value });\n        }\n        return value;\n    }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n    return [EditorView.inputHandler.of(handleInput), bracketState];\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nfunction handleInput(view, from, to, insert) {\n    if (view.composing)\n        return false;\n    let sel = view.state.selection.main;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = insertBracket(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n}\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nconst deleteBracketPair = ({ state, dispatch }) => {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length),\n                        userEvent: \"delete.backward\" };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true }));\n    return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#closebrackets.deleteBracketPair).\n*/\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets—the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#closebrackets.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (bracket == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (bracket == closed && closedBracketAt(state, state.selection.main.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, moved = state.selection.ranges.map(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return EditorSelection.cursor(range.head + close.length);\n        return dont = range;\n    });\n    return dont ? null : state.update({\n        selection: EditorSelection.create(moved, state.selection.mainIndex),\n        scrollIntoView: true,\n        effects: state.selection.ranges.map(({ from }) => skipBracketEffect.of(from))\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos);\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                return { range: EditorSelection.cursor(pos + token.length * (isTriple ? 3 : 1)),\n                    effects: skipBracketEffect.of(pos) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            nodeStart(state, pos - 2 * token.length)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            let prev = state.sliceDoc(pos - 1, pos);\n            if (prev != token && state.charCategorizer(pos)(prev) != CharCategory.Word)\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolveInner(pos + 1);\n    return tree.parent && tree.from == pos;\n}\n\nexport { closeBrackets, closeBracketsKeymap, deleteBracketPair, insertBracket };\n","import { ViewPlugin, PluginField, EditorView } from '@codemirror/view';\nimport { Facet } from '@codemirror/state';\n\nconst panelConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/**\nConfigures the panel-managing extension.\n*/\nfunction panels(config) {\n    return config ? [panelConfig.of(config)] : [];\n}\n/**\nGet the active panel created by the given constructor, if any.\nThis can be useful when you need access to your panels' DOM\nstructure.\n*/\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = plugin ? plugin.specs.indexOf(panel) : -1;\n    return index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.input = view.state.facet(showPanel);\n        this.specs = this.input.filter(s => s);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.classList.add(\"cm-panel\");\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let input = update.state.facet(showPanel);\n        if (input != this.input) {\n            let specs = input.filter(x => x);\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.classList.add(\"cm-panel\");\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: /*@__PURE__*/PluginField.scrollMargins.from(value => ({ top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() }))\n});\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        for (let p of this.panels)\n            if (p.destroy && panels.indexOf(p) < 0)\n                p.destroy();\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = this.top ? \"cm-panels cm-panels-top\" : \"cm-panels cm-panels-bottom\";\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ?\n                this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) :\n                Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panels\": {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0\n    },\n    \"&light .cm-panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"&light .cm-panels-top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"&light .cm-panels-bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"&dark .cm-panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    }\n});\n/**\nOpening a panel is done by providing a constructor function for\nthe panel through this facet. (The panel is closed again when its\nconstructor is no longer provided.) Values of `null` are ignored.\n*/\nconst showPanel = /*@__PURE__*/Facet.define({\n    enables: [panelPlugin, baseTheme]\n});\n\nexport { getPanel, panels, showPanel };\n","export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n","import { EditorView, Decoration, ViewPlugin, runScopeHandlers } from '@codemirror/view';\nimport { StateEffect, StateField, EditorSelection, Facet, combineConfig, CharCategory, Prec } from '@codemirror/state';\nimport { showPanel, getPanel } from '@codemirror/panel';\nimport { RangeSetBuilder } from '@codemirror/rangeset';\nimport elt from 'crelt';\nimport { codePointAt, fromCodePoint, codePointSize } from '@codemirror/text';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize) {\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += codePointSize(next);\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst empty = { from: -1, to: -1, match: /*@__PURE__*//.*/.exec(\"\") };\nconst baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nclass RegExpCursor {\n    /**\n    Create a cursor that will search the given range in the given\n    document. `query` should be the raw pattern (as you'd pass it to\n    `new RegExp`).\n    */\n    constructor(text, query, options, from = 0, to = text.length) {\n        this.to = to;\n        this.curLine = \"\";\n        /**\n        Set to `true` when the cursor has reached the end of the search\n        range.\n        */\n        this.done = false;\n        /**\n        Will contain an object with the extent of the match and the\n        match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n        sucessfully finds a match.\n        */\n        this.value = empty;\n        if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query))\n            return new MultilineRegExpCursor(text, query, options, from, to);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.iter = text.iter();\n        let startLine = text.lineAt(from);\n        this.curLineStart = startLine.from;\n        this.matchPos = from;\n        this.getLine(this.curLineStart);\n    }\n    getLine(skip) {\n        this.iter.next(skip);\n        if (this.iter.lineBreak) {\n            this.curLine = \"\";\n        }\n        else {\n            this.curLine = this.iter.value;\n            if (this.curLineStart + this.curLine.length > this.to)\n                this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n            this.iter.next();\n        }\n    }\n    nextLine() {\n        this.curLineStart = this.curLineStart + this.curLine.length + 1;\n        if (this.curLineStart > this.to)\n            this.curLine = \"\";\n        else\n            this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n    next() {\n        for (let off = this.matchPos - this.curLineStart;;) {\n            this.re.lastIndex = off;\n            let match = this.matchPos <= this.to && this.re.exec(this.curLine);\n            if (match) {\n                let from = this.curLineStart + match.index, to = from + match[0].length;\n                this.matchPos = to + (from == to ? 1 : 0);\n                if (from == this.curLine.length)\n                    this.nextLine();\n                if (from < to || from > this.value.to) {\n                    this.value = { from, to, match };\n                    return this;\n                }\n                off = this.matchPos - this.curLineStart;\n            }\n            else if (this.curLineStart + this.curLine.length < this.to) {\n                this.nextLine();\n                off = 0;\n            }\n            else {\n                this.done = true;\n                return this;\n            }\n        }\n    }\n}\nconst flattened = /*@__PURE__*/new WeakMap();\n// Reusable (partially) flattened document strings\nclass FlattenedDoc {\n    constructor(from, text) {\n        this.from = from;\n        this.text = text;\n    }\n    get to() { return this.from + this.text.length; }\n    static get(doc, from, to) {\n        let cached = flattened.get(doc);\n        if (!cached || cached.from >= to || cached.to <= from) {\n            let flat = new FlattenedDoc(from, doc.sliceString(from, to));\n            flattened.set(doc, flat);\n            return flat;\n        }\n        if (cached.from == from && cached.to == to)\n            return cached;\n        let { text, from: cachedFrom } = cached;\n        if (cachedFrom > from) {\n            text = doc.sliceString(from, cachedFrom) + text;\n            cachedFrom = from;\n        }\n        if (cached.to < to)\n            text += doc.sliceString(cached.to, to);\n        flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n        return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n}\nclass MultilineRegExpCursor {\n    constructor(text, query, options, from, to) {\n        this.text = text;\n        this.to = to;\n        this.done = false;\n        this.value = empty;\n        this.matchPos = from;\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Base */));\n    }\n    chunkEnd(pos) {\n        return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n    next() {\n        for (;;) {\n            let off = this.re.lastIndex = this.matchPos - this.flat.from;\n            let match = this.re.exec(this.flat.text);\n            // Skip empty matches directly after the last match\n            if (match && !match[0] && match.index == off) {\n                this.re.lastIndex = off + 1;\n                match = this.re.exec(this.flat.text);\n            }\n            // If a match goes almost to the end of a noncomplete chunk, try\n            // again, since it'll likely be able to match more\n            if (match && this.flat.to < this.to && match.index + match[0].length > this.flat.text.length - 10)\n                match = null;\n            if (match) {\n                let from = this.flat.from + match.index, to = from + match[0].length;\n                this.value = { from, to, match };\n                this.matchPos = to + (from == to ? 1 : 0);\n                return this;\n            }\n            else {\n                if (this.flat.to == this.to) {\n                    this.done = true;\n                    return this;\n                }\n                // Grow the flattened doc\n                this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n            }\n        }\n    }\n}\nif (typeof Symbol != \"undefined\") {\n    RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =\n        function () { return this; };\n}\nfunction validRegExp(source) {\n    try {\n        new RegExp(source, baseFlags);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\nfunction createLineDialog(view) {\n    let input = elt(\"input\", { class: \"cm-textfield\", name: \"line\" });\n    let dom = elt(\"form\", {\n        class: \"cm-gotoLine\",\n        onkeydown: (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                view.dispatch({ effects: dialogEffect.of(false) });\n                view.focus();\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                go();\n            }\n        },\n        onsubmit: (event) => {\n            event.preventDefault();\n            go();\n        }\n    }, elt(\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", elt(\"button\", { class: \"cm-button\", type: \"submit\" }, view.state.phrase(\"go\")));\n    function go() {\n        let match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n        if (!match)\n            return;\n        let { state } = view, startLine = state.doc.lineAt(state.selection.main.head);\n        let [, sign, ln, cl, percent] = match;\n        let col = cl ? +cl.slice(1) : 0;\n        let line = ln ? +ln : startLine.number;\n        if (ln && percent) {\n            let pc = line / 100;\n            if (sign)\n                pc = pc * (sign == \"-\" ? -1 : 1) + (startLine.number / state.doc.lines);\n            line = Math.round(state.doc.lines * pc);\n        }\n        else if (ln && sign) {\n            line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n        }\n        let docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));\n        view.dispatch({\n            effects: dialogEffect.of(false),\n            selection: EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length))),\n            scrollIntoView: true\n        });\n        view.focus();\n    }\n    return { dom, pos: -10 };\n}\nconst dialogEffect = /*@__PURE__*/StateEffect.define();\nconst dialogField = /*@__PURE__*/StateField.define({\n    create() { return true; },\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(dialogEffect))\n                value = e.value;\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val ? createLineDialog : null)\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n\nThe dialog can be styled with the `panel.gotoLine` theme\nselector.\n*/\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        let effects = [dialogEffect.of(true)];\n        if (view.state.field(dialogField, false) == null)\n            effects.push(StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n        view.dispatch({ effects });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").focus();\n    return true;\n};\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100\n};\nconst highlightConfig = /*@__PURE__*/Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\nconst matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            let word = state.wordAt(range.head);\n            if (!word)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = state.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            query = state.sliceDoc(range.from, range.to).trim();\n            if (!query)\n                return Decoration.none;\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || ((from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n                    (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word))) {\n                    if (check && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n// Select the words around the cursors.\nconst selectWord = ({ state, dispatch }) => {\n    let { selection } = state;\n    let newSel = EditorSelection.create(selection.ranges.map(range => state.wordAt(range.head) || EditorSelection.cursor(range.head)), selection.mainIndex);\n    if (newSel.eq(selection))\n        return false;\n    dispatch(state.update({ selection: newSel }));\n    return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n    let { main, ranges } = state.selection;\n    let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;\n    for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n        cursor.next();\n        if (cursor.done) {\n            if (cycled)\n                return null;\n            cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n            cycled = true;\n        }\n        else {\n            if (cycled && ranges.some(r => r.from == cursor.value.from))\n                continue;\n            if (fullWord) {\n                let word = state.wordAt(cursor.value.from);\n                if (!word || word.from != cursor.value.from || word.to != cursor.value.to)\n                    continue;\n            }\n            return cursor.value;\n        }\n    }\n}\n/**\nSelect next occurrence of the current selection.\nExpand selection to the word when selection range is empty.\n*/\nconst selectNextOccurrence = ({ state, dispatch }) => {\n    let { ranges } = state.selection;\n    if (ranges.some(sel => sel.from === sel.to))\n        return selectWord({ state, dispatch });\n    let searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);\n    if (state.selection.ranges.some(r => state.sliceDoc(r.from, r.to) != searchedText))\n        return false;\n    let range = findNextOccurrence(state, searchedText);\n    if (!range)\n        return false;\n    dispatch(state.update({\n        selection: state.selection.addRange(EditorSelection.range(range.from, range.to), false),\n        effects: EditorView.scrollIntoView(range.to)\n    }));\n    return true;\n};\n\nconst searchConfigFacet = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        var _a;\n        return {\n            top: configs.reduce((val, conf) => val !== null && val !== void 0 ? val : conf.top, undefined) || false,\n            caseSensitive: configs.reduce((val, conf) => val !== null && val !== void 0 ? val : (conf.caseSensitive || conf.matchCase), undefined) || false,\n            createPanel: ((_a = configs.find(c => c.createPanel)) === null || _a === void 0 ? void 0 : _a.createPanel) || (view => new SearchPanel(view))\n        };\n    }\n});\n/**\nConfigure the behavior of the search extension.\n*/\nfunction searchConfig(config) {\n    return searchConfigFacet.of(config);\n}\n/**\nA search query. Part of the editor's search state.\n*/\nclass SearchQuery {\n    /**\n    Create a query object.\n    */\n    constructor(config) {\n        this.search = config.search;\n        this.caseSensitive = !!config.caseSensitive;\n        this.regexp = !!config.regexp;\n        this.replace = config.replace || \"\";\n        this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n    }\n    /**\n    Compare this query to another query.\n    */\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace &&\n            this.caseSensitive == other.caseSensitive && this.regexp == other.regexp;\n    }\n    /**\n    @internal\n    */\n    create() {\n        return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n}\nclass QueryType {\n    constructor(spec) {\n        this.spec = spec;\n    }\n}\nclass StringQuery extends QueryType {\n    constructor(spec) {\n        super(spec);\n        this.unquoted = spec.search.replace(/\\\\([nrt\\\\])/g, (_, ch) => ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\");\n    }\n    cursor(doc, from = 0, to = doc.length) {\n        return new SearchCursor(doc, this.unquoted, from, to, this.spec.caseSensitive ? undefined : x => x.toLowerCase());\n    }\n    nextMatch(doc, curFrom, curTo) {\n        let cursor = this.cursor(doc, curTo).nextOverlapping();\n        if (cursor.done)\n            cursor = this.cursor(doc, 0, curFrom).nextOverlapping();\n        return cursor.done ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing inverted search\n    // cursor, done by scanning chunk after chunk forward.\n    prevMatchInRange(doc, from, to) {\n        for (let pos = to;;) {\n            let start = Math.max(from, pos - 10000 /* ChunkSize */ - this.unquoted.length);\n            let cursor = this.cursor(doc, start, pos), range = null;\n            while (!cursor.nextOverlapping().done)\n                range = cursor.value;\n            if (range)\n                return range;\n            if (start == from)\n                return null;\n            pos -= 10000 /* ChunkSize */;\n        }\n    }\n    prevMatch(doc, curFrom, curTo) {\n        return this.prevMatchInRange(doc, 0, curFrom) ||\n            this.prevMatchInRange(doc, curTo, doc.length);\n    }\n    getReplacement(_result) { return this.spec.replace; }\n    matchAll(doc, limit) {\n        let cursor = this.cursor(doc), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(doc, from, to, add) {\n        let cursor = this.cursor(doc, Math.max(0, from - this.unquoted.length), Math.min(to + this.unquoted.length, doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\nclass RegExpQuery extends QueryType {\n    cursor(doc, from = 0, to = doc.length) {\n        return new RegExpCursor(doc, this.spec.search, this.spec.caseSensitive ? undefined : { ignoreCase: true }, from, to);\n    }\n    nextMatch(doc, curFrom, curTo) {\n        let cursor = this.cursor(doc, curTo).next();\n        if (cursor.done)\n            cursor = this.cursor(doc, 0, curFrom).next();\n        return cursor.done ? null : cursor.value;\n    }\n    prevMatchInRange(doc, from, to) {\n        for (let size = 1;; size++) {\n            let start = Math.max(from, to - size * 10000 /* ChunkSize */);\n            let cursor = this.cursor(doc, start, to), range = null;\n            while (!cursor.next().done)\n                range = cursor.value;\n            if (range && (start == from || range.from > start + 10))\n                return range;\n            if (start == from)\n                return null;\n        }\n    }\n    prevMatch(doc, curFrom, curTo) {\n        return this.prevMatchInRange(doc, 0, curFrom) ||\n            this.prevMatchInRange(doc, curTo, doc.length);\n    }\n    getReplacement(result) {\n        return this.spec.replace.replace(/\\$([$&\\d+])/g, (m, i) => i == \"$\" ? \"$\"\n            : i == \"&\" ? result.match[0]\n                : i != \"0\" && +i < result.match.length ? result.match[i]\n                    : m);\n    }\n    matchAll(doc, limit) {\n        let cursor = this.cursor(doc), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(doc, from, to, add) {\n        let cursor = this.cursor(doc, Math.max(0, from - 250 /* HighlightMargin */), Math.min(to + 250 /* HighlightMargin */, doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\n/**\nA state effect that updates the current search query.\n*/\nconst setSearchQuery = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst searchState = /*@__PURE__*/StateField.define({\n    create(state) {\n        return new SearchState(defaultQuery(state).create(), createSearchPanel);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setSearchQuery))\n                value = new SearchState(effect.value.create(), value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n        }\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val.panel)\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n    let curState = state.field(searchState, false);\n    return curState ? curState.query.spec : defaultQuery(state);\n}\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch\" }), selectedMatchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch cm-searchMatch-selected\" });\nconst searchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel || !query.spec.valid)\n            return Decoration.none;\n        let { view } = this;\n        let builder = new RangeSetBuilder();\n        for (let i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {\n            let { from, to } = ranges[i];\n            while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* HighlightMargin */)\n                to = ranges[++i].to;\n            query.highlight(view.state.doc, from, to, (from, to) => {\n                let selected = view.state.selection.ranges.some(r => r.from == from && r.to == to);\n                builder.add(from, to, selected ? selectedMatchMark : matchMark);\n            });\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nconst findNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { from, to } = view.state.selection.main;\n    let next = query.nextMatch(view.state.doc, from, to);\n    if (!next || next.from == from && next.to == to)\n        return false;\n    view.dispatch({\n        selection: { anchor: next.from, head: next.to },\n        scrollIntoView: true,\n        effects: announceMatch(view, next),\n        userEvent: \"select.search\"\n    });\n    return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nconst findPrevious = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    let range = query.prevMatch(state.doc, from, to);\n    if (!range)\n        return false;\n    view.dispatch({\n        selection: { anchor: range.from, head: range.to },\n        scrollIntoView: true,\n        effects: announceMatch(view, range),\n        userEvent: \"select.search\"\n    });\n    return true;\n});\n/**\nSelect all instances of the search query.\n*/\nconst selectMatches = /*@__PURE__*/searchCommand((view, { query }) => {\n    let ranges = query.matchAll(view.state.doc, 1000);\n    if (!ranges || !ranges.length)\n        return false;\n    view.dispatch({\n        selection: EditorSelection.create(ranges.map(r => EditorSelection.range(r.from, r.to))),\n        userEvent: \"select.search.matches\"\n    });\n    return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.main.empty)\n        return false;\n    let { from, to } = sel.main;\n    let ranges = [], main = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            main = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({\n        selection: EditorSelection.create(ranges, main),\n        userEvent: \"select.search.matches\"\n    }));\n    return true;\n};\n/**\nReplace the current match of the search query.\n*/\nconst replaceNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    if (state.readOnly)\n        return false;\n    let next = query.nextMatch(state.doc, from, from);\n    if (!next)\n        return false;\n    let changes = [], selection, replacement;\n    if (next.from == from && next.to == to) {\n        replacement = state.toText(query.getReplacement(next));\n        changes.push({ from: next.from, to: next.to, insert: replacement });\n        next = query.nextMatch(state.doc, next.from, next.to);\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - replacement.length;\n        selection = { anchor: next.from - off, head: next.to - off };\n    }\n    view.dispatch({\n        changes, selection,\n        scrollIntoView: !!selection,\n        effects: next ? announceMatch(view, next) : undefined,\n        userEvent: \"input.replace\"\n    });\n    return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nconst replaceAll = /*@__PURE__*/searchCommand((view, { query }) => {\n    if (view.state.readOnly)\n        return false;\n    let changes = query.matchAll(view.state.doc, 1e9).map(match => {\n        let { from, to } = match;\n        return { from, to, insert: query.getReplacement(match) };\n    });\n    if (!changes.length)\n        return false;\n    view.dispatch({\n        changes,\n        userEvent: \"input.replace.all\"\n    });\n    return true;\n});\nfunction createSearchPanel(view) {\n    return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n    var _a;\n    let sel = state.selection.main;\n    let selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n    let caseSensitive = (_a = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _a !== void 0 ? _a : state.facet(searchConfigFacet).caseSensitive;\n    return fallback && !selText ? fallback : new SearchQuery({ search: selText.replace(/\\n/g, \"\\\\n\"), caseSensitive });\n}\n/**\nMake sure the search panel is open and focused.\n*/\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel) {\n        let panel = getPanel(view, createSearchPanel);\n        if (!panel)\n            return false;\n        let searchInput = panel.dom.querySelector(\"[name=search]\");\n        if (searchInput != view.root.activeElement) {\n            let query = defaultQuery(view.state, state.query.spec);\n            if (query.valid)\n                view.dispatch({ effects: setSearchQuery.of(query) });\n            searchInput.focus();\n            searchInput.select();\n        }\n    }\n    else {\n        view.dispatch({ effects: [\n                togglePanel.of(true),\n                state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : StateEffect.appendConfig.of(searchExtensions)\n            ] });\n    }\n    return true;\n};\n/**\nClose the search panel.\n*/\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches },\n    { key: \"Alt-g\", run: gotoLine },\n    { key: \"Mod-d\", run: selectNextOccurrence, preventDefault: true },\n];\nclass SearchPanel {\n    constructor(view) {\n        this.view = view;\n        let query = this.query = view.state.field(searchState).query.spec;\n        this.commit = this.commit.bind(this);\n        this.searchField = elt(\"input\", {\n            value: query.search,\n            placeholder: phrase(view, \"Find\"),\n            \"aria-label\": phrase(view, \"Find\"),\n            class: \"cm-textfield\",\n            name: \"search\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.replaceField = elt(\"input\", {\n            value: query.replace,\n            placeholder: phrase(view, \"Replace\"),\n            \"aria-label\": phrase(view, \"Replace\"),\n            class: \"cm-textfield\",\n            name: \"replace\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.caseField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"case\",\n            checked: query.caseSensitive,\n            onchange: this.commit\n        });\n        this.reField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"re\",\n            checked: query.regexp,\n            onchange: this.commit\n        });\n        function button(name, onclick, content) {\n            return elt(\"button\", { class: \"cm-button\", name, onclick, type: \"button\" }, content);\n        }\n        this.dom = elt(\"div\", { onkeydown: (e) => this.keydown(e), class: \"cm-search\" }, [\n            this.searchField,\n            button(\"next\", () => findNext(view), [phrase(view, \"next\")]),\n            button(\"prev\", () => findPrevious(view), [phrase(view, \"previous\")]),\n            button(\"select\", () => selectMatches(view), [phrase(view, \"all\")]),\n            elt(\"label\", null, [this.caseField, phrase(view, \"match case\")]),\n            elt(\"label\", null, [this.reField, phrase(view, \"regexp\")]),\n            ...view.state.readOnly ? [] : [\n                elt(\"br\"),\n                this.replaceField,\n                button(\"replace\", () => replaceNext(view), [phrase(view, \"replace\")]),\n                button(\"replaceAll\", () => replaceAll(view), [phrase(view, \"replace all\")]),\n                elt(\"button\", {\n                    name: \"close\",\n                    onclick: () => closeSearchPanel(view),\n                    \"aria-label\": phrase(view, \"close\"),\n                    type: \"button\"\n                }, [\"×\"])\n            ]\n        ]);\n    }\n    commit() {\n        let query = new SearchQuery({\n            search: this.searchField.value,\n            caseSensitive: this.caseField.checked,\n            regexp: this.reField.checked,\n            replace: this.replaceField.value\n        });\n        if (!query.eq(this.query)) {\n            this.query = query;\n            this.view.dispatch({ effects: setSearchQuery.of(query) });\n        }\n    }\n    keydown(e) {\n        if (runScopeHandlers(this.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == this.searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(this.view);\n        }\n        else if (e.keyCode == 13 && e.target == this.replaceField) {\n            e.preventDefault();\n            replaceNext(this.view);\n        }\n    }\n    update(update) {\n        for (let tr of update.transactions)\n            for (let effect of tr.effects) {\n                if (effect.is(setSearchQuery) && !effect.value.eq(this.query))\n                    this.setQuery(effect.value);\n            }\n    }\n    setQuery(query) {\n        this.query = query;\n        this.searchField.value = query.search;\n        this.replaceField.value = query.replace;\n        this.caseField.checked = query.caseSensitive;\n        this.reField.checked = query.regexp;\n    }\n    mount() {\n        this.searchField.select();\n    }\n    get pos() { return 80; }\n    get top() { return this.view.state.facet(searchConfigFacet).top; }\n}\nfunction phrase(view, phrase) { return view.state.phrase(phrase); }\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view, { from, to }) {\n    let lineStart = view.state.doc.lineAt(from).from, lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(lineStart, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != lineStart) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    return EditorView.announce.of(`${view.state.phrase(\"current match\")}. ${text} ${view.state.phrase(\"on line\")} ${view.state.doc.lineAt(from).number}`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button, & label\": {\n            margin: \".2em .6em .2em 0\"\n        },\n        \"& input[type=checkbox]\": {\n            marginRight: \".2em\"\n        },\n        \"& label\": {\n            fontSize: \"80%\",\n            whiteSpace: \"pre\"\n        }\n    },\n    \"&light .cm-searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"&dark .cm-searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"&light .cm-searchMatch-selected\": { backgroundColor: \"#ff6a0054\" },\n    \"&dark .cm-searchMatch-selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    /*@__PURE__*/Prec.lowest(searchHighlighter),\n    baseTheme\n];\n\nexport { RegExpCursor, SearchCursor, SearchQuery, closeSearchPanel, findNext, findPrevious, getSearchQuery, gotoLine, highlightSelectionMatches, openSearchPanel, replaceAll, replaceNext, searchConfig, searchKeymap, selectMatches, selectNextOccurrence, selectSelectionMatches, setSearchQuery };\n","import { Annotation, Facet, combineConfig, StateEffect, StateField, Prec, EditorSelection, Text } from '@codemirror/state';\nimport { Direction, logException, EditorView, ViewPlugin, Decoration, WidgetType, keymap } from '@codemirror/view';\nimport { showTooltip, getTooltip } from '@codemirror/tooltip';\nimport { syntaxTree, indentUnit } from '@codemirror/language';\nimport { codePointAt, codePointSize, fromCodePoint } from '@codemirror/text';\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nclass CompletionContext {\n    /**\n    Create a new completion context. (Mostly useful for testing\n    completion sources—in the editor, the extension will create\n    these for you.)\n    */\n    constructor(\n    /**\n    The editor state that the completion happens in.\n    */\n    state, \n    /**\n    The position at which the completion is happening.\n    */\n    pos, \n    /**\n    Indicates whether completion was activated explicitly, or\n    implicitly by typing. The usual way to respond to this is to\n    only return completions when either there is part of a\n    completable entity before the cursor, or `explicit` is true.\n    */\n    explicit) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        /**\n        @internal\n        */\n        this.abortListeners = [];\n    }\n    /**\n    Get the extent, content, and (if there is a token) type of the\n    token before `this.pos`.\n    */\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolveInner(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.text.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n    get aborted() { return this.abortListeners == null; }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    */\n    addEventListener(type, listener) {\n        if (type == \"abort\" && this.abortListeners)\n            this.abortListeners.push(listener);\n    }\n}\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [span, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, span } : null;\n    };\n}\n/**\nWrap the given completion source so that it will only fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent)\n            if (nodes.indexOf(pos.name) > -1)\n                return source(context);\n        return null;\n    };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent)\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n        return source(context);\n    };\n}\nclass Option {\n    constructor(completion, source, match) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n    }\n}\nfunction cur(state) { return state.selection.main.head; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nconst pickedCompletion = /*@__PURE__*/Annotation.define();\nfunction applyCompletion(view, option) {\n    let apply = option.completion.apply || option.completion.label;\n    let result = option.source;\n    if (typeof apply == \"string\") {\n        view.dispatch({\n            changes: { from: result.from, to: result.to, insert: apply },\n            selection: { anchor: result.from + apply.length },\n            userEvent: \"input.complete\",\n            annotations: pickedCompletion.of(option.completion)\n        });\n    }\n    else {\n        apply(view, option.completion, result.from, result.to);\n    }\n}\nconst SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n    if (!Array.isArray(source))\n        return source;\n    let known = SourceCache.get(source);\n    if (!known)\n        SourceCache.set(source, known = completeFromList(source));\n    return known;\n}\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return null for no match, and otherwise an array that starts\n    // with the match score, followed by any number of `from, to` pairs\n    // indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return [0];\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0);\n            return first == chars[0] ? [0, 0, codePointSize(first)]\n                : first == folded[0] ? [-200 /* CaseFold */, 0, codePointSize(first)] : null;\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return [0, 0, this.pattern.length];\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        // This tracks the extent of the precise (non-folded, not\n        // necessarily adjacent) match\n        let preciseTo = 0;\n        // Tracks whether there is a match that hits only characters that\n        // appear to be starting words. `byWordFolded` is set to true when\n        // a case folded character is encountered in such a match\n        let byWordTo = 0, byWordFolded = false;\n        // If we've found a partial adjacent match, these track its state\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        let hasLower = /[a-z]/.test(word), wordAdjacent = true;\n        // Go over the option's text, scanning for the various kinds of matches\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i + 1;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Lower */ : next >= 65 && next <= 90 ? 1 /* Upper */ : 0 /* NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Upper */ : ch != ch.toUpperCase() ? 2 /* Lower */ : 0 /* NonWord */);\n            if (!i || type == 1 /* Upper */ && hasLower || prevType == 0 /* NonWord */ && type != 0 /* NonWord */) {\n                if (chars[byWordTo] == next || (folded[byWordTo] == next && (byWordFolded = true)))\n                    byWord[byWordTo++] = i;\n                else if (byWord.length)\n                    wordAdjacent = false;\n            }\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0 && wordAdjacent)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return [-200 /* CaseFold */ - word.length, 0, adjacentEnd];\n        if (direct > -1)\n            return [-700 /* NotStart */ - word.length, direct, direct + this.pattern.length];\n        if (adjacentTo == len)\n            return [-200 /* CaseFold */ + -700 /* NotStart */ - word.length, adjacentStart, adjacentEnd];\n        if (byWordTo == len)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0) + -700 /* NotStart */ +\n                (wordAdjacent ? 0 : -1100 /* Gap */), byWord, word);\n        return chars.length == 2 ? null : this.result((any[0] ? -700 /* NotStart */ : 0) + -200 /* CaseFold */ + -1100 /* Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [score - word.length], i = 1;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i > 1 && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return result;\n    }\n}\n\nconst completionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            override: null,\n            maxRenderedOptions: 100,\n            defaultKeymap: true,\n            optionClass: () => \"\",\n            aboveCursor: false,\n            icons: true,\n            addToOptions: []\n        }, {\n            defaultKeymap: (a, b) => a && b,\n            icons: (a, b) => a && b,\n            optionClass: (a, b) => c => joinClass(a(c), b(c)),\n            addToOptions: (a, b) => a.concat(b)\n        });\n    }\n});\nfunction joinClass(a, b) {\n    return a ? b ? a + \" \" + b : a : b;\n}\n\nfunction optionContent(config) {\n    let content = config.addToOptions.slice();\n    if (config.icons)\n        content.push({\n            render(completion) {\n                let icon = document.createElement(\"div\");\n                icon.classList.add(\"cm-completionIcon\");\n                if (completion.type)\n                    icon.classList.add(...completion.type.split(/\\s+/g).map(cls => \"cm-completionIcon-\" + cls));\n                icon.setAttribute(\"aria-hidden\", \"true\");\n                return icon;\n            },\n            position: 20\n        });\n    content.push({\n        render(completion, _s, match) {\n            let labelElt = document.createElement(\"span\");\n            labelElt.className = \"cm-completionLabel\";\n            let { label } = completion, off = 0;\n            for (let j = 1; j < match.length;) {\n                let from = match[j++], to = match[j++];\n                if (from > off)\n                    labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n                let span = labelElt.appendChild(document.createElement(\"span\"));\n                span.appendChild(document.createTextNode(label.slice(from, to)));\n                span.className = \"cm-completionMatchedText\";\n                off = to;\n            }\n            if (off < label.length)\n                labelElt.appendChild(document.createTextNode(label.slice(off)));\n            return labelElt;\n        },\n        position: 50\n    }, {\n        render(completion) {\n            if (!completion.detail)\n                return null;\n            let detailElt = document.createElement(\"span\");\n            detailElt.className = \"cm-completionDetail\";\n            detailElt.textContent = completion.detail;\n            return detailElt;\n        },\n        position: 80\n    });\n    return content.sort((a, b) => a.position - b.position).map(a => a.render);\n}\nfunction createInfoDialog(option, view) {\n    let dom = document.createElement(\"div\");\n    dom.className = \"cm-tooltip cm-completionInfo\";\n    let { info } = option.completion;\n    if (typeof info == \"string\") {\n        dom.textContent = info;\n    }\n    else {\n        let content = info(option.completion);\n        if (content.then)\n            content.then(node => dom.appendChild(node), e => logException(view.state, e, \"completion info\"));\n        else\n            dom.appendChild(content);\n    }\n    return dom;\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField) {\n        this.view = view;\n        this.stateField = stateField;\n        this.info = null;\n        this.placeInfo = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.positionInfo(pos),\n            key: this\n        };\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.optionContent = optionContent(config);\n        this.optionClass = config.optionClass;\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-tooltip-autocomplete\";\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.list = this.dom.appendChild(this.createListBox(options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfo);\n        });\n    }\n    mount() { this.updateSel(); }\n    update(update) {\n        if (update.state.field(this.stateField) != update.startState.field(this.stateField))\n            this.updateSel();\n    }\n    positioned() {\n        if (this.info)\n            this.view.requestMeasure(this.placeInfo);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.list.remove();\n            this.list = this.dom.appendChild(this.createListBox(open.options, cState.id, this.range));\n            this.list.addEventListener(\"scroll\", () => {\n                if (this.info)\n                    this.view.requestMeasure(this.placeInfo);\n            });\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            if (this.info) {\n                this.info.remove();\n                this.info = null;\n            }\n            let option = open.options[open.selected];\n            if (option.completion.info) {\n                this.info = this.dom.appendChild(createInfoDialog(option, this.view));\n                this.view.requestMeasure(this.placeInfo);\n            }\n        }\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel || !this.info)\n            return null;\n        let listRect = this.dom.getBoundingClientRect();\n        let infoRect = this.info.getBoundingClientRect();\n        let selRect = sel.getBoundingClientRect();\n        if (selRect.top > Math.min(innerHeight, listRect.bottom) - 10 || selRect.bottom < Math.max(0, listRect.top) + 10)\n            return null;\n        let top = Math.max(0, Math.min(selRect.top, innerHeight - infoRect.height)) - listRect.top;\n        let left = this.view.textDirection == Direction.RTL;\n        let spaceLeft = listRect.left, spaceRight = innerWidth - listRect.right;\n        if (left && spaceLeft < Math.min(infoRect.width, spaceRight))\n            left = false;\n        else if (!left && spaceRight < Math.min(infoRect.width, spaceLeft))\n            left = true;\n        return { top, left };\n    }\n    positionInfo(pos) {\n        if (this.info) {\n            this.info.style.top = (pos ? pos.top : -1e6) + \"px\";\n            if (pos) {\n                this.info.classList.toggle(\"cm-completionInfo-left\", pos.left);\n                this.info.classList.toggle(\"cm-completionInfo-right\", !pos.left);\n            }\n        }\n    }\n    createListBox(options, id, range) {\n        const ul = document.createElement(\"ul\");\n        ul.id = id;\n        ul.setAttribute(\"role\", \"listbox\");\n        for (let i = range.from; i < range.to; i++) {\n            let { completion, match } = options[i];\n            const li = ul.appendChild(document.createElement(\"li\"));\n            li.id = id + \"-\" + i;\n            li.setAttribute(\"role\", \"option\");\n            let cls = this.optionClass(completion);\n            if (cls)\n                li.className = cls;\n            for (let source of this.optionContent) {\n                let node = source(completion, this.view.state, match);\n                if (node)\n                    li.appendChild(node);\n            }\n        }\n        if (range.from)\n            ul.classList.add(\"cm-completionListIncompleteTop\");\n        if (range.to < options.length)\n            ul.classList.add(\"cm-completionListIncompleteBottom\");\n        return ul;\n    }\n}\n// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n    return (view) => new CompletionTooltip(view, stateField);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    if (self.top < parent.top)\n        container.scrollTop -= parent.top - self.top;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += self.bottom - parent.bottom;\n}\n\nconst MaxOptions = 300;\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n    return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) +\n        (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n    let options = [], i = 0;\n    for (let a of active)\n        if (a.hasResult()) {\n            if (a.result.filter === false) {\n                for (let option of a.result.options)\n                    options.push(new Option(option, a, [1e9 - i++]));\n            }\n            else {\n                let matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)), match;\n                for (let option of a.result.options)\n                    if (match = matcher.match(option.label)) {\n                        if (option.boost != null)\n                            match[0] += option.boost;\n                        options.push(new Option(option, a, match));\n                    }\n            }\n        }\n    options.sort(cmpOption);\n    let result = [], prev = null;\n    for (let opt of options.sort(cmpOption)) {\n        if (result.length == MaxOptions)\n            break;\n        if (!prev || prev.label != opt.completion.label || prev.detail != opt.completion.detail ||\n            prev.type != opt.completion.type || prev.apply != opt.completion.apply)\n            result.push(opt);\n        else if (score(opt.completion) > score(prev))\n            result[result.length - 1] = opt;\n        prev = opt.completion;\n    }\n    return result;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected);\n    }\n    static build(active, state, id, prev, conf) {\n        let options = sortOptions(active, state);\n        if (!options.length)\n            return null;\n        let selected = 0;\n        if (prev && prev.selected) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length && !selected; i++) {\n                if (options[i].completion == selectedValue)\n                    selected = i;\n            }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), {\n            pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n            create: completionTooltip(completionState),\n            above: conf.aboveCursor,\n        }, prev ? prev.timestamp : Date.now(), selected);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: changes.mapPos(this.tooltip.pos) }), this.timestamp, this.selected);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override ||\n            state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) ||\n                new ActiveSource(source, this.active.some(a => a.state != 0 /* Inactive */) ? 1 /* Pending */ : 0 /* Inactive */);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active) ? CompletionDialog.build(active, state, this.id, this.open, conf)\n            : this.open && tr.docChanged ? this.open.map(tr.changes) : this.open;\n        if (!open && active.every(a => a.state != 1 /* Pending */) && active.some(a => a.hasResult()))\n            active = active.map(a => a.hasResult() ? new ActiveSource(a.source, 0 /* Inactive */) : a);\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : null; }\n    get attrs() { return this.open ? this.open.attrs : baseAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult)\n            iA++;\n        while (iB < b.length && !b[iB].hasResult)\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nconst baseAttrs = {\n    \"aria-autocomplete\": \"list\",\n    \"aria-expanded\": \"false\"\n};\nfunction makeAttrs(id, selected) {\n    return {\n        \"aria-autocomplete\": \"list\",\n        \"aria-expanded\": \"true\",\n        \"aria-activedescendant\": id + \"-\" + selected,\n        \"aria-controls\": id\n    };\n}\nconst none = [];\nfunction cmpOption(a, b) {\n    let dScore = b.match[0] - a.match[0];\n    if (dScore)\n        return dScore;\n    return a.completion.label.localeCompare(b.completion.label);\n}\nfunction getUserEvent(tr) {\n    return tr.isUserEvent(\"input.type\") ? \"input\" : tr.isUserEvent(\"delete.backward\") ? \"delete\" : null;\n}\nclass ActiveSource {\n    constructor(source, state, explicitPos = -1) {\n        this.source = source;\n        this.state = state;\n        this.explicitPos = explicitPos;\n    }\n    hasResult() { return false; }\n    update(tr, conf) {\n        let event = getUserEvent(tr), value = this;\n        if (event)\n            value = value.handleUserEvent(tr, event, conf);\n        else if (tr.docChanged)\n            value = value.handleChange(tr);\n        else if (tr.selection && value.state != 0 /* Inactive */)\n            value = new ActiveSource(value.source, 0 /* Inactive */);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* Pending */, effect.value ? cur(tr.state) : -1);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* Inactive */);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    handleUserEvent(tr, type, conf) {\n        return type == \"delete\" || !conf.activateOnTyping ? this.map(tr.changes) : new ActiveSource(this.source, 1 /* Pending */);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* Inactive */) : this.map(tr.changes);\n    }\n    map(changes) {\n        return changes.empty || this.explicitPos < 0 ? this : new ActiveSource(this.source, this.state, changes.mapPos(this.explicitPos));\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicitPos, result, from, to, span) {\n        super(source, 2 /* Result */, explicitPos);\n        this.result = result;\n        this.from = from;\n        this.to = to;\n        this.span = span;\n    }\n    hasResult() { return true; }\n    handleUserEvent(tr, type, conf) {\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if ((this.explicitPos > -1 ? pos < from : pos <= from) || pos > to)\n            return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* Pending */ : 0 /* Inactive */);\n        let explicitPos = this.explicitPos < 0 ? -1 : tr.changes.mapPos(this.explicitPos);\n        if (this.span && (from == to || this.span.test(tr.state.sliceDoc(from, to))))\n            return new ActiveResult(this.source, explicitPos, this.result, from, to, this.span);\n        return new ActiveSource(this.source, 1 /* Pending */, explicitPos);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(this.from, this.to) ? new ActiveSource(this.source, 0 /* Inactive */) : this.map(tr.changes);\n    }\n    map(mapping) {\n        return mapping.empty ? this :\n            new ActiveResult(this.source, this.explicitPos < 0 ? -1 : mapping.mapPos(this.explicitPos), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1), this.span);\n    }\n}\nconst startCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst closeCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst setActiveEffect = /*@__PURE__*/StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.map(mapping)); }\n});\nconst setSelectedEffect = /*@__PURE__*/StateEffect.define();\nconst completionState = /*@__PURE__*/StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: f => [\n        showTooltip.from(f, val => val.tooltip),\n        EditorView.contentAttributes.from(f, state => state.attrs)\n    ]\n});\n\nconst CompletionInteractMargin = 75;\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = getTooltip(view, cState.open.tooltip)))\n            step = Math.max(2, Math.floor(tooltip.dom.offsetHeight /\n                tooltip.dom.querySelector(\"li\").offsetHeight) - 1);\n        let selected = cState.open.selected + step * (forward ? 1 : -1), { length } = cState.open.options;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/**\nAccept the current completion.\n*/\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (view.state.readOnly || !cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n        return false;\n    applyCompletion(view, cState.open.options[cState.open.selected]);\n    return true;\n};\n/**\nExplicitly start autocompletion.\n*/\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/**\nClose the currently active completion.\n*/\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(active, context) {\n        this.active = active;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst DebounceTime = 50, MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.composing = 0 /* None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.state == 1 /* Pending */)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        if (!update.selectionSet && !update.docChanged && update.startState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            return (tr.selection || tr.docChanged) && !getUserEvent(tr);\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && query.time - Date.now() > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        this.debounceUpdate = cState.active.some(a => a.state == 1 /* Pending */ && !this.running.some(q => q.active.source == a.source))\n            ? setTimeout(() => this.startUpdate(), DebounceTime) : -1;\n        if (this.composing != 0 /* None */)\n            for (let tr of update.transactions) {\n                if (getUserEvent(tr) == \"input\")\n                    this.composing = 2 /* Changed */;\n                else if (this.composing == 2 /* Changed */ && tr.selection)\n                    this.composing = 3 /* ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.state == 1 /* Pending */ && !this.running.some(r => r.active.source == active.source))\n                this.startQuery(active);\n        }\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicitPos == pos);\n        let pending = new RunningQuery(active, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let active = new ActiveResult(query.active.source, query.active.explicitPos, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state), query.done.span && query.done.filter !== false ? ensureAnchor(query.done.span, true) : null);\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = this.view.state.field(completionState).active.find(a => a.source == query.active.source);\n            if (current && current.state == 1 /* Pending */) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.active.source, 0 /* Inactive */);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (active.state != 1 /* Pending */)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        compositionstart() {\n            this.composing = 1 /* Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* ChangedAndMoved */) {\n                // Safari fires compositionend events synchronously, possibly\n                // from inside an update, so dispatch asynchronously to avoid reentrancy\n                setTimeout(() => this.view.dispatch({ effects: startCompletionEffect.of(false) }), 20);\n            }\n            this.composing = 0 /* None */;\n        }\n    }\n});\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip.cm-tooltip-autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden auto\",\n            maxWidth_fallback: \"700px\",\n            maxWidth: \"min(700px, 95vw)\",\n            minWidth: \"250px\",\n            maxHeight: \"10em\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li\": {\n                overflowX: \"hidden\",\n                textOverflow: \"ellipsis\",\n                cursor: \"pointer\",\n                padding: \"1px 3px\",\n                lineHeight: 1.2\n            },\n        }\n    },\n    \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#17c\",\n        color: \"white\",\n    },\n    \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#347\",\n        color: \"white\",\n    },\n    \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \".cm-tooltip.cm-completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: \"300px\",\n    },\n    \".cm-completionInfo.cm-completionInfo-left\": { right: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-right\": { left: \"100%\" },\n    \"&light .cm-snippetField\": { backgroundColor: \"#00000022\" },\n    \"&dark .cm-snippetField\": { backgroundColor: \"#ffffff22\" },\n    \".cm-snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    \".cm-completionMatchedText\": {\n        textDecoration: \"underline\"\n    },\n    \".cm-completionDetail\": {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    \".cm-completionIcon\": {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\"\n    },\n    \".cm-completionIcon-function, .cm-completionIcon-method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \".cm-completionIcon-class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \".cm-completionIcon-interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \".cm-completionIcon-variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \".cm-completionIcon-constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \".cm-completionIcon-type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \".cm-completionIcon-enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \".cm-completionIcon-property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \".cm-completionIcon-keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \".cm-completionIcon-namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \".cm-completionIcon-text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        return new FieldRange(this.field, changes.mapPos(this.from, -1), changes.mapPos(this.to, 1));\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.text)[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, name = m[2] || m[3] || \"\", found = -1;\n                for (let i = 0; i < fields.length; i++) {\n                    if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name });\n                    found = i;\n                    for (let pos of positions)\n                        if (pos.field >= found)\n                            pos.field++;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n            }\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = /*@__PURE__*/Decoration.widget({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = \"cm-snippetFieldPosition\";\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = /*@__PURE__*/Decoration.mark({ class: \"cm-snippetField\" });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        return new ActiveSnippet(this.ranges.map(r => r.map(changes)), this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = /*@__PURE__*/StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = /*@__PURE__*/StateEffect.define();\nconst snippetState = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: f => EditorView.decorations.from(f, val => val ? val.deco : Decoration.none)\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/**\nConvert a snippet template to a function that can apply it.\nSnippets are written using syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n*/\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, _completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let spec = { changes: { from, to, insert: Text.of(text) } };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.length > 1) {\n            let active = new ActiveSnippet(ranges, 0);\n            let effects = spec.effects = [setActive.of(active)];\n            if (editor.state.field(snippetState, false) === undefined)\n                effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n        }));\n        return true;\n    };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nconst nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nconst prevSnippetField = /*@__PURE__*/moveField(-1);\nconst defaultSnippetKeymap = [\n    { key: \"Tab\", run: nextSnippetField, shift: prevSnippetField },\n    { key: \"Escape\", run: clearSnippet }\n];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nconst snippetKeymap = /*@__PURE__*/Facet.define({\n    combine(maps) { return maps.length ? maps[0] : defaultSnippetKeymap; }\n});\nconst addSnippetKeymap = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.compute([snippetKeymap], state => state.facet(snippetKeymap)));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n    return Object.assign(Object.assign({}, completion), { apply: snippet(template) });\n}\nconst snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({\n    mousedown(event, view) {\n        let active = view.state.field(snippetState, false), pos;\n        if (!active || (pos = view.posAtCoords({ x: event.clientX, y: event.clientY })) == null)\n            return false;\n        let match = active.ranges.find(r => r.from <= pos && r.to >= pos);\n        if (!match || match.field == active.active)\n            return false;\n        view.dispatch({\n            selection: fieldSelection(active.ranges, match.field),\n            effects: setActive.of(active.ranges.some(r => r.field > match.field) ? new ActiveSnippet(active.ranges, match.field) : null)\n        });\n        return true;\n    }\n});\n\nfunction wordRE(wordChars) {\n    let escaped = wordChars.replace(/[\\\\[.+*?(){|^$]/g, \"\\\\$&\");\n    try {\n        return new RegExp(`[\\\\p{Alphabetic}\\\\p{Number}_${escaped}]+`, \"ug\");\n    }\n    catch (_a) {\n        return new RegExp(`[\\w${escaped}]`, \"g\");\n    }\n}\nfunction mapRE(re, f) {\n    return new RegExp(f(re.source), re.unicode ? \"u\" : \"\");\n}\nconst wordCaches = /*@__PURE__*/Object.create(null);\nfunction wordCache(wordChars) {\n    return wordCaches[wordChars] || (wordCaches[wordChars] = new WeakMap);\n}\nfunction storeWords(doc, wordRE, result, seen, ignoreAt) {\n    for (let lines = doc.iterLines(), pos = 0; !lines.next().done;) {\n        let { value } = lines, m;\n        wordRE.lastIndex = 0;\n        while (m = wordRE.exec(value)) {\n            if (!seen[m[0]] && pos + m.index != ignoreAt) {\n                result.push({ type: \"text\", label: m[0] });\n                seen[m[0]] = true;\n                if (result.length >= 2000 /* MaxList */)\n                    return;\n            }\n        }\n        pos += value.length + 1;\n    }\n}\nfunction collectWords(doc, cache, wordRE, to, ignoreAt) {\n    let big = doc.length >= 1000 /* MinCacheLen */;\n    let cached = big && cache.get(doc);\n    if (cached)\n        return cached;\n    let result = [], seen = Object.create(null);\n    if (doc.children) {\n        let pos = 0;\n        for (let ch of doc.children) {\n            if (ch.length >= 1000 /* MinCacheLen */) {\n                for (let c of collectWords(ch, cache, wordRE, to - pos, ignoreAt - pos)) {\n                    if (!seen[c.label]) {\n                        seen[c.label] = true;\n                        result.push(c);\n                    }\n                }\n            }\n            else {\n                storeWords(ch, wordRE, result, seen, ignoreAt - pos);\n            }\n            pos += ch.length + 1;\n        }\n    }\n    else {\n        storeWords(doc, wordRE, result, seen, ignoreAt);\n    }\n    if (big && result.length < 2000 /* MaxList */)\n        cache.set(doc, result);\n    return result;\n}\n/**\nA completion source that will scan the document for words (using a\n[character categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer)), and\nreturn those as completions.\n*/\nconst completeAnyWord = context => {\n    let wordChars = context.state.languageDataAt(\"wordChars\", context.pos).join(\"\");\n    let re = wordRE(wordChars);\n    let token = context.matchBefore(mapRE(re, s => s + \"$\"));\n    if (!token && !context.explicit)\n        return null;\n    let from = token ? token.from : context.pos;\n    let options = collectWords(context.state.doc, wordCache(wordChars), re, 50000 /* Range */, from);\n    return { from, options, span: mapRE(re, s => \"^\" + s) };\n};\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion(config = {}) {\n    return [\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        completionKeymapExt,\n        baseTheme\n    ];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space: [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nconst completionKeymap = [\n    { key: \"Ctrl-Space\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion },\n    { key: \"ArrowDown\", run: /*@__PURE__*/moveCompletionSelection(true) },\n    { key: \"ArrowUp\", run: /*@__PURE__*/moveCompletionSelection(false) },\n    { key: \"PageDown\", run: /*@__PURE__*/moveCompletionSelection(true, \"page\") },\n    { key: \"PageUp\", run: /*@__PURE__*/moveCompletionSelection(false, \"page\") },\n    { key: \"Enter\", run: acceptCompletion }\n];\nconst completionKeymapExt = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig], state => state.facet(completionConfig).defaultKeymap ? [completionKeymap] : []));\n/**\nGet the current completion status. When completions are available,\nthis will return `\"active\"`. When completions are pending (in the\nprocess of being queried), this returns `\"pending\"`. Otherwise, it\nreturns `null`.\n*/\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.state == 1 /* Pending */) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* Inactive */) ? \"active\" : null;\n}\n/**\nReturns the available completions as an array.\n*/\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open ? open.options.map(o => o.completion) : [];\n}\n/**\nReturn the currently selected completion, if any.\n*/\nfunction selectedCompletion(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open ? open.options[open.selected].completion : null;\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, clearSnippet, closeCompletion, completeAnyWord, completeFromList, completionKeymap, completionStatus, currentCompletions, ifIn, ifNotIn, moveCompletionSelection, nextSnippetField, pickedCompletion, prevSnippetField, selectedCompletion, snippet, snippetCompletion, snippetKeymap, startCompletion };\n","import { EditorSelection } from '@codemirror/state';\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let config = getConfig(target.state);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockComment(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        let tr = f(option, state.selection.ranges, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#comment.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* Toggle */);\n/**\nComment the current selection using line comments.\n*/\nconst lineComment = /*@__PURE__*/command(changeLineComment, 1 /* Comment */);\n/**\nUncomment the current selection using line comments.\n*/\nconst lineUncomment = /*@__PURE__*/command(changeLineComment, 2 /* Uncomment */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#comment.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* Toggle */);\n/**\nComment the current selection using block comments.\n*/\nconst blockComment = /*@__PURE__*/command(changeBlockComment, 1 /* Comment */);\n/**\nUncomment the current selection using block comments.\n*/\nconst blockUncomment = /*@__PURE__*/command(changeBlockComment, 2 /* Uncomment */);\n/**\nDefault key bindings for this package.\n\n - Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#comment.toggleComment).\n - Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#comment.toggleBlockComment).\n*/\nconst commentKeymap = [\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment }\n];\nfunction getConfig(state, pos = state.selection.main.head) {\n    let data = state.languageDataAt(\"commentTokens\", pos);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, ranges, state) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* Uncomment */ && !comments.every(c => c)) {\n        let index = 0;\n        return state.changeByRange(range => {\n            let { open, close } = tokens[index++];\n            if (comments[index])\n                return { range };\n            let shift = open.length + 1;\n            return {\n                changes: [{ from: range.from, insert: open + \" \" }, { from: range.to, insert: \" \" + close }],\n                range: EditorSelection.range(range.anchor + shift, range.head + shift)\n            };\n        });\n    }\n    else if (option != 1 /* Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, ranges, state) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let token = getConfig(state, pos).line;\n                if (!token)\n                    continue;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nexport { blockComment, blockUncomment, commentKeymap, lineComment, lineUncomment, toggleBlockComment, toggleComment, toggleLineComment };\n","import { EditorSelection } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { findColumn, countColumn } from '@codemirror/text';\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            let start = findColumn(line.text, startCol, state.tabSize, true);\n            if (start > -1) {\n                let end = findColumn(line.text, endCol, state.tabSize);\n                ranges.push(EditorSelection.range(line.from + start, line.from + end));\n            }\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : countColumn(line.text, view.state.tabSize, offset - line.from);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.startState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return EditorSelection.create(ranges);\n        }\n    };\n}\n/**\nCreate an extension that enables rectangular selections. By\ndefault, it will react to left mouse drag with the Alt key held\ndown. When such a selection occurs, the text within the rectangle\nthat was dragged over will be selected, as one selection\n[range](https://codemirror.net/6/docs/ref/#state.SelectionRange) per line.\n*/\nfunction rectangularSelection(options) {\n    let filter = (options === null || options === void 0 ? void 0 : options.eventFilter) || (e => e.altKey && e.button == 0);\n    return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\n\nexport { rectangularSelection };\n","import { NodeProp, NodeType } from '@lezer/common';\nimport { StyleModule } from 'style-mod';\nimport { EditorView, ViewPlugin, Decoration } from '@codemirror/view';\nimport { Facet, Prec } from '@codemirror/state';\nimport { syntaxTree } from '@codemirror/language';\nimport { RangeSetBuilder } from '@codemirror/rangeset';\n\nlet nextTagID = 0;\n/**\nHighlighting tags are markers that denote a highlighting category.\nThey are [associated](https://codemirror.net/6/docs/ref/#highlight.styleTags) with parts of a syntax\ntree by a language mode, and then mapped to an actual CSS style by\na [highlight style](https://codemirror.net/6/docs/ref/#highlight.HighlightStyle).\n\nBecause syntax tree node types and highlight styles have to be\nable to talk the same language, CodeMirror uses a mostly _closed_\n[vocabulary](https://codemirror.net/6/docs/ref/#highlight.tags) of syntax tags (as opposed to\ntraditional open string-based systems, which make it hard for\nhighlighting themes to cover all the tokens produced by the\nvarious languages).\n\nIt _is_ possible to [define](https://codemirror.net/6/docs/ref/#highlight.Tag^define) your own\nhighlighting tags for system-internal use (where you control both\nthe language package and the highlighter), but such tags will not\nbe picked up by regular highlighters (though you can derive them\nfrom standard tags to allow highlighters to fall back to those).\n*/\nclass Tag {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The set of tags that match this tag, starting with this one\n    itself, sorted in order of decreasing specificity. @internal\n    */\n    set, \n    /**\n    The base unmodified tag that this one is based on, if it's\n    modified @internal\n    */\n    base, \n    /**\n    The modifiers applied to this.base @internal\n    */\n    modified) {\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /**\n        @internal\n        */\n        this.id = nextTagID++;\n    }\n    /**\n    Define a new tag. If `parent` is given, the tag is treated as a\n    sub-tag of that parent, and [highlight\n    styles](https://codemirror.net/6/docs/ref/#highlight.HighlightStyle) that don't mention this tag\n    will try to fall back to the parent tag (or grandparent tag,\n    etc).\n    */\n    static define(parent) {\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag([], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /**\n    Define a tag _modifier_, which is a function that, given a tag,\n    will return a tag that is a subtag of the original. Applying the\n    same modifier to a twice tag will return the same value (`m1(t1)\n    == m1(t1)`) and applying multiple modifiers will, regardless or\n    order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    \n    When multiple modifiers are applied to a given base tag, each\n    smaller set of modifiers is registered as a parent, so that for\n    example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    `m1(m3(t1)`, and so on.\n    */\n    static defineModifier() {\n        let mod = new Modifier;\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor() {\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = permute(mods);\n        for (let parent of base.set)\n            for (let config of configs)\n                set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction permute(array) {\n    let result = [array];\n    for (let i = 0; i < array.length; i++) {\n        for (let a of permute(array.slice(0, i).concat(array.slice(i + 1))))\n            result.push(a);\n    }\n    return result;\n}\n/**\nThis function is used to add a set of tags to a language syntax\nvia\n[`LRParser.configure`](https://lezer.codemirror.net/docs/ref#lr.LRParser.configure).\n\nThe argument object maps node selectors to [highlighting\ntags](https://codemirror.net/6/docs/ref/#highlight.Tag) or arrays of tags.\n\nNode selectors may hold one or more (space-separated) node paths.\nSuch a path can be a [node\nname](https://lezer.codemirror.net/docs/ref#common.NodeType.name),\nor multiple node names (or `*` wildcards) separated by slash\ncharacters, as in `\"Block/Declaration/VariableName\"`. Such a path\nmatches the final node but only if its direct parent nodes are the\nother nodes mentioned. A `*` in such a path matches any parent,\nbut only a single level—wildcards that match multiple parents\naren't supported, both for efficiency reasons and because Lezer\ntrees make it rather hard to reason about what they would match.)\n\nA path can be ended with `/...` to indicate that the tag assigned\nto the node should also apply to all child nodes, even if they\nmatch their own style (by default, only the innermost style is\nused).\n\nWhen a path ends in `!`, as in `Attribute!`, no further matching\nhappens for the node's child nodes, and the entire node gets the\ngiven style.\n\nIn this notation, node names that contain `/`, `!`, `*`, or `...`\nmust be quoted as JSON strings.\n\nFor example:\n\n```javascript\nparser.withProps(\n  styleTags({\n    // Style Number and BigNumber nodes\n    \"Number BigNumber\": tags.number,\n    // Style Escape nodes whose parent is String\n    \"String/Escape\": tags.escape,\n    // Style anything inside Attributes nodes\n    \"Attributes!\": tags.meta,\n    // Add a style to all content inside Italic nodes\n    \"Italic/...\": tags.emphasis,\n    // Style InvalidString nodes as both `string` and `invalid`\n    \"InvalidString\": [tags.string, tags.invalid],\n    // Style the node named \"/\" as punctuation\n    '\"/\"': tags.punctuation\n  })\n)\n```\n*/\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? null : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = /*@__PURE__*/new NodeProp();\nconst highlightStyle = /*@__PURE__*/Facet.define({\n    combine(stylings) { return stylings.length ? HighlightStyle.combinedMatch(stylings) : null; }\n});\nconst fallbackHighlightStyle = /*@__PURE__*/Facet.define({\n    combine(values) { return values.length ? values[0].match : null; }\n});\nfunction getHighlightStyle(state) {\n    return state.facet(highlightStyle) || state.facet(fallbackHighlightStyle);\n}\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\n/**\nA highlight style associates CSS styles with higlighting\n[tags](https://codemirror.net/6/docs/ref/#highlight.Tag).\n*/\nclass HighlightStyle {\n    constructor(spec, options) {\n        this.map = Object.create(null);\n        let modSpec;\n        function def(spec) {\n            let cls = StyleModule.newName();\n            (modSpec || (modSpec = Object.create(null)))[\".\" + cls] = spec;\n            return cls;\n        }\n        this.all = typeof options.all == \"string\" ? options.all : options.all ? def(options.all) : null;\n        for (let style of spec) {\n            let cls = (style.class || def(Object.assign({}, style, { tag: null }))) +\n                (this.all ? \" \" + this.all : \"\");\n            let tags = style.tag;\n            if (!Array.isArray(tags))\n                this.map[tags.id] = cls;\n            else\n                for (let tag of tags)\n                    this.map[tag.id] = cls;\n        }\n        this.module = modSpec ? new StyleModule(modSpec) : null;\n        this.scope = options.scope || null;\n        this.match = this.match.bind(this);\n        let ext = [treeHighlighter];\n        if (this.module)\n            ext.push(EditorView.styleModule.of(this.module));\n        this.extension = ext.concat(highlightStyle.of(this));\n        this.fallback = ext.concat(fallbackHighlightStyle.of(this));\n    }\n    /**\n    Returns the CSS class associated with the given tag, if any.\n    This method is bound to the instance by the constructor.\n    */\n    match(tag, scope) {\n        if (this.scope && scope != this.scope)\n            return null;\n        for (let t of tag.set) {\n            let match = this.map[t.id];\n            if (match !== undefined) {\n                if (t != tag)\n                    this.map[tag.id] = match;\n                return match;\n            }\n        }\n        return this.map[tag.id] = this.all;\n    }\n    /**\n    Combines an array of highlight styles into a single match\n    function that returns all of the classes assigned by the styles\n    for a given tag.\n    */\n    static combinedMatch(styles) {\n        if (styles.length == 1)\n            return styles[0].match;\n        let cache = styles.some(s => s.scope) ? undefined : Object.create(null);\n        return (tag, scope) => {\n            let cached = cache && cache[tag.id];\n            if (cached !== undefined)\n                return cached;\n            let result = null;\n            for (let style of styles) {\n                let value = style.match(tag, scope);\n                if (value)\n                    result = result ? result + \" \" + value : value;\n            }\n            if (cache)\n                cache[tag.id] = result;\n            return result;\n        };\n    }\n    /**\n    Create a highlighter style that associates the given styles to\n    the given tags. The spec must be objects that hold a style tag\n    or array of tags in their `tag` property, and either a single\n    `class` property providing a static CSS class (for highlighters\n    like [`classHighlightStyle`](https://codemirror.net/6/docs/ref/#highlight.classHighlightStyle)\n    that rely on external styling), or a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style\n    set of CSS properties (which define the styling for those tags).\n    \n    The CSS rules created for a highlighter will be emitted in the\n    order of the spec's properties. That means that for elements that\n    have multiple tags associated with them, styles defined further\n    down in the list will have a higher CSS precedence than styles\n    defined earlier.\n    */\n    static define(specs, options) {\n        return new HighlightStyle(specs, options || {});\n    }\n    /**\n    Returns the CSS classes (if any) that the highlight styles\n    active in the given state would assign to the given a style\n    [tag](https://codemirror.net/6/docs/ref/#highlight.Tag) and (optional) language\n    [scope](https://codemirror.net/6/docs/ref/#highlight.HighlightStyle^define^options.scope).\n    */\n    static get(state, tag, scope) {\n        let style = getHighlightStyle(state);\n        return style && style(tag, scope || NodeType.none);\n    }\n}\n/**\nRun the tree highlighter over the given tree.\n*/\nfunction highlightTree(tree, \n/**\nGet the CSS classes used to style a given [tag](https://codemirror.net/6/docs/ref/#highlight.Tag),\nor `null` if it isn't styled. (You'll often want to pass a\nhighlight style's [`match`](https://codemirror.net/6/docs/ref/#highlight.HighlightStyle.match)\nmethod here.)\n*/\ngetStyle, \n/**\nAssign styling to a region of the text. Will be called, in order\nof position, for any ranges where more than zero classes apply.\n`classes` is a space separated string of CSS classes.\n*/\nputStyle, \n/**\nThe start of the range to highlight.\n*/\nfrom = 0, \n/**\nThe end of the range.\n*/\nto = tree.length) {\n    highlightTreeRange(tree, from, to, getStyle, putStyle);\n}\nclass TreeHighlighter {\n    constructor(view) {\n        this.markCache = Object.create(null);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.buildDeco(view, getHighlightStyle(view.state));\n    }\n    update(update) {\n        let tree = syntaxTree(update.state), style = getHighlightStyle(update.state);\n        let styleChange = style != update.startState.facet(highlightStyle);\n        if (tree.length < update.view.viewport.to && !styleChange && tree.type == this.tree.type) {\n            this.decorations = this.decorations.map(update.changes);\n        }\n        else if (tree != this.tree || update.viewportChanged || styleChange) {\n            this.tree = tree;\n            this.decorations = this.buildDeco(update.view, style);\n        }\n    }\n    buildDeco(view, match) {\n        if (!match || !this.tree.length)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        for (let { from, to } of view.visibleRanges) {\n            highlightTreeRange(this.tree, from, to, match, (from, to, style) => {\n                builder.add(from, to, this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style })));\n            });\n        }\n        return builder.finish();\n    }\n}\n// This extension installs a highlighter that highlights based on the\n// syntax tree and highlight style.\nconst treeHighlighter = /*@__PURE__*/Prec.high(/*@__PURE__*/ViewPlugin.fromClass(TreeHighlighter, {\n    decorations: v => v.decorations\n}));\nconst nodeStack = [\"\"];\nclass HighlightBuilder {\n    constructor(at, style, span) {\n        this.at = at;\n        this.style = style;\n        this.span = span;\n        this.class = \"\";\n    }\n    startSpan(at, cls) {\n        if (cls != this.class) {\n            this.flush(at);\n            if (at > this.at)\n                this.at = at;\n            this.class = cls;\n        }\n    }\n    flush(to) {\n        if (to > this.at && this.class)\n            this.span(this.at, to, this.class);\n    }\n    highlightRange(cursor, from, to, inheritedClass, depth, scope) {\n        let { type, from: start, to: end } = cursor;\n        if (start >= to || end <= from)\n            return;\n        nodeStack[depth] = type.name;\n        if (type.isTop)\n            scope = type;\n        let cls = inheritedClass;\n        let rule = type.prop(ruleNodeProp), opaque = false;\n        while (rule) {\n            if (!rule.context || matchContext(rule.context, nodeStack, depth)) {\n                for (let tag of rule.tags) {\n                    let st = this.style(tag, scope);\n                    if (st) {\n                        if (cls)\n                            cls += \" \";\n                        cls += st;\n                        if (rule.mode == 1 /* Inherit */)\n                            inheritedClass += (inheritedClass ? \" \" : \"\") + st;\n                        else if (rule.mode == 0 /* Opaque */)\n                            opaque = true;\n                    }\n                }\n                break;\n            }\n            rule = rule.next;\n        }\n        this.startSpan(cursor.from, cls);\n        if (opaque)\n            return;\n        let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n        if (mounted && mounted.overlay) {\n            let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);\n            let hasChild = cursor.firstChild();\n            for (let i = 0, pos = start;; i++) {\n                let next = i < mounted.overlay.length ? mounted.overlay[i] : null;\n                let nextPos = next ? next.from + start : end;\n                let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);\n                if (rangeFrom < rangeTo && hasChild) {\n                    while (cursor.from < rangeTo) {\n                        this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, depth + 1, scope);\n                        this.startSpan(Math.min(to, cursor.to), cls);\n                        if (cursor.to >= nextPos || !cursor.nextSibling())\n                            break;\n                    }\n                }\n                if (!next || nextPos > to)\n                    break;\n                pos = next.to + start;\n                if (pos > from) {\n                    this.highlightRange(inner.cursor, Math.max(from, next.from + start), Math.min(to, pos), inheritedClass, depth, mounted.tree.type);\n                    this.startSpan(pos, cls);\n                }\n            }\n            if (hasChild)\n                cursor.parent();\n        }\n        else if (cursor.firstChild()) {\n            do {\n                if (cursor.to <= from)\n                    continue;\n                if (cursor.from >= to)\n                    break;\n                this.highlightRange(cursor, from, to, inheritedClass, depth + 1, scope);\n                this.startSpan(Math.min(to, cursor.to), cls);\n            } while (cursor.nextSibling());\n            cursor.parent();\n        }\n    }\n}\nfunction highlightTreeRange(tree, from, to, style, span) {\n    let builder = new HighlightBuilder(from, style, span);\n    builder.highlightRange(tree.cursor(), from, to, \"\", 0, tree.type);\n    builder.flush(to);\n}\nfunction matchContext(context, stack, depth) {\n    if (context.length > depth - 1)\n        return false;\n    for (let d = depth - 1, i = context.length - 1; i >= 0; i--, d--) {\n        let check = context[i];\n        if (check && check != stack[d])\n            return false;\n    }\n    return true;\n}\nconst t = Tag.define;\nconst comment = /*@__PURE__*/t(), name = /*@__PURE__*/t(), typeName = /*@__PURE__*/t(name), propertyName = /*@__PURE__*/t(name), literal = /*@__PURE__*/t(), string = /*@__PURE__*/t(literal), number = /*@__PURE__*/t(literal), content = /*@__PURE__*/t(), heading = /*@__PURE__*/t(content), keyword = /*@__PURE__*/t(), operator = /*@__PURE__*/t(), punctuation = /*@__PURE__*/t(), bracket = /*@__PURE__*/t(punctuation), meta = /*@__PURE__*/t();\n/**\nThe default set of highlighting [tags](https://codemirror.net/6/docs/ref/#highlight.Tag^define) used\nby regular language packages and themes.\n\nThis collection is heavily biased towards programming languages,\nand necessarily incomplete. A full ontology of syntactic\nconstructs would fill a stack of books, and be impractical to\nwrite themes for. So try to make do with this set. If all else\nfails, [open an\nissue](https://github.com/codemirror/codemirror.next) to propose a\nnew tag, or [define](https://codemirror.net/6/docs/ref/#highlight.Tag^define) a local custom tag for\nyour use case.\n\nNote that it is not obligatory to always attach the most specific\ntag possible to an element—if your grammar can't easily\ndistinguish a certain type of element (such as a local variable),\nit is okay to style it as its more general variant (a variable).\n\nFor tags that extend some parent tag, the documentation links to\nthe parent.\n*/\nconst tags = {\n    /**\n    A comment.\n    */\n    comment,\n    /**\n    A line [comment](https://codemirror.net/6/docs/ref/#highlight.tags.comment).\n    */\n    lineComment: /*@__PURE__*/t(comment),\n    /**\n    A block [comment](https://codemirror.net/6/docs/ref/#highlight.tags.comment).\n    */\n    blockComment: /*@__PURE__*/t(comment),\n    /**\n    A documentation [comment](https://codemirror.net/6/docs/ref/#highlight.tags.comment).\n    */\n    docComment: /*@__PURE__*/t(comment),\n    /**\n    Any kind of identifier.\n    */\n    name,\n    /**\n    The [name](https://codemirror.net/6/docs/ref/#highlight.tags.name) of a variable.\n    */\n    variableName: /*@__PURE__*/t(name),\n    /**\n    A type [name](https://codemirror.net/6/docs/ref/#highlight.tags.name).\n    */\n    typeName: typeName,\n    /**\n    A tag name (subtag of [`typeName`](https://codemirror.net/6/docs/ref/#highlight.tags.typeName)).\n    */\n    tagName: /*@__PURE__*/t(typeName),\n    /**\n    A property or field [name](https://codemirror.net/6/docs/ref/#highlight.tags.name).\n    */\n    propertyName: propertyName,\n    /**\n    An attribute name (subtag of [`propertyName`](https://codemirror.net/6/docs/ref/#highlight.tags.propertyName)).\n    */\n    attributeName: /*@__PURE__*/t(propertyName),\n    /**\n    The [name](https://codemirror.net/6/docs/ref/#highlight.tags.name) of a class.\n    */\n    className: /*@__PURE__*/t(name),\n    /**\n    A label [name](https://codemirror.net/6/docs/ref/#highlight.tags.name).\n    */\n    labelName: /*@__PURE__*/t(name),\n    /**\n    A namespace [name](https://codemirror.net/6/docs/ref/#highlight.tags.name).\n    */\n    namespace: /*@__PURE__*/t(name),\n    /**\n    The [name](https://codemirror.net/6/docs/ref/#highlight.tags.name) of a macro.\n    */\n    macroName: /*@__PURE__*/t(name),\n    /**\n    A literal value.\n    */\n    literal,\n    /**\n    A string [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    string,\n    /**\n    A documentation [string](https://codemirror.net/6/docs/ref/#highlight.tags.string).\n    */\n    docString: /*@__PURE__*/t(string),\n    /**\n    A character literal (subtag of [string](https://codemirror.net/6/docs/ref/#highlight.tags.string)).\n    */\n    character: /*@__PURE__*/t(string),\n    /**\n    An attribute value (subtag of [string](https://codemirror.net/6/docs/ref/#highlight.tags.string)).\n    */\n    attributeValue: /*@__PURE__*/t(string),\n    /**\n    A number [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    number,\n    /**\n    An integer [number](https://codemirror.net/6/docs/ref/#highlight.tags.number) literal.\n    */\n    integer: /*@__PURE__*/t(number),\n    /**\n    A floating-point [number](https://codemirror.net/6/docs/ref/#highlight.tags.number) literal.\n    */\n    float: /*@__PURE__*/t(number),\n    /**\n    A boolean [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    bool: /*@__PURE__*/t(literal),\n    /**\n    Regular expression [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    regexp: /*@__PURE__*/t(literal),\n    /**\n    An escape [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal), for example a\n    backslash escape in a string.\n    */\n    escape: /*@__PURE__*/t(literal),\n    /**\n    A color [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    color: /*@__PURE__*/t(literal),\n    /**\n    A URL [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    url: /*@__PURE__*/t(literal),\n    /**\n    A language keyword.\n    */\n    keyword,\n    /**\n    The [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) for the self or this\n    object.\n    */\n    self: /*@__PURE__*/t(keyword),\n    /**\n    The [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) for null.\n    */\n    null: /*@__PURE__*/t(keyword),\n    /**\n    A [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) denoting some atomic value.\n    */\n    atom: /*@__PURE__*/t(keyword),\n    /**\n    A [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) that represents a unit.\n    */\n    unit: /*@__PURE__*/t(keyword),\n    /**\n    A modifier [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword).\n    */\n    modifier: /*@__PURE__*/t(keyword),\n    /**\n    A [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) that acts as an operator.\n    */\n    operatorKeyword: /*@__PURE__*/t(keyword),\n    /**\n    A control-flow related [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword).\n    */\n    controlKeyword: /*@__PURE__*/t(keyword),\n    /**\n    A [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) that defines something.\n    */\n    definitionKeyword: /*@__PURE__*/t(keyword),\n    /**\n    A [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) related to defining or\n    interfacing with modules.\n    */\n    moduleKeyword: /*@__PURE__*/t(keyword),\n    /**\n    An operator.\n    */\n    operator,\n    /**\n    An [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator) that defines something.\n    */\n    derefOperator: /*@__PURE__*/t(operator),\n    /**\n    Arithmetic-related [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    arithmeticOperator: /*@__PURE__*/t(operator),\n    /**\n    Logical [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    logicOperator: /*@__PURE__*/t(operator),\n    /**\n    Bit [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    bitwiseOperator: /*@__PURE__*/t(operator),\n    /**\n    Comparison [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    compareOperator: /*@__PURE__*/t(operator),\n    /**\n    [Operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator) that updates its operand.\n    */\n    updateOperator: /*@__PURE__*/t(operator),\n    /**\n    [Operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator) that defines something.\n    */\n    definitionOperator: /*@__PURE__*/t(operator),\n    /**\n    Type-related [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    typeOperator: /*@__PURE__*/t(operator),\n    /**\n    Control-flow [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    controlOperator: /*@__PURE__*/t(operator),\n    /**\n    Program or markup punctuation.\n    */\n    punctuation,\n    /**\n    [Punctuation](https://codemirror.net/6/docs/ref/#highlight.tags.punctuation) that separates\n    things.\n    */\n    separator: /*@__PURE__*/t(punctuation),\n    /**\n    Bracket-style [punctuation](https://codemirror.net/6/docs/ref/#highlight.tags.punctuation).\n    */\n    bracket,\n    /**\n    Angle [brackets](https://codemirror.net/6/docs/ref/#highlight.tags.bracket) (usually `<` and `>`\n    tokens).\n    */\n    angleBracket: /*@__PURE__*/t(bracket),\n    /**\n    Square [brackets](https://codemirror.net/6/docs/ref/#highlight.tags.bracket) (usually `[` and `]`\n    tokens).\n    */\n    squareBracket: /*@__PURE__*/t(bracket),\n    /**\n    Parentheses (usually `(` and `)` tokens). Subtag of\n    [bracket](https://codemirror.net/6/docs/ref/#highlight.tags.bracket).\n    */\n    paren: /*@__PURE__*/t(bracket),\n    /**\n    Braces (usually `{` and `}` tokens). Subtag of\n    [bracket](https://codemirror.net/6/docs/ref/#highlight.tags.bracket).\n    */\n    brace: /*@__PURE__*/t(bracket),\n    /**\n    Content, for example plain text in XML or markup documents.\n    */\n    content,\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that represents a heading.\n    */\n    heading,\n    /**\n    A level 1 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading1: /*@__PURE__*/t(heading),\n    /**\n    A level 2 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading2: /*@__PURE__*/t(heading),\n    /**\n    A level 3 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading3: /*@__PURE__*/t(heading),\n    /**\n    A level 4 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading4: /*@__PURE__*/t(heading),\n    /**\n    A level 5 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading5: /*@__PURE__*/t(heading),\n    /**\n    A level 6 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading6: /*@__PURE__*/t(heading),\n    /**\n    A prose separator (such as a horizontal rule).\n    */\n    contentSeparator: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that represents a list.\n    */\n    list: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that represents a quote.\n    */\n    quote: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that is emphasized.\n    */\n    emphasis: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that is styled strong.\n    */\n    strong: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that is part of a link.\n    */\n    link: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that is styled as code or\n    monospace.\n    */\n    monospace: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that has a strike-through\n    style.\n    */\n    strikethrough: /*@__PURE__*/t(content),\n    /**\n    Inserted text in a change-tracking format.\n    */\n    inserted: /*@__PURE__*/t(),\n    /**\n    Deleted text.\n    */\n    deleted: /*@__PURE__*/t(),\n    /**\n    Changed text.\n    */\n    changed: /*@__PURE__*/t(),\n    /**\n    An invalid or unsyntactic element.\n    */\n    invalid: /*@__PURE__*/t(),\n    /**\n    Metadata or meta-instruction.\n    */\n    meta,\n    /**\n    [Metadata](https://codemirror.net/6/docs/ref/#highlight.tags.meta) that applies to the entire\n    document.\n    */\n    documentMeta: /*@__PURE__*/t(meta),\n    /**\n    [Metadata](https://codemirror.net/6/docs/ref/#highlight.tags.meta) that annotates or adds\n    attributes to a given syntactic element.\n    */\n    annotation: /*@__PURE__*/t(meta),\n    /**\n    Processing instruction or preprocessor directive. Subtag of\n    [meta](https://codemirror.net/6/docs/ref/#highlight.tags.meta).\n    */\n    processingInstruction: /*@__PURE__*/t(meta),\n    /**\n    [Modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) that indicates that a\n    given element is being defined. Expected to be used with the\n    various [name](https://codemirror.net/6/docs/ref/#highlight.tags.name) tags.\n    */\n    definition: /*@__PURE__*/Tag.defineModifier(),\n    /**\n    [Modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) that indicates that\n    something is constant. Mostly expected to be used with\n    [variable names](https://codemirror.net/6/docs/ref/#highlight.tags.variableName).\n    */\n    constant: /*@__PURE__*/Tag.defineModifier(),\n    /**\n    [Modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) used to indicate that\n    a [variable](https://codemirror.net/6/docs/ref/#highlight.tags.variableName) or [property\n    name](https://codemirror.net/6/docs/ref/#highlight.tags.propertyName) is being called or defined\n    as a function.\n    */\n    function: /*@__PURE__*/Tag.defineModifier(),\n    /**\n    [Modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) that can be applied to\n    [names](https://codemirror.net/6/docs/ref/#highlight.tags.name) to indicate that they belong to\n    the language's standard environment.\n    */\n    standard: /*@__PURE__*/Tag.defineModifier(),\n    /**\n    [Modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) that indicates a given\n    [names](https://codemirror.net/6/docs/ref/#highlight.tags.name) is local to some scope.\n    */\n    local: /*@__PURE__*/Tag.defineModifier(),\n    /**\n    A generic variant [modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) that\n    can be used to tag language-specific alternative variants of\n    some common tag. It is recommended for themes to define special\n    forms of at least the [string](https://codemirror.net/6/docs/ref/#highlight.tags.string) and\n    [variable name](https://codemirror.net/6/docs/ref/#highlight.tags.variableName) tags, since those\n    come up a lot.\n    */\n    special: /*@__PURE__*/Tag.defineModifier()\n};\n/**\nA default highlight style (works well with light themes).\n*/\nconst defaultHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.link,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        textDecoration: \"underline\",\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.keyword,\n        color: \"#708\" },\n    { tag: [tags.atom, tags.bool, tags.url, tags.contentSeparator, tags.labelName],\n        color: \"#219\" },\n    { tag: [tags.literal, tags.inserted],\n        color: \"#164\" },\n    { tag: [tags.string, tags.deleted],\n        color: \"#a11\" },\n    { tag: [tags.regexp, tags.escape, /*@__PURE__*/tags.special(tags.string)],\n        color: \"#e40\" },\n    { tag: /*@__PURE__*/tags.definition(tags.variableName),\n        color: \"#00f\" },\n    { tag: /*@__PURE__*/tags.local(tags.variableName),\n        color: \"#30a\" },\n    { tag: [tags.typeName, tags.namespace],\n        color: \"#085\" },\n    { tag: tags.className,\n        color: \"#167\" },\n    { tag: [/*@__PURE__*/tags.special(tags.variableName), tags.macroName],\n        color: \"#256\" },\n    { tag: /*@__PURE__*/tags.definition(tags.propertyName),\n        color: \"#00c\" },\n    { tag: tags.comment,\n        color: \"#940\" },\n    { tag: tags.meta,\n        color: \"#7a757a\" },\n    { tag: tags.invalid,\n        color: \"#f00\" }\n]);\n/**\nThis is a highlight style that adds stable, predictable classes to\ntokens, for styling with external CSS.\n\nThese tags are mapped to their name prefixed with `\"cmt-\"` (for\nexample `\"cmt-comment\"`):\n\n* [`link`](https://codemirror.net/6/docs/ref/#highlight.tags.link)\n* [`heading`](https://codemirror.net/6/docs/ref/#highlight.tags.heading)\n* [`emphasis`](https://codemirror.net/6/docs/ref/#highlight.tags.emphasis)\n* [`strong`](https://codemirror.net/6/docs/ref/#highlight.tags.strong)\n* [`keyword`](https://codemirror.net/6/docs/ref/#highlight.tags.keyword)\n* [`atom`](https://codemirror.net/6/docs/ref/#highlight.tags.atom) [`bool`](https://codemirror.net/6/docs/ref/#highlight.tags.bool)\n* [`url`](https://codemirror.net/6/docs/ref/#highlight.tags.url)\n* [`labelName`](https://codemirror.net/6/docs/ref/#highlight.tags.labelName)\n* [`inserted`](https://codemirror.net/6/docs/ref/#highlight.tags.inserted)\n* [`deleted`](https://codemirror.net/6/docs/ref/#highlight.tags.deleted)\n* [`literal`](https://codemirror.net/6/docs/ref/#highlight.tags.literal)\n* [`string`](https://codemirror.net/6/docs/ref/#highlight.tags.string)\n* [`number`](https://codemirror.net/6/docs/ref/#highlight.tags.number)\n* [`variableName`](https://codemirror.net/6/docs/ref/#highlight.tags.variableName)\n* [`typeName`](https://codemirror.net/6/docs/ref/#highlight.tags.typeName)\n* [`namespace`](https://codemirror.net/6/docs/ref/#highlight.tags.namespace)\n* [`className`](https://codemirror.net/6/docs/ref/#highlight.tags.className)\n* [`macroName`](https://codemirror.net/6/docs/ref/#highlight.tags.macroName)\n* [`propertyName`](https://codemirror.net/6/docs/ref/#highlight.tags.propertyName)\n* [`operator`](https://codemirror.net/6/docs/ref/#highlight.tags.operator)\n* [`comment`](https://codemirror.net/6/docs/ref/#highlight.tags.comment)\n* [`meta`](https://codemirror.net/6/docs/ref/#highlight.tags.meta)\n* [`punctuation`](https://codemirror.net/6/docs/ref/#highlight.tags.puncutation)\n* [`invalid`](https://codemirror.net/6/docs/ref/#highlight.tags.invalid)\n\nIn addition, these mappings are provided:\n\n* [`regexp`](https://codemirror.net/6/docs/ref/#highlight.tags.regexp),\n  [`escape`](https://codemirror.net/6/docs/ref/#highlight.tags.escape), and\n  [`special`](https://codemirror.net/6/docs/ref/#highlight.tags.special)[`(string)`](https://codemirror.net/6/docs/ref/#highlight.tags.string)\n  are mapped to `\"cmt-string2\"`\n* [`special`](https://codemirror.net/6/docs/ref/#highlight.tags.special)[`(variableName)`](https://codemirror.net/6/docs/ref/#highlight.tags.variableName)\n  to `\"cmt-variableName2\"`\n* [`local`](https://codemirror.net/6/docs/ref/#highlight.tags.local)[`(variableName)`](https://codemirror.net/6/docs/ref/#highlight.tags.variableName)\n  to `\"cmt-variableName cmt-local\"`\n* [`definition`](https://codemirror.net/6/docs/ref/#highlight.tags.definition)[`(variableName)`](https://codemirror.net/6/docs/ref/#highlight.tags.variableName)\n  to `\"cmt-variableName cmt-definition\"`\n* [`definition`](https://codemirror.net/6/docs/ref/#highlight.tags.definition)[`(propertyName)`](https://codemirror.net/6/docs/ref/#highlight.tags.propertyName)\n  to `\"cmt-propertyName cmt-definition\"`\n*/\nconst classHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.link, class: \"cmt-link\" },\n    { tag: tags.heading, class: \"cmt-heading\" },\n    { tag: tags.emphasis, class: \"cmt-emphasis\" },\n    { tag: tags.strong, class: \"cmt-strong\" },\n    { tag: tags.keyword, class: \"cmt-keyword\" },\n    { tag: tags.atom, class: \"cmt-atom\" },\n    { tag: tags.bool, class: \"cmt-bool\" },\n    { tag: tags.url, class: \"cmt-url\" },\n    { tag: tags.labelName, class: \"cmt-labelName\" },\n    { tag: tags.inserted, class: \"cmt-inserted\" },\n    { tag: tags.deleted, class: \"cmt-deleted\" },\n    { tag: tags.literal, class: \"cmt-literal\" },\n    { tag: tags.string, class: \"cmt-string\" },\n    { tag: tags.number, class: \"cmt-number\" },\n    { tag: [tags.regexp, tags.escape, /*@__PURE__*/tags.special(tags.string)], class: \"cmt-string2\" },\n    { tag: tags.variableName, class: \"cmt-variableName\" },\n    { tag: /*@__PURE__*/tags.local(tags.variableName), class: \"cmt-variableName cmt-local\" },\n    { tag: /*@__PURE__*/tags.definition(tags.variableName), class: \"cmt-variableName cmt-definition\" },\n    { tag: /*@__PURE__*/tags.special(tags.variableName), class: \"cmt-variableName2\" },\n    { tag: /*@__PURE__*/tags.definition(tags.propertyName), class: \"cmt-propertyName cmt-definition\" },\n    { tag: tags.typeName, class: \"cmt-typeName\" },\n    { tag: tags.namespace, class: \"cmt-namespace\" },\n    { tag: tags.className, class: \"cmt-className\" },\n    { tag: tags.macroName, class: \"cmt-macroName\" },\n    { tag: tags.propertyName, class: \"cmt-propertyName\" },\n    { tag: tags.operator, class: \"cmt-operator\" },\n    { tag: tags.comment, class: \"cmt-comment\" },\n    { tag: tags.meta, class: \"cmt-meta\" },\n    { tag: tags.invalid, class: \"cmt-invalid\" },\n    { tag: tags.punctuation, class: \"cmt-punctuation\" }\n]);\n\nexport { HighlightStyle, Tag, classHighlightStyle, defaultHighlightStyle, highlightTree, styleTags, tags };\n","import { Decoration, EditorView, ViewPlugin, logException, WidgetType } from '@codemirror/view';\nimport { StateEffect, StateField, Facet } from '@codemirror/state';\nimport { hoverTooltip, showTooltip } from '@codemirror/tooltip';\nimport { showPanel, getPanel } from '@codemirror/panel';\nimport { gutter, GutterMarker } from '@codemirror/gutter';\nimport { RangeSet } from '@codemirror/rangeset';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        let ranges = Decoration.set(diagnostics.map((d) => {\n            // For zero-length ranges or ranges covering only a line break, create a widget\n            return d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)\n                ? Decoration.widget({\n                    widget: new DiagnosticWidget(d),\n                    diagnostic: d\n                }).range(d.from)\n                : Decoration.mark({\n                    attributes: { class: \"cm-lintRange cm-lintRange-\" + d.severity },\n                    diagnostic: d\n                }).range(d.from, d.to);\n        }), true);\n        return new LintState(ranges, panel, findDiagnostic(ranges));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([\n        lintState,\n        EditorView.decorations.compute([lintState], state => {\n            let { selected, panel } = state.field(lintState);\n            return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n                activeMark.range(selected.from, selected.to)\n            ]);\n        }),\n        hoverTooltip(lintTooltip),\n        baseTheme\n    ]));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                value = LintState.init(effect.value, value.panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(from, stackStart);\n            stackEnd = Math.max(to, stackEnd);\n        }\n    });\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintSource);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintSource);\n            Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {\n                var _a, _b;\n                let all = annotations.reduce((a, b) => a.concat(b));\n                if (this.view.state.doc == state.doc &&\n                    (all.length || ((_b = (_a = this.view.state.field(lintState, false)) === null || _a === void 0 ? void 0 : _a.diagnostics) === null || _b === void 0 ? void 0 : _b.size)))\n                    this.view.dispatch(setDiagnostics(this.view.state, all));\n            }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let source = update.state.facet(lintSource);\n        if (update.docChanged || source != update.startState.facet(lintSource)) {\n            this.lintTime = Date.now() + source.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, source.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nconst lintSource = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return { sources: input.map(i => i.source), delay: input.length ? Math.max(...input.map(i => i.delay)) : 750 };\n    },\n    enables: lintPlugin\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\nfunction linter(source, config = {}) {\n    var _a;\n    return lintSource.of({ source, delay: (_a = config.delay) !== null && _a !== void 0 ? _a : 750 });\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let click = (e) => {\n            e.preventDefault();\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = diagnostics.reduce((max, d) => {\n            let s = d.severity;\n            return s == \"error\" || s == \"warning\" && max == \"info\" ? s : max;\n        }, \"info\");\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        elt.onmouseover = () => gutterMarkerMouseOver(view, elt, this.diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Margin */ && event.clientX < rect.right + 10 /* Margin */ &&\n            event.clientY > rect.top - 10 /* Margin */ && event.clientY < rect.bottom + 10 /* Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.visualLineAtHeight(marker.getBoundingClientRect().top + 5);\n        const linePos = view.coordsAtPos(line.from), markerRect = marker.getBoundingClientRect();\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            offset: { x: markerRect.left - linePos.left, y: 0 }\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let hoverTimeout = setTimeout(hovered, 600 /* Time */);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, 600 /* Time */);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        for (let effect of tr.effects)\n            if (effect.is(setDiagnosticsEffect)) {\n                markers = markersForDiagnostics(tr.state.doc, effect.value);\n            }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \"0 .2em\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\",\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error:before\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter() {\n    return [lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n\nexport { closeLintPanel, diagnosticCount, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics, setDiagnosticsEffect };\n","import { highlightSpecialChars, drawSelection, dropCursor, highlightActiveLine, keymap } from '@codemirror/view';\nexport { EditorView } from '@codemirror/view';\nimport { EditorState } from '@codemirror/state';\nexport { EditorState } from '@codemirror/state';\nimport { history, historyKeymap } from '@codemirror/history';\nimport { foldGutter, foldKeymap } from '@codemirror/fold';\nimport { indentOnInput } from '@codemirror/language';\nimport { lineNumbers, highlightActiveLineGutter } from '@codemirror/gutter';\nimport { defaultKeymap } from '@codemirror/commands';\nimport { bracketMatching } from '@codemirror/matchbrackets';\nimport { closeBrackets, closeBracketsKeymap } from '@codemirror/closebrackets';\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search';\nimport { autocompletion, completionKeymap } from '@codemirror/autocomplete';\nimport { commentKeymap } from '@codemirror/comment';\nimport { rectangularSelection } from '@codemirror/rectangular-selection';\nimport { defaultHighlightStyle } from '@codemirror/highlight';\nimport { lintKeymap } from '@codemirror/lint';\n\n/**\nThis is an extension value that just pulls together a whole lot of\nextensions that you might want in a basic editor. It is meant as a\nconvenient helper to quickly set up CodeMirror without installing\nand importing a lot of packages.\n\nSpecifically, it includes...\n\n - [the default command bindings](https://codemirror.net/6/docs/ref/#commands.defaultKeymap)\n - [line numbers](https://codemirror.net/6/docs/ref/#gutter.lineNumbers)\n - [special character highlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars)\n - [the undo history](https://codemirror.net/6/docs/ref/#history.history)\n - [a fold gutter](https://codemirror.net/6/docs/ref/#fold.foldGutter)\n - [custom selection drawing](https://codemirror.net/6/docs/ref/#view.drawSelection)\n - [drop cursor](https://codemirror.net/6/docs/ref/#view.dropCursor)\n - [multiple selections](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\n - [reindentation on input](https://codemirror.net/6/docs/ref/#language.indentOnInput)\n - [the default highlight style](https://codemirror.net/6/docs/ref/#highlight.defaultHighlightStyle) (as fallback)\n - [bracket matching](https://codemirror.net/6/docs/ref/#matchbrackets.bracketMatching)\n - [bracket closing](https://codemirror.net/6/docs/ref/#closebrackets.closeBrackets)\n - [autocompletion](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion)\n - [rectangular selection](https://codemirror.net/6/docs/ref/#rectangular-selection.rectangularSelection)\n - [active line highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLine)\n - [active line gutter highlighting](https://codemirror.net/6/docs/ref/#gutter.highlightActiveLineGutter)\n - [selection match highlighting](https://codemirror.net/6/docs/ref/#search.highlightSelectionMatches)\n - [search](https://codemirror.net/6/docs/ref/#search.searchKeymap)\n - [commenting](https://codemirror.net/6/docs/ref/#comment.commentKeymap)\n - [linting](https://codemirror.net/6/docs/ref/#lint.lintKeymap)\n\n(You'll probably want to add some language package to your setup\ntoo.)\n\nThis package does not allow customization. The idea is that, once\nyou decide you want to configure your editor more precisely, you\ntake this package's source (which is just a bunch of imports and\nan array literal), copy it into your own code, and adjust it as\ndesired.\n*/\nconst basicSetup = [\n    /*@__PURE__*/lineNumbers(),\n    /*@__PURE__*/highlightActiveLineGutter(),\n    /*@__PURE__*/highlightSpecialChars(),\n    /*@__PURE__*/history(),\n    /*@__PURE__*/foldGutter(),\n    /*@__PURE__*/drawSelection(),\n    /*@__PURE__*/dropCursor(),\n    /*@__PURE__*/EditorState.allowMultipleSelections.of(true),\n    /*@__PURE__*/indentOnInput(),\n    defaultHighlightStyle.fallback,\n    /*@__PURE__*/bracketMatching(),\n    /*@__PURE__*/closeBrackets(),\n    /*@__PURE__*/autocompletion(),\n    /*@__PURE__*/rectangularSelection(),\n    /*@__PURE__*/highlightActiveLine(),\n    /*@__PURE__*/highlightSelectionMatches(),\n    /*@__PURE__*/keymap.of([\n        ...closeBracketsKeymap,\n        ...defaultKeymap,\n        ...searchKeymap,\n        ...historyKeymap,\n        ...foldKeymap,\n        ...commentKeymap,\n        ...completionKeymap,\n        ...lintKeymap\n    ])\n];\n\nexport { basicSetup };\n","import { ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@codemirror/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst newline$1 = 26,\n  newlineEmpty = 27,\n  eof = 28;\n\nconst newline = 10, carriageReturn = 13, space = 32, tab = 9, hash = 35;\n\n// Taken from https://github.com/lezer-parser/python/blob/main/src/tokens.js\nconst newlines = new ExternalTokenizer((input, stack) => {\n  if (input.next < 0) {\n    input.acceptToken(eof);\n  } else if (input.next !== newline && input.next !== carriageReturn) ; else if (stack.context.depth < 0) ; else {\n    input.advance();\n    let spaces = 0;\n    while (input.next === space || input.next === tab) { input.advance(); spaces++; }\n    let empty = input.next === newline || input.next === carriageReturn || input.next === hash;\n    input.acceptToken(empty ? newlineEmpty : newline$1, -spaces);\n  }\n}, {contextual: true, fallback: true});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 13,\n  states: \"'tOnQXOOO!RQXO'#CaO!WQXO'#CaO!}QXO'#CqO#UQXO'#C_O#jQXO'#CoO$RQXO'#C{O$aQXO'#CqO!]QXO'#CqOOQW'#Ct'#CtQ$uQXOOQOQXOOO%SQXO,58{O%kQXO,58{O%pQXO,58yOOQW,59],59]O&eQXO,58yO#jQXO,59ZO&jQXO'#C_O&oQXO,59ZO&rQXO'#CnO#jQXO,59YOOQW,59g,59gO&wQXO,59]OOQW-E6r-E6rOOQW'#Ce'#CeOOQW'#Cd'#CdO&|QXO'#CdO'bQYO1G.gO%SQXO1G.gOOQW1G.e1G.eO'jQXO1G.eO(_QXO1G.uOOQW1G.u1G.uOOQW1G.t1G.tO(gQXO1G.wOOQW'#Cr'#CrO)XQXO,59OO%SQXO'#CsO)`QYO7+$ROOQW7+$R7+$RO)hQ[O7+$ROOQW7+$P7+$POOQW7+$a7+$aOOQW7+$c7+$cOOQW-E6p-E6pOOQW1G.j1G.jOOQW,59_,59_OOQW-E6q-E6qOOQW<<Gm<<GmO)pQ[O<<GmOOQWAN=XAN=X\",\n  stateData: \")z~OnOSPOSkOS~OUPO]WO^VOjWOqQO~OSSOVTOYROZRO[RO~P]OV[O~OU]O~Ol_OUeXYeXZeX[eX]eX^eXieXjeXqeX~Oa^O~P!]OUPOVaOY`OZ`O[`OqQO~OSSOUPOVTOYbOZbO[bOqQO~OdeOjfOlfOioX~OUPOYgOZgO[gOjgOqQO~OYWOZWO[WO~P]OUPOYiOZiO[iO]iO^kOqQO~OVmO~OUPOYnOZnO[nO]nOqQOdRaiRajRalRa`Ra~OaoO~Oa^O~O`qOdeO~O_sO~OUPOYiOZiO[iO]iOqQO~O`xOpvO~OUPOYzOZzO[zO]zOqQOdRiiRijRilRi`Ri~O`{OdeO~Ol|OUeiYeiZei[ei]ei^eiieijeiqei~O_!OO~P&|O`!ROpvO~OpvOr!RO~OpvOr!TO~O]~\",\n  goto: \"#xpPPPqP}PP!m!vPPPPPPPPq#PP#Z#_#e#oPPPPPP#uQUOQcTQpaRreQROQWYQ`SUbTaeQgVYi[kmuvQn^RzoQl[QymR!PvUj[mvTtkuQUOSdTaRreTXOYQukR}uQwlS!Qw!SR!SyQYORhYRZO\",\n  nodeNames: \"⚠ Comment Program Comparison NOT FunctionExpression Function ( FunctionParameter ParamType MetadataField String Number PlainText [ ] ) Comparator BinaryExpression ParenthesizedExpression BinaryToken TitleFormatting\",\n  maxTerm: 34,\n  skippedNodes: [0,1],\n  repeatNodeCount: 3,\n  tokenData: \"3T~RoX^#Spq#Srs#wtu'iuv(Zvw)gwx*}xy+gyz+lz|)g|}+y}!P)g!P!Q,^!Q![-t![!c)g!c!d._!d!p.{!p!q0i!q!r2]!r!}.{!}#O2y#P#Q3O#T#o)g#y#z#S$f$g#S#BY#BZ#S$IS$I_#S$I|$JO#S$JT$JU#S$KV$KW#S&FU&FV#S~#XYn~X^#Spq#S#y#z#S$f$g#S#BY#BZ#S$IS$I_#S$I|$JO#S$JT$JU#S$KV$KW#S&FU&FV#S~#|Rq~Ot$Vuv$tv~$V~$YTOr$Vrs$is#O$V#O#P$n#P~$V~$nOZ~~$qPO~$V~$w_Op$Vpq%vqr$Vrs$is!Q$V!Q![%v![!c$V!c!}%v!}#O$V#O#P$n#P#R$V#R#S%v#S#T$V#T#o%v#o~$V~%yaOp$Vpq%vqr$Vrs$isu$Vuv'Ov!Q$V!Q![%v![!c$V!c!}%v!}#O$V#O#P$n#P#R$V#R#S%v#S#T$V#T#o%v#o~$V~'RTOr$Vrs'bs#O$V#O#P$n#P~$V~'iOY~Z~~'lS!Q!['x!c!}'x#R#S'x#T#o'x~'}SU~!Q!['x!c!}'x#R#S'x#T#o'x~(`X]Ppq({uv)gvw)gz!Q)g!Q![)x![!c)g!c!})x#R#S({#T#o)x~)OUpq({uv)b!Q![({!c!}({#R#S({#T#o({~)gOY~P)lS]Puv)gvw)gz!})g#T#o)g~)}X]Ppq({uv*jvw)gz!Q)g!Q![)x![!c)g!c!})x#R#S({#T#o)x~*qSY~]Puv)gvw)gz!})g#T#o)g~+QTOw*}wx$ix#O*}#O#P+a#P~*}~+dPO~*}~+lOV~V+qP`Rrs+tS+yOrSV,QSpU]Puv)gvw)gz!})g#T#o)g~,cU]Puv)gvw)gz!P)g!P!Q,u!Q!})g#T#o)g~,|XP~]POY-iZu-iuv,uvw,uwz-iz!},u!}#T-i#T#o,u#o~-i~-nQP~OY-iZ~-i~-{U[~]Puv)gvw)gz!Q)g!Q![-t![!})g#T#o)g~.fVa~]Puv)gvw)gz!c)g!c!p.{!p!q/c!q!}.{#T#o)g~/STa~]Puv)gvw)gz!c)g!c!}.{#T#o)g~/jVa~]Puv)gvw)gz!c)g!c!f.{!f!g0P!g!}.{#T#o)g~0YTd~a~]Puv)gvw)gz!c)g!c!}.{#T#o)g~0pVa~]Puv)gvw)gz!c)g!c!q.{!q!r1V!r!}.{#T#o)g~1^Va~]Puv)gvw)gz!c)g!c!v.{!v!w1s!w!}.{#T#o)g~1|TS~a~]Puv)gvw)gz!c)g!c!}.{#T#o)g~2dVa~]Puv)gvw)gz!c)g!c!t.{!t!u0P!u!}.{#T#o)g~3OO^~~3TO_~\",\n  tokenizers: [0, 1, 2, newlines],\n  topRules: {\"Program\":[0,2]},\n  tokenPrec: 408\n});\n\nconst Foobar2000QueryLanguage = LRLanguage.define({\n    parser: parser.configure({\n        props: [\n            indentNodeProp.add({\n                ParenthesizedExpression: delimitedIndent({ closing: \")\", align: false })\n            }),\n            foldNodeProp.add({\n                ParenthesizedExpression: foldInside\n            }),\n            styleTags({\n                MetadataField: tags.variableName,\n                String: tags.string,\n                Comparator: tags.compareOperator,\n                BinaryToken: tags.operatorKeyword,\n                Number: tags.number,\n                Function: tags.function(tags.variableName),\n                \"( )\": tags.paren,\n                \"[ ]\": tags.squareBracket,\n                \"NOT\": tags.operatorKeyword,\n                Comment: tags.lineComment,\n                PlainText: tags.string\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: {\n            brackets: ['(', '[', '%', '\"']\n        },\n        commentTokens: {\n            line: '//'\n        }\n    }\n});\nfunction Foobar2000Query() {\n    return new LanguageSupport(Foobar2000QueryLanguage);\n}\n\nexport { Foobar2000Query, Foobar2000QueryLanguage };\n","import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, tags } from '@codemirror/highlight';\n\n// Using https://github.com/one-dark/vscode-one-dark-theme/ as reference for the colors\nconst chalky = \"#e5c07b\", coral = \"#e06c75\", cyan = \"#56b6c2\", invalid = \"#ffffff\", ivory = \"#abb2bf\", stone = \"#7d8799\", // Brightened compared to original to increase contrast\nmalibu = \"#61afef\", sage = \"#98c379\", whiskey = \"#d19a66\", violet = \"#c678dd\", darkBackground = \"#21252b\", highlightBackground = \"#2c313a\", background = \"#282c34\", tooltipBackground = \"#353a42\", selection = \"#3E4451\", cursor = \"#528bff\";\n/**\nThe editor theme styles for One Dark.\n*/\nconst oneDarkTheme = /*@__PURE__*/EditorView.theme({\n    \"&\": {\n        color: ivory,\n        backgroundColor: background\n    },\n    \".cm-content\": {\n        caretColor: cursor\n    },\n    \"&.cm-focused .cm-cursor\": { borderLeftColor: cursor },\n    \"&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection\": { backgroundColor: selection },\n    \".cm-panels\": { backgroundColor: darkBackground, color: ivory },\n    \".cm-panels.cm-panels-top\": { borderBottom: \"2px solid black\" },\n    \".cm-panels.cm-panels-bottom\": { borderTop: \"2px solid black\" },\n    \".cm-searchMatch\": {\n        backgroundColor: \"#72a1ff59\",\n        outline: \"1px solid #457dff\"\n    },\n    \".cm-searchMatch.cm-searchMatch-selected\": {\n        backgroundColor: \"#6199ff2f\"\n    },\n    \".cm-activeLine\": { backgroundColor: highlightBackground },\n    \".cm-selectionMatch\": { backgroundColor: \"#aafe661a\" },\n    \"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket\": {\n        backgroundColor: \"#bad0f847\",\n        outline: \"1px solid #515a6b\"\n    },\n    \".cm-gutters\": {\n        backgroundColor: background,\n        color: stone,\n        border: \"none\"\n    },\n    \".cm-activeLineGutter\": {\n        backgroundColor: highlightBackground\n    },\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"#ddd\"\n    },\n    \".cm-tooltip\": {\n        border: \"none\",\n        backgroundColor: tooltipBackground\n    },\n    \".cm-tooltip .cm-tooltip-arrow:before\": {\n        borderTopColor: \"transparent\",\n        borderBottomColor: \"transparent\"\n    },\n    \".cm-tooltip .cm-tooltip-arrow:after\": {\n        borderTopColor: tooltipBackground,\n        borderBottomColor: tooltipBackground\n    },\n    \".cm-tooltip-autocomplete\": {\n        \"& > ul > li[aria-selected]\": {\n            backgroundColor: highlightBackground,\n            color: ivory\n        }\n    }\n}, { dark: true });\n/**\nThe highlighting style for code in the One Dark theme.\n*/\nconst oneDarkHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.keyword,\n        color: violet },\n    { tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],\n        color: coral },\n    { tag: [/*@__PURE__*/tags.function(tags.variableName), tags.labelName],\n        color: malibu },\n    { tag: [tags.color, /*@__PURE__*/tags.constant(tags.name), /*@__PURE__*/tags.standard(tags.name)],\n        color: whiskey },\n    { tag: [/*@__PURE__*/tags.definition(tags.name), tags.separator],\n        color: ivory },\n    { tag: [tags.typeName, tags.className, tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],\n        color: chalky },\n    { tag: [tags.operator, tags.operatorKeyword, tags.url, tags.escape, tags.regexp, tags.link, /*@__PURE__*/tags.special(tags.string)],\n        color: cyan },\n    { tag: [tags.meta, tags.comment],\n        color: stone },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.link,\n        color: stone,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        fontWeight: \"bold\",\n        color: coral },\n    { tag: [tags.atom, tags.bool, /*@__PURE__*/tags.special(tags.variableName)],\n        color: whiskey },\n    { tag: [tags.processingInstruction, tags.string, tags.inserted],\n        color: sage },\n    { tag: tags.invalid,\n        color: invalid },\n]);\n/**\nExtension to enable the One Dark theme (both the editor theme and\nthe highlight style).\n*/\nconst oneDark = [oneDarkTheme, oneDarkHighlightStyle];\n\nexport { oneDark, oneDarkHighlightStyle, oneDarkTheme };\n","\n\n\n\n\nimport { EditorState, Compartment } from '@codemirror/state';\nimport { basicSetup } from '@codemirror/basic-setup';\nimport { EditorView, keymap, ViewUpdate } from '@codemirror/view';\nimport { autocompletion } from '@codemirror/autocomplete';\nimport { Foobar2000Query } from 'codemirror-foobar2k';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { indentWithTab } from '@codemirror/commands';\n\nimport Component from 'vue-class-component';\nimport Vue from 'vue';\nimport {\n  applyField,\n  createAutocompleteFunction,\n  fieldAutocomplete, fieldRegex, functionApplyCompletion,\n  functionAutocomplete, functionRegex, functionTooltip, operatorAutocomplete\n} from '@/autoplaylist/default/utils';\n\nconst languageConf = new Compartment();\n\n@Component({\n  props: {\n    value: {\n      type: String,\n      default: ''\n    }\n  }\n})\nexport default class Codemirror extends Vue {\n  $props!: {\n    value: string,\n  };\n\n  updateQuery(view: ViewUpdate): void {\n    if (view.docChanged) {\n      this.$emit('input', view.state.sliceDoc());\n    }\n  }\n\n  mounted(): void {\n    const editor = EditorState.create({\n      doc: this.$props.value || '',\n      extensions: [\n        basicSetup,\n        autocompletion({\n          override: [\n            functionAutocomplete((s: string) => this.$store.state.queryMode ? functionApplyCompletion(s) : s),\n            fieldAutocomplete((s: string) => this.$store.state.queryMode ? applyField(s) : s),\n            createAutocompleteFunction(fieldRegex,\n              () => this.$store.state.customFields,\n              'variable', undefined,\n              (s: string) => this.$store.state.queryMode ? applyField(s) : s\n            ),\n            createAutocompleteFunction(functionRegex,\n              () => this.$store.state.customFunctions,\n              'function', undefined,\n              (s: string) => this.$store.state.queryMode ? functionApplyCompletion(s) : s\n            ),\n            operatorAutocomplete\n          ]\n        }),\n        functionTooltip,\n        oneDark,\n        keymap.of([indentWithTab]),\n        languageConf.of(Foobar2000Query()),\n        EditorView.updateListener.of(this.updateQuery)\n      ]\n    });\n\n    this.view = new EditorView({\n      state: editor,\n      parent: this.$refs.codemirror as Element\n    });\n\n    this.$store.commit('setActiveCodemirrorView', this.view);\n  }\n\n  unmounted(): void {\n    this.$store.commit('setActiveCodemirrorView', undefined);\n  }\n\n  view: EditorView | undefined;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Codemirror.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Codemirror.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Codemirror.vue?vue&type=template&id=09c143e2&\"\nimport script from \"./Codemirror.vue?vue&type=script&lang=ts&\"\nexport * from \"./Codemirror.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// FIXME profile adding a per-Tree TreeNode cache, validating it by\n// parent pointer\n/// The default maximum length of a `TreeBuffer` node (1024).\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/// Each [node type](#common.NodeType) or [individual tree](#common.Tree)\n/// can have metadata associated with it in props. Instances of this\n/// class represent prop names.\nclass NodeProp {\n    /// Create a new node prop type.\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /// This is meant to be used with\n    /// [`NodeSet.extend`](#common.NodeSet.extend) or\n    /// [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    /// prop values for each node type in the set. Takes a [match\n    /// object](#common.NodeType^match) or function that returns undefined\n    /// if the node type doesn't get this prop, and the prop's value if\n    /// it does.\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/// Prop that is used to describe matching delimiters. For opening\n/// delimiters, this holds an array of node names (written as a\n/// space-separated string when declaring this prop in a grammar)\n/// for the node types of closing delimiters that match it.\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The inverse of [`closedBy`](#common.NodeProp^closedBy). This is\n/// attached to closing delimiters, holding an array of node names\n/// of types of matching opening delimiters.\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// Used to assign node types to groups (for example, all node\n/// types that represent an expression could be tagged with an\n/// `\"Expression\"` group).\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The hash of the [context](#lr.ContextTracker.constructor)\n/// that the node was parsed in, if any. Used to limit reuse of\n/// contextual nodes.\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/// The distance beyond the end of the node that the tokenizer\n/// looked ahead for any of the tokens inside the node. (The LR\n/// parser only stores this when it is larger than 25, for\n/// efficiency reasons.)\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/// This per-node prop is used to replace a given node, or part of a\n/// node, with another tree. This is useful to include trees from\n/// different languages.\nNodeProp.mounted = new NodeProp({ perNode: true });\n/// A mounted tree, which can be [stored](#common.NodeProp^mounted) on\n/// a tree node to indicate that parts of its content are\n/// represented by another tree.\nclass MountedTree {\n    constructor(\n    /// The inner tree.\n    tree, \n    /// If this is null, this tree replaces the entire node (it will\n    /// be included in the regular iteration instead of its host\n    /// node). If not, only the given ranges are considered to be\n    /// covered by this tree. This is used for trees that are mixed in\n    /// a way that isn't strictly hierarchical. Such mounted trees are\n    /// only entered by [`resolveInner`](#common.Tree.resolveInner)\n    /// and [`enter`](#common.SyntaxNode.enter).\n    overlay, \n    /// The parser used to create this subtree.\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n}\nconst noProps = Object.create(null);\n/// Each node in a syntax tree has a node type associated with it.\nclass NodeType {\n    /// @internal\n    constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node set should play the same semantic\n    /// role.\n    name, \n    /// @internal\n    props, \n    /// The id of this node in its set. Corresponds to the term ids\n    /// used in the parser.\n    id, \n    /// @internal\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* Top */ : 0) | (spec.skipped ? 2 /* Skipped */ : 0) |\n            (spec.error ? 4 /* Error */ : 0) | (spec.name == null ? 8 /* Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /// Retrieves a node prop for this type. Will return `undefined` if\n    /// the prop isn't present on this node.\n    prop(prop) { return this.props[prop.id]; }\n    /// True when this is the top node of a grammar.\n    get isTop() { return (this.flags & 1 /* Top */) > 0; }\n    /// True when this node is produced by a skip rule.\n    get isSkipped() { return (this.flags & 2 /* Skipped */) > 0; }\n    /// Indicates whether this is an error node.\n    get isError() { return (this.flags & 4 /* Error */) > 0; }\n    /// When true, this node type doesn't correspond to a user-declared\n    /// named node, for example because it is used to cache repetition.\n    get isAnonymous() { return (this.flags & 8 /* Anonymous */) > 0; }\n    /// Returns true when this node's name or one of its\n    /// [groups](#common.NodeProp^group) matches the given string.\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /// Create a function from node types to arbitrary values by\n    /// specifying an object whose property names are node or\n    /// [group](#common.NodeProp^group) names. Often useful with\n    /// [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    /// names, separated by spaces, in a single property name to map\n    /// multiple node names to a single value.\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/// An empty dummy node type to use when no actual type is available.\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* Anonymous */);\n/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a numeric array. Each parser\n/// [has](#lr.LRParser.nodeSet) a node set, and [tree\n/// buffers](#common.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536) node\n/// types in it, so that the ids fit into 16-bit typed array slots.\nclass NodeSet {\n    /// Create a set with the given types. The `id` property of each\n    /// type should correspond to its position within the array.\n    constructor(\n    /// The node types in this set, by id.\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /// Create a copy of this set with some node properties added. The\n    /// arguments to this method should be created with\n    /// [`NodeProp.add`](#common.NodeProp.add).\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the [`TreeCursor`](#common.TreeCursor) or\n/// [`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\n/// a view on some part of this data structure, and can be used to\n/// move around to adjacent nodes.\nclass Tree {\n    /// Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    constructor(\n    /// The type of the top node.\n    type, \n    /// This node's child nodes.\n    children, \n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    positions, \n    /// The total length of this tree\n    length, \n    /// Per-node [node props](#common.NodeProp) to associate with this node.\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /// @internal\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /// @internal\n    toString() {\n        let mounted = this.prop(NodeProp.mounted);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /// Get a [tree cursor](#common.TreeCursor) rooted at this tree. When\n    /// `pos` is given, the cursor is [moved](#common.TreeCursor.moveTo)\n    /// to the given position and side.\n    cursor(pos, side = 0) {\n        let scope = (pos != null && CachedNode.get(this)) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        if (pos != null) {\n            cursor.moveTo(pos, side);\n            CachedNode.set(this, cursor._tree);\n        }\n        return cursor;\n    }\n    /// Get a [tree cursor](#common.TreeCursor) that, unlike regular\n    /// cursors, doesn't skip through\n    /// [anonymous](#common.NodeType.isAnonymous) nodes and doesn't\n    /// automatically enter mounted nodes.\n    fullCursor() {\n        return new TreeCursor(this.topNode, 1 /* Full */);\n    }\n    /// Get a [syntax node](#common.SyntaxNode) object for the top of the\n    /// tree.\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /// Get the [syntax node](#common.SyntaxNode) at the given position.\n    /// If `side` is -1, this will move into nodes that end at the\n    /// position. If 1, it'll move into nodes that start at the\n    /// position. With 0, it'll only enter nodes that cover the position\n    /// from both sides.\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /// Like [`resolve`](#common.Tree.resolve), but will enter\n    /// [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    /// pointing into the innermost overlaid tree at the given position\n    /// (with parent links going through all parent structure, including\n    /// the host trees).\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /// Iterate over the tree and its children, calling `enter` for any\n    /// node that touches the `from`/`to` region (if given) before\n    /// running over such a node's children, and `leave` (if given) when\n    /// leaving the node. When `enter` returns `false`, that node will\n    /// not have its children iterated over (or `leave` called).\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        for (let c = this.cursor(), get = () => c.node;;) {\n            let mustLeave = false;\n            if (c.from <= to && c.to >= from && (c.type.isAnonymous || enter(c.type, c.from, c.to, get) !== false)) {\n                if (c.firstChild())\n                    continue;\n                if (!c.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(c.type, c.from, c.to, get);\n                mustLeave = c.type.isAnonymous;\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                mustLeave = true;\n            }\n        }\n    }\n    /// Get the value of the given [node prop](#common.NodeProp) for this\n    /// node. Works with both per-node and per-type props.\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /// Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    /// format that can be passed to the [`Tree`](#common.Tree)\n    /// constructor.\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /// Balance the direct children of this tree, producing a copy of\n    /// which may have children grouped into subtrees with type\n    /// [`NodeType.none`](#common.NodeType^none).\n    balance(config = {}) {\n        return this.children.length <= 8 /* BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /// Build a tree from a postfix-ordered buffer of node information,\n    /// or a cursor over such a buffer.\n    static build(data) { return buildTree(data); }\n}\n/// The empty tree\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it)\nclass TreeBuffer {\n    /// Create a tree buffer.\n    constructor(\n    /// The buffer's content.\n    buffer, \n    /// The total length of the group of nodes in the buffer.\n    length, \n    /// The node set used in this buffer.\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /// @internal\n    get type() { return NodeType.none; }\n    /// @internal\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /// @internal\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /// @internal\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /// @internal\n    slice(startI, endI, from, to) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI);\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n        }\n        return new TreeBuffer(copy, to - from, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Before */: return from < pos;\n        case -1 /* AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Around */: return from < pos && to > pos;\n        case 1 /* AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* After */: return to > pos;\n        case 4 /* DontCare */: return true;\n    }\n}\nfunction enterUnfinishedNodesBefore(node, pos) {\n    let scan = node.childBefore(pos);\n    while (scan) {\n        let last = scan.lastChild;\n        if (!last || last.to != scan.to)\n            break;\n        if (last.type.isError && last.from == last.to) {\n            node = scan;\n            scan = last.prevSibling;\n        }\n        else {\n            scan = last;\n        }\n    }\n    return node;\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, true)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, overlays);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass TreeNode {\n    constructor(node, _from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        this.node = node;\n        this._from = _from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this.node.type; }\n    get name() { return this.node.type.name; }\n    get from() { return this._from; }\n    get to() { return this._from + this.node.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent.node, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent._from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & 2 /* NoEnterBuffer */)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & 1 /* Full */) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & 1 /* Full */) && next.props && (mounted = next.prop(NodeProp.mounted)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & 1 /* Full */) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & 1 /* Full */) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent.node.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* DontCare */); }\n    get lastChild() { return this.nextChild(this.node.children.length - 1, -1, 0, 4 /* DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* After */); }\n    childBefore(pos) { return this.nextChild(this.node.children.length - 1, -1, pos, -2 /* Before */); }\n    enter(pos, side, overlays = true, buffers = true) {\n        let mounted;\n        if (overlays && (mounted = this.node.prop(NodeProp.mounted)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, buffers ? 0 : 2 /* NoEnterBuffer */);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* DontCare */) : null;\n    }\n    get cursor() { return new TreeCursor(this); }\n    get tree() { return this.node; }\n    toTree() { return this.node; }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    enterUnfinishedNodesBefore(pos) { return enterUnfinishedNodesBefore(this, pos); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    /// @internal\n    toString() { return this.node.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor, result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        while (!cur.type.is(before))\n            if (!cur.nextSibling())\n                return result;\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode {\n    constructor(context, _parent, index) {\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Before */); }\n    enter(pos, side, overlays, buffers = true) {\n        if (!buffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* DontCare */));\n    }\n    get cursor() { return new TreeCursor(this); }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1], to = buffer.buffer[this.index + 2];\n            children.push(buffer.slice(startI, endI, from, to));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    enterUnfinishedNodesBefore(pos) { return enterUnfinishedNodesBefore(this, pos); }\n    /// @internal\n    toString() { return this.context.buffer.childString(this.index); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n}\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nclass TreeCursor {\n    /// @internal\n    constructor(node, \n    /// @internal\n    mode = 0) {\n        this.mode = mode;\n        this.buffer = null;\n        this.stack = [];\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    /// Shorthand for `.type.name`.\n    get name() { return this.type.name; }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /// @internal\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /// @internal\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree.node.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /// Move the cursor to this node's first child. When this returns\n    /// false, the node has no child, and the cursor has not been moved.\n    firstChild() { return this.enterChild(1, 0, 4 /* DontCare */); }\n    /// Move the cursor to this node's last child.\n    lastChild() { return this.enterChild(-1, 0, 4 /* DontCare */); }\n    /// Move the cursor to the first child that ends after `pos`.\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* After */); }\n    /// Move to the last child that starts before `pos`.\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Before */); }\n    /// Move the cursor to the child around `pos`. If side is -1 the\n    /// child may end at that position, when 1 it may start there. This\n    /// will also enter [overlaid](#common.MountedTree.overlay)\n    /// [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    /// set to false.\n    enter(pos, side, overlays = true, buffers = true) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, overlays && !(this.mode & 1 /* Full */), buffers));\n        return buffers ? this.enterChild(1, pos, side) : false;\n    }\n    /// Move to the node's parent node, if this isn't the top node.\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & 1 /* Full */) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & 1 /* Full */) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /// @internal\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* DontCare */, this.mode)) : false;\n    }\n    /// Move to this node's next sibling, if any.\n    nextSibling() { return this.sibling(1); }\n    /// Move to this node's previous sibling, if any.\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent.node.children.length; i != e; i += dir) {\n                    let child = parent.node.children[i];\n                    if ((this.mode & 1 /* Full */) || child instanceof TreeBuffer || !child.type.isAnonymous || hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /// Move to the next node in a\n    /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n    /// traversal, going from a node to its first child or, if the\n    /// current node is empty or `enter` is false, its next sibling or\n    /// the next sibling of the first parent node that has one.\n    next(enter = true) { return this.move(1, enter); }\n    /// Move to the next node in a last-to-first pre-order traveral. A\n    /// node is followed by its last child or, if it has none, its\n    /// previous sibling or the previous sibling of the first parent\n    /// node that has one.\n    prev(enter = true) { return this.move(-1, enter); }\n    /// Move the cursor to the innermost node that covers `pos`. If\n    /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    /// it will enter nodes that start at `pos`.\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /// Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    /// position.\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /// Get the [tree](#common.Tree) that represents the current node, if\n    /// any. Will return null when the node is in a [tree\n    /// buffer](#common.TreeBuffer).\n    get tree() {\n        return this.buffer ? null : this._tree.node;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function makeBalanced(type) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead = 0, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n\n/// Tree fragments are used during [incremental\n/// parsing](#common.Parser.startParse) to track parts of old trees\n/// that can be reused in a new parse. An array of fragments is used\n/// to track regions of an old tree whose nodes might be reused in new\n/// parses. Use the static\n/// [`applyChanges`](#common.TreeFragment^applyChanges) method to\n/// update fragments for document changes.\nclass TreeFragment {\n    /// Construct a tree fragment.\n    constructor(\n    /// The start of the unchanged range pointed to by this fragment.\n    /// This refers to an offset in the _updated_ document (as opposed\n    /// to the original tree).\n    from, \n    /// The end of the unchanged range.\n    to, \n    /// The tree that this fragment is based on.\n    tree, \n    /// The offset between the fragment's tree and the document that\n    /// this fragment can be used against. Add this when going from\n    /// document to tree positions, subtract it to go from tree to\n    /// document positions.\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Start */ : 0) | (openEnd ? 2 /* End */ : 0);\n    }\n    /// Whether the start of the fragment represents the start of a\n    /// parse, or the end of a change. (In the second case, it may not\n    /// be safe to reuse some nodes at the start, depending on the\n    /// parsing algorithm.)\n    get openStart() { return (this.open & 1 /* Start */) > 0; }\n    /// Whether the end of the fragment represents the end of a\n    /// full-document parse, or the start of a change.\n    get openEnd() { return (this.open & 2 /* End */) > 0; }\n    /// Create a set of fragments from a freshly parsed tree, or update\n    /// an existing set of fragments by replacing the ones that overlap\n    /// with a tree with content from the new tree. When `partial` is\n    /// true, the parse is treated as incomplete, and the resulting\n    /// fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    /// true.\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /// Apply a set of edits to an array of fragments, removing or\n    /// splitting fragments as necessary to remove edited ranges, and\n    /// adjusting offsets for fragments that moved.\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/// A superclass that parsers should extend.\nclass Parser {\n    /// Start a parse, returning a [partial parse](#common.PartialParse)\n    /// object. [`fragments`](#common.TreeFragment) can be passed in to\n    /// make the parse incremental.\n    ///\n    /// By default, the entire input is parsed. You can pass `ranges`,\n    /// which should be a sorted array of non-empty, non-overlapping\n    /// ranges, to parse only those ranges. The tree returned in that\n    /// case will start at `ranges[0].from`.\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /// Run a full parse, returning the resulting tree.\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/// Create a parse wrapper that, after the inner parse completes,\n/// scans its tree for mixed language regions with the `nest`\n/// function, runs the resulting [inner parses](#common.NestedParse),\n/// and then [mounts](#common.NodeProp^mounted) their results onto the\n/// tree.\n///\n/// The nesting function is passed a cursor to provide context for a\n/// node, but _should not_ move that cursor, only inspect its\n/// properties and optionally access its\n/// [node object](#common.TreeCursor.node).\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, ranges) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.ranges = ranges;\n    }\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].ranges[0].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), 1 /* Full */);\n        scan: for (let nest, isCovered; this.stoppedAt == null || cursor.from < this.stoppedAt;) {\n            let enter = true, range;\n            if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to)\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Full */;\n            }\n            else if (!cursor.type.isAnonymous && cursor.from < cursor.to && (nest = this.nest(cursor, this.input))) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay || [new Range(cursor.from, cursor.to)]);\n                    if (ranges.length)\n                        this.inner.push(new InnerParse(nest.parser, nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to)\n                    overlay.ranges.push(range);\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length)\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges));\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Full */ : 1 /* Partial */;\n    }\n    return 0 /* None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1], to = buf.buffer[endI - 2];\n        nodes.push(buf.slice(startI, endI, from, to));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, depth = 0;\n    // Scan up to the nearest tree\n    do {\n        cursor.parent();\n        depth++;\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let i = 0, base = cursor.tree, off = 0;\n    for (;; i++) {\n        off = base.positions[i] + cursor.from;\n        if (off <= node.from && off + base.children[i].length >= node.to)\n            break;\n    }\n    let buf = base.children[i], b = buf.buffer;\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length) {\n        let i = startI;\n        while (b[i + 2] + off <= node.from)\n            i = b[i + 3];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, i, children, positions, innerOffset);\n        let from = b[i + 1], to = b[i + 2];\n        let isTarget = from + off == node.from && to + off == node.to && b[i] == node.type.id;\n        children.push(isTarget ? node.toTree() : split(i + 4, b[i + 3], buf.set.types[b[i]], from, to - from));\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[i + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length);\n    // Move the cursor back to the target node\n    for (let d = 0; d <= depth; d++)\n        cursor.childAfter(node.from);\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.fullCursor();\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, false, false)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos, frag.to <= end));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos, frag.to <= endPos));\n        }\n    }\n    return result;\n}\n\nexport { DefaultBufferLength, MountedTree, NodeProp, NodeSet, NodeType, Parser, Tree, TreeBuffer, TreeCursor, TreeFragment, parseMixed };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"],"sourceRoot":""}